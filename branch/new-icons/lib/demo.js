!function(e){var l={};function t(o){if(l[o])return l[o].exports;var a=l[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=l,t.d=function(e,l,o){t.o(e,l)||Object.defineProperty(e,l,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,l){if(1&l&&(e=t(e)),8&l)return e;if(4&l&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&l&&"string"!=typeof e)for(var a in e)t.d(o,a,function(l){return e[l]}.bind(null,a));return o},t.n=function(e){var l=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(l,"a",l),l},t.o=function(e,l){return Object.prototype.hasOwnProperty.call(e,l)},t.p="",t(t.s=134)}([function(e,l){e.exports=angular},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,l){e.exports='<div class=panel> <div class=panel-heading> <h2 class=panel-title>Form components</h2> </div> <div class=panel-body ng-init="$ctrl.requirementsForm = {}"> <tw-focusable-docs></tw-focusable-docs> <hr class=m-b-5 /> <tw-amount-currency-select-docs model=$ctrl.model.components.amount currency=$ctrl.model.components.amountCurrency sizes=$ctrl.sizes> </tw-amount-currency-select-docs> <hr class=m-b-5 /> <tw-checkbox-docs model=$ctrl.model.components.checkbox> </tw-checkbox-docs> <tw-checkbox-group-docs model=$ctrl.model.components.checkboxGroup> </tw-checkbox-group-docs> <hr class=m-b-5 /> <tw-currency-input-docs model=$ctrl.model.components.currencyInput sizes=$ctrl.sizes> </tw-currency-input-docs> <hr class=m-b-5 /> <tw-date-docs model=$ctrl.model.components.date locales=$ctrl.locales sizes=$ctrl.sizes> </tw-date-docs> <hr class=m-b-5 /> <tw-date-lookup-docs model=$ctrl.model.components.dateLookup locales=$ctrl.locales sizes=$ctrl.sizes> </tw-date-lookup-docs> <hr class=m-b-5 /> <tw-drag-and-drop-docs></tw-drag-and-drop-docs> <hr class=m-b-5 /> <tw-form-control-docs model=$ctrl.model.components.dynamic locales=$ctrl.locales sizes=$ctrl.sizes> </tw-form-control-docs> <hr class=m-b-5 /> <tw-telephone-docs model=$ctrl.model.components.telephone locales=$ctrl.locales> </tw-telephone-docs> <hr class=m-b-5 /> <tw-radio-docs model=$ctrl.model.components.radio> </tw-radio-docs> <hr class=m-b-5 /> <tw-requirements-form-docs model=$ctrl.requirementsForm> </tw-requirements-form-docs> <hr class=m-b-5 /> <tw-select-docs model=$ctrl.model.components.select> </tw-select-docs> <hr class=m-b-5 /> <tw-upload-docs model=$ctrl.model.components.upload sizes=$ctrl.sizes> </tw-upload-docs> <tw-multi-upload-docs model=$ctrl.model.components.upload sizes=$ctrl.sizes> </tw-multi-upload-docs> <hr class=m-b-5 /> <tw-submit-docs sizes=$ctrl.sizes> </tw-submit-docs> </div> </div> '},function(e,l){e.exports='<h4 id=checkbox>Checkbox</h4> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label> TW Checkbox </label> <div class=checkbox> <label ng-init="$ctrl.checkbox.trueValue = \'custom-true\'; $ctrl.checkbox.falseValue = \'custom-true\';"> <tw-checkbox tw-validation ng-model=$ctrl.model ng-required=$ctrl.checkbox.required ng-disabled=$ctrl.checkbox.disabled ng-click="$ctrl.log(\'checkbox click\')" ng-change="$ctrl.log(\'checkbox change\')" ng-blur="$ctrl.log(\'checkbox blur\')" ng-focus="$ctrl.log(\'checkbox focus\')" ng-true-value="$ctrl.checkbox.customTrueFalse ? \'custom-true\' : null" ng-false-value="$ctrl.checkbox.customTrueFalse ? \'custom-false\' : null"> </tw-checkbox> TW Checkbox<span ng-if=$ctrl.checkbox.required>*</span> </label> </div> <div class="form-inline m-t-1"> <label> <tw-checkbox class=m-r-1 ng-model=$ctrl.checkbox.disabled> </tw-checkbox> Disable the checkbox above? </label> </div> </div> <h5>Configuration</h5> <pre>&lt;tw-checkbox\n  name="mySelect"\n  ng-model="{{$ctrl.model}}"\n  ng-required="{{$ctrl.checkbox.required}}"\n  ng-disabled="{{$ctrl.checkbox.disabled}}"\n  ng-change="..."\n  ng-blur="..."\n  ng-focus="..."<span ng-if=$ctrl.checkbox.customTrueFalse>\n  ng-true-value="\'custom-true\'"\n  ng-false-value="\'custom-false\'"</span>\n  tw-validation&gt;&lt;/tw-checkbox&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.checkbox.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.checkbox.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> <div class=form-group> <label class=control-label> Custom true/false values? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.checkbox.customTrueFalse></tw-checkbox> Use custom values? </label> </div> </div> <input type=submit class="btn btn-primary btn-block" value="Submit form"/> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=checkbox-group>Checkbox Group</h4> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label> TW Checkbox Group </label> <div class=checkbox> TW Checkbox<span ng-if=$ctrl.checkbox.required>*</span> <tw-checkbox-group tw-validation ng-model=$ctrl.model options=$ctrl.options ng-required=$ctrl.checkbox.required ng-disabled=$ctrl.checkbox.disabled ng-change="$ctrl.log(\'checkboxgroup change\')"> </tw-checkbox-group> </div> </div> <h5>Configuration</h5> <pre>&lt;tw-checkbox-group tw-validation\n  ng-model="$ctrl.model"\n  options="$ctrl.options"\n  ng-required="$ctrl.checkbox.required"\n  ng-disabled="$ctrl.checkbox.disabled"\n  ng-change="$ctrl.log(\'checkbox change\')"\n  tw-validation&gt;&lt;/tw-checkbox-group&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.checkbox.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.checkbox.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=radio>Radio</h4> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label> TW Radio<span ng-if=$ctrl.radio.required>*</span> </label> <div class=radio> <label> <tw-radio name=myRadio tw-validation value=one ng-value="$ctrl.radio.useNgValue ? 1 : null" ng-model=$ctrl.model ng-required=$ctrl.radio.required ng-disabled=$ctrl.radio.disabled ng-click="$ctrl.log(\'radio 1 click\')" ng-change="$ctrl.log(\'radio 1 change\')" ng-blur="$ctrl.log(\'radio 1 blur\')" ng-focus="$ctrl.log(\'radio 1 focus\')"></tw-radio> Option 1 </label> </div> <div class=radio> <label> <tw-radio name=myRadio tw-validation value=two ng-value="$ctrl.radio.useNgValue ? 2 : null" ng-model=$ctrl.model ng-required=$ctrl.radio.required ng-disabled=$ctrl.radio.disabled ng-click="$ctrl.log(\'radio 2 click\')" ng-change="$ctrl.log(\'radio 2 change\')" ng-blur="$ctrl.log(\'radio 2 blur\')" ng-focus="$ctrl.log(\'radio 2 focus\')"></tw-radio> Option 2 </label> </div> </div> <h5>Configuration</h5> <pre>&lt;tw-radio\n  name="myRadio"<span ng-if=!$ctrl.radio.useNgValue>\n  value="one"</span><span ng-if=$ctrl.radio.useNgValue>\n  ng-value="1"</span>\n  ng-model="{{$ctrl.model}}"\n  ng-required="{{$ctrl.radio.required}}"\n  ng-disabled="{{$ctrl.radio.disabled}}"\n  ng-change="..."\n  ng-focus="..."\n  ng-blur="..."\n  tw-validation&gt;&lt;/tw-radio&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.radio.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.radio.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> <div class=form-group> <label class=control-label> Non string values? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.radio.useNgValue></tw-checkbox> Uses ngValue </label> </div> </div> <input type=submit class="btn btn-primary btn-block" value="Submit form"/> </div> </div> </div> <table class=table><thead> <tr> <th colspan=2>Classes &amp; styles</th> </tr> </thead> <tbody> <tr> <td><code>.tw-radio-button</code></td> <td><button class=tw-radio-button><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button:focus</code></td> <td><button class="tw-radio-button focus"><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button.checked</code></td> <td><button class="tw-radio-button checked"><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button[disabled]</code></td> <td><button class=tw-radio-button disabled=disabled><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button.checked[disabled]</code></td> <td><button class="tw-radio-button checked" disabled=disabled><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button.has-error </code></td> <td><button class="tw-radio-button has-error"><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button.has-error.checked</code></td> <td><button class="tw-radio-button has-error checked"><span class=tw-radio-check></span></button></td> </tr> <tr> <td><code>.tw-radio-button.has-error.checked[disabled]</code></td> <td><button class="tw-radio-button has-error checked" disabled=disabled><span class=tw-radio-check></span></button></td> </tr> </tbody> </table> </form> '},function(e,l){e.exports='<h4 id=select>Select</h4> <p>Styled select box replacement, supporting the majority of the standard HTML interface for a select. The select box has full keyboard support matching native behaviour.</p> <p>The select box also maintains a hidden form input with the given name to be compatible with HTML form posts.</p> <p class="alert alert-info">The select component depends on dropwdown.js from Bootstrap.</p> <form> <div class="row m-b-3" ng-init="$ctrl.select.type = \'currencies\'"> <div class=col-md-6> <div class=form-group> <label class=control-label for=mySelect> Example select </label> <tw-select tw-validation ng-if=!$ctrl.select.extraLink name=mySelect placeholder={{$ctrl.select.empty}} ng-model=$ctrl.model ng-change="$ctrl.log(\'select change, val: \'+$ctrl.model)" ng-required=$ctrl.select.required ng-disabled=$ctrl.select.disabled ng-focus="$ctrl.log(\'select focus\')" ng-blur="$ctrl.log(\'select blur\')" options=$ctrl.select.options[$ctrl.select.type] filter={{$ctrl.select.showFilter}} size={{$ctrl.select.size}} dropdown-right={{$ctrl.select.dropdownRight}} dropdown-width={{$ctrl.select.dropdownWidth}} dropdown-up={{$ctrl.select.dropdownUp}} inverse=$ctrl.select.inverse hide-note={{$ctrl.select.hideNote}} hide-secondary={{$ctrl.select.hideSecondary}} hide-icon={{$ctrl.select.hideIcon}} hide-currency={{$ctrl.select.hideCurrency}} hide-circle={{$ctrl.select.hideCircle}} hide-label={{$ctrl.select.hideLabel}}> </tw-select> <tw-select tw-validation ng-if=$ctrl.select.extraLink name=mySelect placeholder={{$ctrl.select.empty}} ng-model=$ctrl.model ng-change="$ctrl.log(\'select change, val: \'+$ctrl.model)" ng-required=$ctrl.select.required ng-disabled=$ctrl.select.disabled ng-focus="$ctrl.log(\'select focus\')" ng-blur="$ctrl.log(\'select blur\')" options=$ctrl.select.options[$ctrl.select.type] filter={{$ctrl.select.showFilter}} size={{$ctrl.select.size}} dropdown-right={{$ctrl.select.dropdownRight}} dropdown-up={{$ctrl.select.dropdownUp}} dropdown-width={{$ctrl.select.dropdownWidth}} inverse=$ctrl.select.inverse hide-note={{$ctrl.select.hideNote}} hide-secondary={{$ctrl.select.hideSecondary}} hide-icon={{$ctrl.select.hideIcon}} hide-currency={{$ctrl.select.hideCurrency}} hide-circle={{$ctrl.select.hideCircle}} hide-label={{$ctrl.select.hideLabel}}> <a href="" ng-click="$ctrl.log(\'click\')"> Custom action </a> </tw-select> <div class=error-messages> <div class=error-required>Required</div> </div> <docs-status-messages></docs-status-messages> </div> <div class="form-inline m-b-3 visible-xs-inline-block visible-sm-inline-block visible-md-inline-block visible-lg-inline-block visible-xl-inline-block"> <tw-select tw-validation ng-if=!$ctrl.select.extraLink name=mySelect placeholder={{$ctrl.select.empty}} ng-model=$ctrl.model ng-change="$ctrl.log(\'select change, val: \'+$ctrl.model)" ng-required=$ctrl.select.required ng-disabled=$ctrl.select.disabled ng-focus="$ctrl.log(\'select focus\')" ng-blur="$ctrl.log(\'select blur\')" options=$ctrl.select.options[$ctrl.select.type] filter={{$ctrl.select.showFilter}} size={{$ctrl.select.size}} dropdown-right={{$ctrl.select.dropdownRight}} dropdown-up={{$ctrl.select.dropdownUp}} dropdown-width={{$ctrl.select.dropdownWidth}} inverse=$ctrl.select.inverse hide-note={{$ctrl.select.hideNote}} hide-secondary={{$ctrl.select.hideSecondary}} hide-icon={{$ctrl.select.hideIcon}} hide-currency={{$ctrl.select.hideCurrency}} hide-circle={{$ctrl.select.hideCircle}} hide-label={{$ctrl.select.hideLabel}}> </tw-select> <tw-select tw-validation ng-if=$ctrl.select.extraLink name=mySelect placeholder={{$ctrl.select.empty}} ng-model=$ctrl.model ng-change="$ctrl.log(\'select change, val: \'+$ctrl.model)" ng-required=$ctrl.select.required ng-disabled=$ctrl.select.disabled ng-focus="$ctrl.log(\'select focus\')" ng-blur="$ctrl.log(\'select blur\')" options=$ctrl.select.options[$ctrl.select.type] filter={{$ctrl.select.showFilter}} size={{$ctrl.select.size}} dropdown-right={{$ctrl.select.dropdownRight}} dropdown-up={{$ctrl.select.dropdownUp}} dropdown-width={{$ctrl.select.dropdownWidth}} inverse=$ctrl.select.inverse hide-note={{$ctrl.select.hideNote}} hide-secondary={{$ctrl.select.hideSecondary}} hide-icon={{$ctrl.select.hideIcon}} hide-currency={{$ctrl.select.hideCurrency}} hide-circle={{$ctrl.select.hideCircle}} hide-label={{$ctrl.select.hideLabel}}> </tw-select> </div> <h5>Configuration</h5> <pre>&lt;tw-select\n  name="mySelect"\n  placeholder="{{$ctrl.select.empty}}"<span ng-if=$ctrl.select.showFilter>\n  filter="Search..."</span>\n  ng-model="{{$ctrl.model}}"\n  ng-required="{{$ctrl.select.required}}"\n  ng-disabled="{{$ctrl.select.disabled}}"\n  ng-change="..."\n  ng-focus="..."\n  ng-blur="..."<span ng-if=$ctrl.select.size>\n  size="{{$ctrl.select.size}}"</span><span ng-if=$ctrl.select.inverse>\n  inverse="{{$ctrl.select.inverse}}"</span><span ng-if=$ctrl.select.dropdownRight>\n  dropdown-right="{{$ctrl.select.dropdownRight}}"</span><span ng-show=$ctrl.select.dropdownUp>\n  dropdown-up="{{$ctrl.select.dropdownUp}}"</span><span ng-if=$ctrl.select.dropdownWidth>\n  dropdown-width="{{$ctrl.select.dropdownWidth}}"</span><span ng-if=$ctrl.select.hideNote>\n  hide-note="{{$ctrl.select.hideNote}}"</span><span ng-if=$ctrl.select.hideSecondary>\n  hide-secondary="{{$ctrl.select.hideSecondary}}"</span><span ng-if=$ctrl.select.hideIcon>\n  hide-icon="{{$ctrl.select.hideIcon}}"</span><span ng-if=$ctrl.select.hideCurrency>\n  hide-currency="{{$ctrl.select.hideCurrency}}"</span><span ng-if=$ctrl.select.hideCircle>\n  hide-circle="{{$ctrl.select.hideCircle}}"</span><span ng-show=$ctrl.select.hideLabel>\n  hide-label="{{$ctrl.select.hideLabel}}"</span>\n  options="{{$ctrl.select.options[$ctrl.select.type] | json}}"\n  tw-validation<span ng-if=!$ctrl.select.extraLink> /&gt;</span><span ng-if=$ctrl.select.extraLink>&gt;\n    &lt;a href=\'\' ng-click=\'...\'&gt;\n      Custom action\n    &lt;/a&gt;\n  &lt;/tw-select&gt;</span>\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.select.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.select.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> <div class=form-group> <label class=control-label> Empty value </label> <input class=form-control ng-model=$ctrl.select.empty /> </div> <div class=form-group> <label class=control-label> Options type </label> <tw-select options=$ctrl.select.types ng-model=$ctrl.select.type></tw-select> </div> <div class=form-group> <label class=control-label> Show filter? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.select.showFilter ng-true-value="\'Search...\'" ng-false-value=false></tw-checkbox> Allow user to filter list? </label> </div> </div> <div class=form-group> <label class=control-label> Additional link? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.select.extraLink></tw-checkbox> Option with custom action? </label> </div> </div> <div class="form-group m-b-2"> <label class=control-label> Presentation config </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.select.inverse></tw-checkbox> Invert the colours? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.select.dropdownUp></tw-checkbox> Make the dropdown open upward </label> </div> </div> <div class="form-group m-b-2"> <tw-select placeholder="Button size..." ng-model=$ctrl.select.size options=$ctrl.buttonSizes> </tw-select> </div> <div class="form-group m-b-2"> <tw-select placeholder="Dropdown width..." ng-model=$ctrl.select.dropdownWidth options=$ctrl.dropdownSizes> </tw-select> </div> <div class="form-group m-b-2"> <tw-select placeholder="Dropdown on right..." ng-model=$ctrl.select.dropdownRight options=$ctrl.gridSizes> </tw-select> </div> <div class=form-group> <label>Hide selected circle?</label> <tw-select placeholder="Choose breakpoint" ng-model=$ctrl.select.hideCircle options=$ctrl.hideOptions> </tw-select> </div> <div class=form-group> <label>Hide selected note?</label> <tw-select placeholder="Choose breakpoint" ng-model=$ctrl.select.hideNote options=$ctrl.hideOptions> </tw-select> </div> <div class=form-group> <label class=control-label>Hide selected secondary text?</label> <tw-select placeholder="Choose breakpoint" ng-model=$ctrl.select.hideSecondary options=$ctrl.hideOptions> </tw-select> </div> <div class=form-group> <label class=control-label>Hide selected currency flag?</label> <tw-select placeholder="Choose breakpoint" ng-model=$ctrl.select.hideCurrency options=$ctrl.hideOptions> </tw-select> </div> <div class=form-group> <label class=control-label>Hide selected icon?</label> <tw-select placeholder="Choose breakpoint" ng-model=$ctrl.select.hideIcon options=$ctrl.hideOptions> </tw-select> </div> <div class=form-group> <label class=control-label>Hide selected label?</label> <tw-select placeholder="Choose breakpoint" ng-model=$ctrl.select.hideLabel options=$ctrl.hideOptions> </tw-select> </div> <input type=submit class="btn btn-primary btn-block" value="Submit form"/> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=upload>Upload</h4> <p><code>tw-upload</code> is a component for uploading a single file. It is designed to be used multiple times when more than one file is required.</p> <ul> <li>Files can be saved immediately by passing in a set of <code>http-options</code>, to be used with Angular\'s <a href=https://docs.angularjs.org/api/ng/service/$http target=_new>$http service</a>.</li> <li>If an <code>ngModel</code> binding is supplied the component will bind the base64 encoded file to that property, ready for an asynchronous <code>multipart/form-data</code> POST.</li> <li>The component also contains an HTML file input which can be submitted in a standard <code>multipart/form-data</code> form (which requires a <code>name</code>).</li> </ul> <p>A number of event handlers are available during the component lifecycle:</p> <ul> <li><p><code>on-start(File)</code> - fired when we start processing the file, the file object is passed to the handler, containing the size, name, and type of the file (but not the data, use ngModel).</p></li> <li><p><code>on-success($httpResponse)</code> - fired when we successfully process the file and internal animations are complete. The success handler will be passed the response from the $http service if <code>http-options</code> were supplied.</p></li> <li><p><code>on-failure($httpResponse)</code> - fired when we fail to process the file after internal animations finish. The failure handler will be passed the response from the $http service if <code>http-options</code> were supplied.</p> <p>If you supply a <code>max-size</code> the component will validate client side and fail with an $httResponse, status: \'413 - Request Entity Too Large\'. For all other errors, interrogate the response and supply an appropriate <code>error-message</code> to the component</p> </li> <li><p><code>on-cancel()</code> - fired when we reset the control to it\'s initial state ready to accept a new file.</p></li> </ul> <p>The component\'s post upload screen can be fully customised by transcluding new content to replace the default behaviour.</p> <pre>\n&lt;tw-upload ...&gt;\n  &lt;custom-success-screen /&gt;\n&lt;/tw-upload&gt;\n</pre> <form action=/file method=POST enctype=multipart/form-data> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <tw-upload ng-model=$ctrl.modelToBind ng-change="$ctrl.log(\'model change\')" name=$ctrl.name icon={{$ctrl.icon}} size={{$ctrl.size}} accept={{$ctrl.accept}} max-size=$ctrl.maxSize label={{$ctrl.label}} placeholder={{$ctrl.placeholder}} button-text={{$ctrl.buttonText}} cancel-text={{$ctrl.cancelText}} too-large-message={{$ctrl.tooLargeMessage}} error-message={{$ctrl.errorMessage}} dropping-text={{$ctrl.droppingText}} processing-text={{$ctrl.processingText}} success-text={{$ctrl.successText}} failure-text={{$ctrl.failureText}} no-camera-text={{$ctrl.noCameraText}} no-camera-message={{$ctrl.noCameraMessage}} on-start=$ctrl.onStart on-success=$ctrl.onSuccess on-failure=$ctrl.onFailure on-cancel=$ctrl.onCancel http-options=$ctrl.httpOptions ng-disabled=$ctrl.ngDisabled source=$ctrl.source camera-guidelines=$ctrl.cameraGuidelines></tw-upload> </div> <h5>Configuration</h5> <pre>&lt;tw-upload\n  ng-model="{{ $ctrl.model.length > 30 ? ($ctrl.model | limitTo : 30) + \'...\' : $ctrl.model }}"\n  name="{{$ctrl.name}}"<span ng-if=$ctrl.icon>\n  icon="{{$ctrl.icon}}"</span><span ng-if="$ctrl.size !== \'md\'">\n  size="{{$ctrl.size}}"</span><span ng-if=$ctrl.label>\n  label="{{$ctrl.label}}"</span>\n  placeholder="{{$ctrl.placeholder}}"\n  button-text="{{$ctrl.buttonText}}"\n  cancel-text="{{$ctrl.cancelText}}"<span ng-if=$ctrl.accept>\n  accept="{{$ctrl.accept}}"</span><span ng-if=$ctrl.wrongTypeText>\n  wrong-type-text="{{$ctrl.wrongTypeMessage}}"</span><span ng-if=$ctrl.maxSize>\n  max-size="{{$ctrl.maxSize}}"\n  too-large-message="{{$ctrl.tooLargeMessage}}"</span><span ng-if=$ctrl.droppingText>\n  dropping-text="{{$ctrl.droppingText}}"</span><span ng-if=$ctrl.processingText>\n  processing-text="{{$ctrl.processingText}}"</span><span ng-if=$ctrl.successText>\n  success-text="{{$ctrl.successText}}"</span><span ng-if=$ctrl.failureText>\n  failure-text="{{$ctrl.failureText}}"</span><span ng-if=$ctrl.noCameraText>\n  no-camera-text="{{$ctrl.noCameraText}}"</span><span ng-if=$ctrl.noCameraMessage>\n  no-camera-message="{{$ctrl.noCameraMessage}}"</span><span ng-if=$ctrl.httpOptions>\n  http-options="{{$ctrl.httpOptions}}"</span><span ng-if=$ctrl.errorMessage>\n  error-message="{{$ctrl.errorMessage}}"</span>\n  on-start="$ctrl.onStart"\n  on-success="$ctrl.onSuccess"\n  on-failure="$ctrl.onFailure"\n  on-cancel="$ctrl.onCancel"<span ng-if=$ctrl.cameraGuidelines>\n  camera-guidelines="$ctrl.cameraGuidelines"</span><span ng-if=$ctrl.source>\n  source="{{$ctrl.source}}"</span><span ng-if=$ctrl.ngDisabled>\n  ng-disabled="{{$ctrl.ngDisabled}}"</span>&gt;\n&lt;/tw-upload&gt;\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration <button type=button class="btn btn-sm btn-default pull-xs-right" ng-click=$ctrl.makeFancy()>Make fancy</button> </h5> <div class=form-group ng-init="$ctrl.size = \'md\'"> <label class=control-label> File Source </label> <tw-select placeholder="File Source" ng-model=$ctrl.source options=$ctrl.sources></tw-select> </div> <div class=form-group ng-if="$ctrl.source == \'CAMERA_ONLY\'" ng-init="$ctrl.size = \'md\'"> <label class=control-label> Camera Direction </label> <tw-select placeholder="Camera Direction" ng-model=$ctrl.cameraGuidelines.direction options=$ctrl.cameraDirections></tw-select> </div> <div class=form-group ng-if="$ctrl.source == \'CAMERA_ONLY\'" ng-init="$ctrl.cameraGuidelines.outline = \'images/sample-camera-outline.png\'"> <label class=control-label> Camera Outline Image URL </label> <input type=text class=form-control ng-model=$ctrl.cameraGuidelines.outline /> </div> <div class=form-group ng-if="$ctrl.source == \'CAMERA_ONLY\'"> <label class=control-label> Camera Overlay (mask) Image URL </label> <input type=text class=form-control ng-model=$ctrl.cameraGuidelines.overlay placeholder="Not yet supported"/> </div> <div class=form-group ng-init="$ctrl.name = \'file\'"> <label class=control-label> Name of the form field </label> <input type=text class=form-control ng-model=$ctrl.name /> </div> <div class=form-group> <label class=control-label> Label </label> <input type=text class=form-control ng-model=$ctrl.label /> </div> <div class=form-group ng-init="$ctrl.placeholder = \'Drag and drop a file less than 1MB\'"> <label class=control-label> Placeholder text </label> <input type=text class=form-control ng-model=$ctrl.placeholder /> </div> <div class=form-group ng-init="$ctrl.buttonText = \'Or choose file\'"> <label class=control-label> Button text </label> <input type=text class=form-control ng-model=$ctrl.buttonText /> </div> <div class=form-group ng-init="$ctrl.cancelText = \'Choose a different file?\'"> <label class=control-label> Cancel text </label> <input type=text class=form-control ng-model=$ctrl.cancelText /> </div> <div class=form-group> <label class=control-label> Icon </label> <tw-select placeholder="Default icon" ng-model=$ctrl.icon options=$ctrl.icons> </tw-select> </div> <div class=form-group> <label class=control-label> Dropping text </label> <input type=text class=form-control ng-model=$ctrl.droppingText /> </div> <div class=form-group> <label class=control-label> Processing text </label> <input type=text class=form-control ng-model=$ctrl.processingText /> </div> <div class=form-group> <label class=control-label> Success text </label> <input type=text class=form-control ng-model=$ctrl.successText /> </div> <div class=form-group> <label class=control-label> Failure text </label> <input type=text class=form-control ng-model=$ctrl.failureText /> </div> <div class=form-group> <label class=control-label> No-camera text </label> <input type=text class=form-control ng-model=$ctrl.noCameraText /> </div> <div class=form-group> <label class=control-label> No-camera message </label> <input type=text class=form-control ng-model=$ctrl.noCameraMessage /> </div> <div class=form-group> <span class=control-label>Toggles</span> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.httpOptions ng-true-value="{url: \'json/image-upload.json\', idProperty: \'id\'}" ng-false-value=false> </tw-checkbox> POST immmediately? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.httpOptions ng-true-value="{url: \'404\'}" ng-false-value=false> </tw-checkbox> Post to a 404 for testing? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.ngDisabled> </tw-checkbox> Disabled? </label> </div> </div> <div class=form-group ng-init="$ctrl.size = \'md\'"> <label class=control-label> Size </label> <tw-select placeholder=Size ng-required=true ng-model=$ctrl.size options=$ctrl.sizes></tw-select> </div> <div class=form-group ng-init="$ctrl.accept = \'image/*\'"> <label class=control-label> Accept (CSV of file extensions) </label> <tw-select placeholder="Any file type" ng-model=$ctrl.accept options=$ctrl.acceptOptions> </tw-select> </div> <div class=form-group ng-init="$ctrl.maxSize = 50000"> <label class=control-label> Max file size </label> <input type=number step=1 class=form-control ng-model=$ctrl.maxSize /> </div> <div class=form-group ng-init="$ctrl.tooLargeMessage = \'The file must be smaller than 1Mb\'"> <label class=control-label> Too large message </label> <input type=text class=form-control ng-model=$ctrl.tooLargeMessage /> </div> <div class=form-group> <label class=control-label> Error message </label> <input type=text class=form-control ng-model=$ctrl.errorMessage placeholder="Populate using on-failure..."/> </div> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=multi-upload-demo>Multi Upload</h4> <p><code>tw-multi-upload</code> is a component for uploading multiple files. </p> <ul> <li>Files can be saved immediately by passing in a set of <code>http-options</code>, to be used with Angular\'s <a href=https://docs.angularjs.org/api/ng/service/$http target=_new>$http service</a>.</li> <li>If an <code>ngModel</code> binding is supplied the component will bind the array of base64 encoded files to that property, ready for an asynchronous <code>multipart/form-data</code> POST.</li> <li>The component does NOT contain an HTML file input which can be submitted in a standard <code>multipart/form-data</code> form </li> </ul> <p>A number of event handlers are available during the component lifecycle:</p> <ul> <li><p><code>on-start()</code> - fired when we start processing the files. If more files are added whilst files are still being processed the event is not fired.</p></li> <li><p><code>on-finish()</code> - fired when all files which are in the processing screen have finished. If http-options are passed then the finish event is fired when all the files have been uploaded to the server.</p></li> <li><p><code>on-failure(error)</code> - fired when a file has failed. The error is available in which an error message can be extracted.</p></li> <li><p><code>response-error-extractor(error)</code> - called when an error occurs on upload. Provide this function when you want to extract an error message from the response. The provided function should return the string you want to display</p></li> </ul> <form action=/file method=POST enctype=multipart/form-data> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <tw-multi-upload ng-model=$ctrl.model ng-change="$ctrl.log(\'test\')" name=$ctrl.name accept={{$ctrl.accept}} max-size=$ctrl.maxSize label={{$ctrl.label}} placeholder={{$ctrl.placeholder}} button-text={{$ctrl.buttonText}} add-more-button-text={{$ctrl.addMoreButtonText}} cancel-text={{$ctrl.cancelText}} too-large-message={{$ctrl.tooLargeMessage}} dropping-text={{$ctrl.droppingText}} processing-text={{$ctrl.processingText}} success-text={{$ctrl.successText}} failure-text={{$ctrl.failureText}} on-start=$ctrl.onStart() on-finish=$ctrl.onFinish() on-failure=$ctrl.onFailure(error) response-error-extractor=$ctrl.responseErrorExtractor(error) http-options=$ctrl.httpOptions ng-disabled=$ctrl.ngDisabled></tw-multi-upload> </div> <h5>Configuration</h5> <pre>&lt;tw-multi-upload\n  ng-model= [<div ng-repeat="item in $ctrl.model track by $index"><span>"{{ item.length > 30 ? (item | limitTo : 30) + \'...\' : item }}"</span></div>]\n  name="{{$ctrl.name}}"<span ng-if=$ctrl.icon>\n  icon="{{$ctrl.icon}}"</span><span ng-if="$ctrl.size !== \'md\'">\n  size="{{$ctrl.size}}"</span><span ng-if=$ctrl.label>\n  label="{{$ctrl.label}}"</span>\n  placeholder="{{$ctrl.placeholder}}"\n  button-text="{{$ctrl.buttonText}}"<span ng-if=$ctrl.accept>\n  accept="{{$ctrl.accept}}"</span><span ng-if=$ctrl.wrongTypeText>\n  wrong-type-text="{{$ctrl.wrongTypeMessage}}"</span><span ng-if=$ctrl.maxSize>\n  max-size="{{$ctrl.maxSize}}"\n  too-large-message="{{$ctrl.tooLargeMessage}}"</span><span ng-if=$ctrl.droppingText>\n  dropping-text="{{$ctrl.droppingText}}"</span><span ng-if=$ctrl.processingText>\n  processing-text="{{$ctrl.processingText}}"</span><span ng-if=$ctrl.successText>\n  success-text="{{$ctrl.successText}}"</span><span ng-if=$ctrl.httpOptions>\n  http-options="{{$ctrl.httpOptions}}"</span><span ng-if=$ctrl.errorMessage>\n  error-message="{{$ctrl.errorMessage}}"</span><span ng-if=$ctrl.addMoreButtonText>\n  add-more-button-text="{{$ctrl.addMoreButtonText}}"</span>\n  on-start="$ctrl.onStart"\n  on-finish="$ctrl.onFinish"\n  on-failure="$ctrl.onFailure(error)"\n  response-error-extractor="$ctrl.responseErrorExtractor(error)"\n  <span ng-if=$ctrl.source>\n  source="{{$ctrl.source}}"</span><span ng-if=$ctrl.ngDisabled>\n  ng-disabled="{{$ctrl.ngDisabled}}"</span>&gt;\n&lt;/tw-multi-upload&gt;\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group ng-init="$ctrl.name = \'file\'"> <label class=control-label> Name of the form field </label> <input type=text class=form-control ng-model=$ctrl.name /> </div> <div class=form-group> <label class=control-label> Label </label> <input type=text class=form-control ng-model=$ctrl.label /> </div> <div class=form-group ng-init="$ctrl.placeholder = \'Drag and drop files less than 5MB\'"> <label class=control-label> Placeholder text </label> <input type=text class=form-control ng-model=$ctrl.placeholder /> </div> <div class=form-group ng-init="$ctrl.buttonText = \'Select files\'"> <label class=control-label> Button text </label> <input type=text class=form-control ng-model=$ctrl.buttonText /> </div> <div class=form-group ng-init="$ctrl.addMoreButtonText = \'Add more files\'"> <label class=control-label> Add more button text </label> <input type=text class=form-control ng-model=$ctrl.addMoreButtonText /> </div> <div class=form-group> <label class=control-label> Dropping text </label> <input type=text class=form-control ng-model=$ctrl.droppingText /> </div> <div class=form-group> <label class=control-label> Processing text </label> <input type=text class=form-control ng-model=$ctrl.processingText /> </div> <div class=form-group> <label class=control-label> Success text </label> <input type=text class=form-control ng-model=$ctrl.successText /> </div> <div class=form-group> <label class=control-label> Failure text </label> <input type=text class=form-control ng-model=$ctrl.failureText /> </div> <div class=form-group> <span class=control-label>Toggles</span> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.httpOptions ng-true-value="{url: \'json/image-upload.json\', idProperty: \'id\'}" ng-false-value=false> </tw-checkbox> POST immmediately? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.httpOptions ng-true-value="{url: \'404\'}" ng-false-value=false> </tw-checkbox> Post to a 404 for testing? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.ngDisabled> </tw-checkbox> Disabled? </label> </div> </div> <div class=form-group ng-init="$ctrl.size = \'md\'"> <label class=control-label> Size </label> <tw-select placeholder=Size ng-required=true ng-model=$ctrl.size options=$ctrl.sizes></tw-select> </div> <div class=form-group ng-init="$ctrl.accept = \'image/*\'"> <label class=control-label> Accept (CSV of file extensions) </label> <tw-select placeholder="Any file type" ng-model=$ctrl.accept options=$ctrl.acceptOptions> </tw-select> </div> <div class=form-group ng-init="$ctrl.maxSize = 50000"> <label class=control-label> Max file size </label> <input type=number step=1 class=form-control ng-model=$ctrl.maxSize /> </div> <div class=form-group ng-init="$ctrl.tooLargeMessage = \'The file must be smaller than 1Mb\'"> <label class=control-label> Too large message </label> <input type=text class=form-control ng-model=$ctrl.tooLargeMessage /> </div> <div class=form-group> <label class=control-label> Error message </label> <input type=text class=form-control ng-model=$ctrl.errorMessage placeholder="Populate using on-failure..."/> </div> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=date>Date</h4> <p>Two way data binding via ng-model, with either a javascript Date object or an ISO8601 String date: 1994-11-05T08:15:30-05:00</p> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label for=date> Example date control </label> <tw-date name=date tw-validation ng-model=$ctrl.model ng-required=$ctrl.date.required ng-disabled=$ctrl.date.disabled ng-change="$ctrl.log(\'date change\')" locale={{$ctrl.date.locale}} min=1990-01-01 max=2015-12-31></tw-date> <div class=error-messages> <div class=error-required>Required</div> <div class=error-min>Too early</div> <div class=error-max>Too late</div> </div> <docs-status-messages></docs-status-messages> </div> <h5>Configuration</h5> <pre>&lt;tw-date\n  ng-model="{{$ctrl.model}}"\n  ng-required="{{$ctrl.date.required}}"\n  ng-disabled="{{$ctrl.date.disabled}}"\n  locale="{{$ctrl.date.locale}}"\n  min="1990-01-01"\n  max="2015-12-31"\n  ng-change="..."\n  tw-validation /&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.date.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.date.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> <div class=form-group ng-init="$ctrl.date.locale = \'en-GB\';"> <label class=control-label> Locale </label> <tw-select options=$ctrl.locales ng-model=$ctrl.date.locale ng-init="$ctrl.date.locale = \'en-GB\'"> </tw-select> </div> <input type=submit class="btn btn-primary btn-block" value="Submit form"/> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=date-lookup>Tw Date Lookup</h4> <p>The date lookup is useful for selecting dates that are relatively recent, and can be used in a pair for date ranges.</p> <p>If your date is likely to be further in the past (e.g. Date of birth), use twDate instead.</p> <div class="row m-b-5"> <div class=col-sm-6> <div class=form-group> <label class=control-label> Example date lookup </label> <tw-date-lookup ng-model=$ctrl.model ng-required=$ctrl.dateLookup.required ng-disabled=$ctrl.dateLookup.disabled ng-min=$ctrl.dateLookup.min ng-max=$ctrl.dateLookup.max short-date=$ctrl.dateLookup.shortDate ng-change="$ctrl.log(\'date lookup change: \' + $ctrl.model)" ng-focus="$ctrl.log(\'date lookup focus\')" ng-blur="$ctrl.log(\'date lookup blur\')" placeholder={{$ctrl.dateLookup.placeholder}} locale={{$ctrl.dateLookup.locale}} size={{$ctrl.dateLookup.size}} label={{$ctrl.dateLookup.label}} tw-validation></tw-date-lookup> </div> <h5>Configuration</h5> <pre>\n&lt;tw-date-lookup\n  placeholder="{{$ctrl.dateLookup.placeholder}}"\n  locale="{{$ctrl.dateLookup.locale}}"\n  ng-model={{$ctrl.model}}<span ng-if=$ctrl.dateLookup.required>\n  ng-required="{{$ctrl.dateLookup.required}}"</span><span ng-if=$ctrl.dateLookup.disabled>\n  ng-disabled="{{$ctrl.dateLookup.disabled}}"</span><span ng-if=$ctrl.dateLookup.min>\n  ng-min={{$ctrl.dateLookup.min}}</span><span ng-if=$ctrl.dateLookup.max>\n  ng-max={{$ctrl.dateLookup.max}}</span><span ng-if=$ctrl.dateLookup.shortDate>\n  short-date="{{$ctrl.dateLookup.shortDate}}"</span>\n  ng-change="..."\n  ng-focus="..."\n  ng-blur="..."<span ng-if=$ctrl.dateLookup.size>\n  size={{$ctrl.dateLookup.size}}</span>&gt;\n&lt;/tw-date-lookup&gt;\n    </pre> </div> <div class=col-sm-6> <div class=well> <h5 class=page-header>Edit configuration</h5> <div class=form-group ng-init="$ctrl.dateLookup.placeholder = \'Choose date...\'"> <label class=control-label>Placeholder</label> <input type=text class=form-control ng-model=$ctrl.dateLookup.placeholder /> </div> <div class=form-group ng-init="$ctrl.dateLookup.locale = \'en-GB\'"> <label class=control-label>Locale</label> <tw-select options=$ctrl.locales ng-model=$ctrl.dateLookup.locale></tw-select> </div> <div class=form-group> <label class=control-label>Min Date</label> <tw-date-lookup ng-model=$ctrl.dateLookup.min ng-max=$ctrl.dateLookup.max placeholder="Choose min date..." locale={{$ctrl.dateLookup.locale}}></tw-date-lookup> </div> <div class=form-group> <label class=control-label>Max Date</label> <tw-date-lookup ng-model=$ctrl.dateLookup.max ng-min=$ctrl.dateLookup.min placeholder="Choose max date..." locale={{$ctrl.dateLookup.locale}}></tw-date-lookup> </div> <div class=form-group> <label class=control-label>Size</label> <tw-select placeholder=Size... ng-model=$ctrl.dateLookup.size options=$ctrl.sizes></tw-select> </div> <div class=form-group> <label class=control-label>Inline label</label> <input type=text class=form-control ng-model=$ctrl.dateLookup.label /> </div> <div class=form-group> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.dateLookup.shortDate></tw-checkbox> Short Date? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.dateLookup.disabled></tw-checkbox> Disabled? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.dateLookup.required></tw-checkbox> Required? </label> </div> </div> </div> </div> </div> '},function(e,l){e.exports='<h4 id=telephone>Telephone</h4> <p>A control for inputting telephone numbers. While the control allows common special characters (spaces, periods, hyphens), these are stripped from the resulting model, which always begins with a \'+\' and contains the numerals without ornamentation e.g. +1234567890.</p> <p>When prefilled with an existing value, the select box will choose the longest matching prefix. For example, \'+1684123456\' will select \'+1684\' (American Samoa), not \'+1\' (United States).</p> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label for=telephone> Example phone number control </label> <tw-telephone name=telephone ng-model=$ctrl.model ng-change=$ctrl.log($ctrl.model) ng-required=$ctrl.telephone.required ng-disabled=$ctrl.telephone.disabled locale="{{ $ctrl.locale }}" placeholder="{{ $ctrl.placeholder }}" search-placeholder=Prefix> </tw-telephone> <div class=error-messages> <div class=error-required>Required</div> <div class=error-pattern>Invalid characters</div> <div class=error-minlength>Too short</div> </div> <docs-status-messages></docs-status-messages> </div> <h5>Configuration</h5> <pre>&lt;tw-telephone\n  ng-model="{{ $ctrl.model }}"<span ng-if=$ctrl.telephone.required>\n  ng-required="{{ $ctrl.telephone.required }}"</span><span ng-if=$ctrl.telephone.disabled>\n  ng-disabled="{{ $ctrl.telephone.disabled }}"</span>\n  ng-change="$ctrl.log($ctrl.model)"\n  locale="{{ $ctrl.locale }}"\n  placeholder="{{ $ctrl.placeholder }}"\n  search-placeholder="Prefix"\n  tw-validation /&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.telephone.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.telephone.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> <div class=form-group> <label class=control-label> Placeholder </label> <input class=form-control ng-model=$ctrl.placeholder /> </div> <div class=form-group ng-init="$ctrl.locale = \'en-GB\';"> <label class=control-label> Locale </label> <tw-select options=$ctrl.locales ng-model=$ctrl.locale> </tw-select> </div> <div class=form-group> <label class=control-label> Model passed </label> <input type=text class=form-control ng-model=$ctrl.model /> </div> <input type=submit class="btn btn-primary btn-block" value="Submit form"/> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=submit>Submit</h4> <p>A submit buttons for forms, providing feedback to the customer.</p> <div class="row m-b-3"> <div class=col-md-6> <form ng-submit=$ctrl.onSubmit() class=m-b-3> <div class="form-group m-b-2" ng-init="$ctrl.shouldSucceed = true;"> <label class=control-label for=telephone> Should submit succeed? </label> <div class=radio> <label> <tw-radio ng-model=$ctrl.shouldSucceed ng-value=true></tw-radio> Yes </label> </div> <div class="radio m-t-2"> <label> <tw-radio ng-model=$ctrl.shouldSucceed ng-value=false></tw-radio> No </label> </div> </div> <tw-submit label=$ctrl.label promise=$ctrl.promise on-submit="$ctrl.log(\'submit\')" on-success="$ctrl.log(\'success\')" on-failure="$ctrl.log(\'failure\')" ng-disabled=$ctrl.disabled> </tw-submit> <input type=submit value="Submit via form" class="btn btn-default btn-block m-t-2"/> </form> <h5>Configuration</h5> <pre>\n&lt;form ng-submit="$ctrl.promise = $http.post(...)"&gt;\n  &lt;div class="form-group"&gt;...&lt;/div&gt;\n  &lt;tw-submit\n    label="{{ $ctrl.label }}"\n    promise="$ctrl.promise"\n    on-submit="$ctrl.log(\'submit\')"\n    on-success="$ctrl.log(\'success\')"\n    on-failure="$ctrl.log(\'failure\')"<span ng-if=$ctrl.disabled>\n    ng-disabled="{{ $ctrl.disabled }}"</span>&gt;\n  &lt;/tw-submit&gt;\n&lt;/form&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group ng-init="$ctrl.label = \'Submit\';"> <label class=control-label> Label </label> <input type=text class=form-control ng-model=$ctrl.label /> </div> <div class="form-group m-b-0"> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> </div> </div> </div> '},function(e,l){e.exports='<div class="row m-b-3"> <div class=col-md-6> <h4 id=drag-and-drop>Drag and Drop</h4> <p>Drag and drop is achieved by a trio of attribute directives that let you respond to the users drag and drop behaviour. There are three directives:</p> <ul> <li><code>twDragEnter</code> - Fires when the mouse enters the element\'s perimeter while dragging a file.</li> <li><code>twDragLeave</code> - Fires when the mouse exits the element\'s perimeter while dragging a file.</li> <li><code>twDrop</code> - Fires when files are dropped within the element\'s perimeter.</li> </ul> <p>Use <code>twDragEnter</code> and <code>twDragLeave</code> to customise the UI while the user is dragging. <code>twDrop</code> provides an array of <code>files</code> as the first parameter to the callback you provide.</p> </div> <div class=col-md-6> <div class=form-group> <div class=well tw-drop=$ctrl.onDrop(files) tw-drag-enter=$ctrl.onEnter() tw-drag-leave=$ctrl.onLeave()> <h3 ng-if="!$ctrl.dragging && !$ctrl.dropped"> Drag and drop a file here </h3> <h3 ng-if="$ctrl.dragging && !$ctrl.dropped"> Now drop the file! </h3> <h3 ng-if="!$ctrl.dragging && $ctrl.dropped"> Got it! </h3> </div> </div> <h5>Configuration</h5> <pre>&lt;div\n  tw-drop="$ctrl.onDrop(files)\n  tw-drag-enter="$ctrl.onDragEnter()"\n  tw-drag-leave="$ctrl.onDragLeave()""&gt;\n&lt;/div&gt;\n</pre> </div> </div> '},function(e,l){e.exports='<h4 id=currency-input>Currency Input</h4> <p>Two way data binding via ng-model</p> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label> How much? </label> <tw-currency-input tw-validation currency=$ctrl.currencyInput.currency placeholder="{{ $ctrl.currencyInput.placeholder }}" ng-model=$ctrl.model ng-change="$ctrl.log(\'currency input value:\' + $ctrl.model)" ng-required=$ctrl.currencyInput.required ng-disabled=$ctrl.currencyInput.disabled ng-min=$ctrl.currencyInput.min ng-max=$ctrl.currencyInput.max size="{{ $ctrl.currencyInput.size }}" locked=$ctrl.currencyInput.locked> </tw-currency-input> <div class=error-messages> <div class=error-required>Required</div> <div class=error-min>Must be higher</div> <div class=error-max>Must be lower</div> </div> <docs-status-messages></docs-status-messages> </div> <div class="form-group form-group-lg"> <label class=control-label> How much? </label> <tw-currency-input tw-validation currency=$ctrl.currencyInput.currency placeholder="{{ $ctrl.currencyInput.placeholder }}" ng-model=$ctrl.model ng-change="$ctrl.log(\'currency input value:\' + $ctrl.model)" ng-required=$ctrl.currencyInput.required ng-disabled=$ctrl.currencyInput.disabled ng-min=$ctrl.currencyInput.min ng-max=$ctrl.currencyInput.max size=lg locked=$ctrl.currencyInput.locked on-locked-change="$ctrl.log(\'locked change:\' + $ctrl.currencyInput.locked)"> <addon ng-if=$ctrl.currencyInput.addon>@</addon> </tw-currency-input> <div class=error-messages> <div class=error-required>Required</div> <div class=error-min>Must be higher</div> <div class=error-max>Must be lower</div> </div> </div> <h5>Configuration</h5> <pre>&lt;tw-currency-input\n  tw-validation\n  ng-model="{{$ctrl.model}}"\n  ng-change="$ctrl.log(\'input change\')"<span ng-if=$ctrl.currencyInput.required>\n  ng-required="{{ $ctrl.currencyInput.required }}"</span><span ng-if=$ctrl.currencyInput.disabled>\n  ng-disabled="{{ $ctrl.currencyInput.disabled }}"</span>\n  ng-min="{{ $ctrl.currencyInput.min }}"\n  ng-max="{{ $ctrl.currencyInput.max }}"\n  currency="\'{{ $ctrl.currencyInput.currency }}\'"\n  <span ng-if=$ctrl.currencyInput.addon>&lt;addon&gt;@&lt;/addon&gt;</span>\n&lt;/tw-currency-input&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Toggles </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.currencyInput.required ng-init="$ctrl.currencyInput.required = false"> </tw-checkbox> Is the control required? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.currencyInput.disabled ng-init="$ctrl.currencyInput.disabled = false"> </tw-checkbox> Is the control disabled? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.currencyInput.addon> </tw-checkbox> Has addon? </label> </div> </div> <div class=form-group> <label class=control-label> Currency </label> <input type=text class=form-control ng-model=$ctrl.currencyInput.currency ng-init="$ctrl.currencyInput.currency = \'EUR\'"/> </div> <div class=form-group> <label class=control-label> Placeholder </label> <input type=text class=form-control ng-model=$ctrl.currencyInput.placeholder /> </div> <div class=form-group> <label class=control-label> Min amount </label> <input type=number class=form-control ng-model=$ctrl.currencyInput.min ng-init="$ctrl.currencyInput.min = 10" tw-validation/> </div> <div class=form-group> <label class=control-label> Max amount </label> <input type=number class=form-control ng-model=$ctrl.currencyInput.max ng-init="$ctrl.currencyInput.max = 100" tw-validation/> </div> <div class=form-group ng-init="$ctrl.currencyInput.size = \'md\'"> <label class=control-label> Size </label> <tw-select ng-model=$ctrl.currencyInput.size options=$ctrl.sizes> </tw-select> </div> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=amount-currency-select>Amount Currency Select</h4> <p>Two way data binding via ng-model</p> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label>How much?</label> <tw-amount-currency-select tw-validation ng-model=$ctrl.model ng-required=$ctrl.amountCurrencySelect.required ng-disabled=$ctrl.amountCurrencySelect.disabled ng-min=$ctrl.amountCurrencySelect.min ng-max=$ctrl.amountCurrencySelect.max ng-change="$ctrl.log(\'amount input value changed:\' + $ctrl.model)" placeholder="{{ $ctrl.amountCurrencySelect.placeholder }}" currency=$ctrl.currency on-currency-change="$ctrl.log(\'currency input value changed:\' + $ctrl.currency)" currencies=$ctrl.currencySelect currency-filter-placeholder="{{ $ctrl.amountCurrencySelect.currencyFilterPlaceholder }}" custom-action-label=$ctrl.amountCurrencySelect.customActionLabel on-custom-action="$ctrl.log(\'Custom Action Called\')" locked=$ctrl.amountCurrencySelect.locked on-locked-change="$ctrl.log(\'Locked changed: \' + $ctrl.amountCurrencySelect.locked)" show-lock=$ctrl.amountCurrencySelect.showLock lock-tooltip-title=$ctrl.amountCurrencySelect.lockTooltipTitle lock-tooltip-content=$ctrl.amountCurrencySelect.lockTooltipContent size="{{ $ctrl.amountCurrencySelect.size }}"> </tw-amount-currency-select> <div class=error-messages> <div class=error-required>Required</div> <div class=error-min>Must be higher</div> <div class=error-max>Must be lower</div> </div> </div> <div class="form-group form-group-lg"> <label class=control-label>How much?</label> <tw-amount-currency-select tw-validation ng-model=$ctrl.model ng-required=$ctrl.amountCurrencySelect.required ng-disabled=$ctrl.amountCurrencySelect.disabled ng-min=$ctrl.amountCurrencySelect.min ng-max=$ctrl.amountCurrencySelect.max ng-change="$ctrl.log(\'amount input value changed:\' + $ctrl.model)" placeholder="{{ $ctrl.amountCurrencySelect.placeholder }}" currency=$ctrl.currency on-currency-change="$ctrl.log(\'currency input value changed:\' + $ctrl.currency)" currencies=$ctrl.currencySelect currency-filter-placeholder="{{ $ctrl.amountCurrencySelect.currencyFilterPlaceholder }}" custom-action-label=$ctrl.amountCurrencySelect.customActionLabel on-custom-action="$ctrl.log(\'Custom Action Called\')" locked=$ctrl.amountCurrencySelect.locked on-locked-change="$ctrl.log(\'Lock changed: \' + $ctrl.amountCurrencySelect.locked)" show-lock=$ctrl.amountCurrencySelect.showLock lock-tooltip-title=$ctrl.amountCurrencySelect.lockTooltipTitle lock-tooltip-content=$ctrl.amountCurrencySelect.lockTooltipContent size=lg> </tw-amount-currency-select> <div class=error-messages> <div class=error-required>Required</div> <div class=error-min>Must be higher</div> <div class=error-max>Must be lower</div> </div> </div> <h5>Configuration</h5> <pre>&lt;tw-amount-currency-select tw-validation\n  ng-model="{{ $ctrl.model }}"<span ng-if=$ctrl.amountCurrencySelect.required>\n  ng-required="{{ $ctrl.amountCurrencySelect.required }}"</span><span ng-if=$ctrl.amountCurrencySelect.disabled>\n  ng-disabled="{{ $ctrl.amountCurrencySelect.disabled }}"</span><span ng-if=$ctrl.amountCurrencySelect.min>\n  ng-min="{{ $ctrl.amountCurrencySelect.min }}"</span><span ng-if=$ctrl.amountCurrencySelect.max>\n  ng-max="{{ $ctrl.amountCurrencySelect.max }}"</span>\n  ng-change="$ctrl.log(\'amount input value changed:\' + $ctrl.model)"\n  currencies="{{ $ctrl.currencySelect }}"\n  currency="\'{{ $ctrl.currency | uppercase }}\'"\n  on-currency-change="$ctrl.log(\'currency input value changed:\' + $ctrl.currency)"<span ng-if=$ctrl.amountCurrencySelect.placeholder>\n  placeholder="{{ $ctrl.amountCurrencySelect.placeholder }}"</span>\n  custom-action-label="{{ $ctrl.amountCurrencySelect.customActionLabel }}"\n  on-custom-action="$ctrl.log(\'Custom Action Called\')"<span ng-if=$ctrl.amountCurrencySelect.currencyFilterPlaceholder>\n  currency-filter-placeholder="{{ $ctrl.amountCurrencySelect.currencyFilterPlaceholder }}"</span><span ng-if="$ctrl.amountCurrencySelect.size !== \'md\'">\n  size="{{ $ctrl.amountCurrencySelect.size }}"</span><span ng-if=$ctrl.amountCurrencySelect.showLock>\n  show-lock="{{$ctrl.amountCurrencySelect.showLock}}"\n  locked="{{ $ctrl.amountCurrencySelect.locked }}"\n  on-locked-change="$ctrl.log(\'lock changed:\' + locked)"</span>&gt;\n  lock-tooltip-title="{{$ctrl.amountCurrencySelect.lockTooltipTitle}}"\n  lock-tooltip-content="{{$ctrl.amountCurrencySelect.lockTooltipContent}}"\n  &lt;/tw-amount-currency-select&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Toggles </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.amountCurrencySelect.required></tw-checkbox> Is the control required? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.amountCurrencySelect.disabled></tw-checkbox> Is the control disabled? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.amountCurrencySelect.locked></tw-checkbox> Locked? </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.amountCurrencySelect.showLock></tw-checkbox> Show lock? </label> </div> </div> <div class=form-group> <label class=control-label> Placeholder </label> <input type=text class=form-control ng-model=$ctrl.amountCurrencySelect.placeholder /> </div> <div class=form-group> <label class=control-label> Custom Action Label </label> <input type=text class=form-control ng-model=$ctrl.amountCurrencySelect.customActionLabel /> </div> <div class=form-group> <label class=control-label> Currency Filter Placeholder </label> <input type=text class=form-control ng-model=$ctrl.amountCurrencySelect.currencyFilterPlaceholder /> </div> <div class=form-group> <label class=control-label> Min amount </label> <input type=number class=form-control ng-model=$ctrl.amountCurrencySelect.min tw-validation/> </div> <div class=form-group> <label class=control-label> Max amount </label> <input type=number class=form-control ng-model=$ctrl.amountCurrencySelect.max tw-validation/> </div> <div class=form-group> <label class=control-label> Lock tooltip title </label> <input type=text class=form-control ng-model=$ctrl.amountCurrencySelect.lockTooltipTitle /> </div> <div class=form-group> <label class=control-label> Lock tooltip content </label> <input type=text class=form-control ng-model=$ctrl.amountCurrencySelect.lockTooltipContent /> </div> <div class=form-group> <label class=control-label> Size </label> <tw-select ng-model=$ctrl.amountCurrencySelect.size options=$ctrl.sizes></tw-select> </div> </div> </div> </div> </form> '},function(e,l){e.exports='<h4 id=form-control>Form control</h4> <p>The dynamic form control is a form control that can be fully configured based on a set of parameters.</p> <p>This control can be used as the basis for a fully dynamic form based on an external specification.</p> <form> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label for=dynamic> Example form control </label> <tw-form-control name=dynamic type={{$ctrl.dynamic.type}} placeholder={{$ctrl.dynamic.placeholder}} options=$ctrl.dynamic.options locale={{$ctrl.dynamic.locale}} ng-model=$ctrl.model ng-required=$ctrl.dynamic.required ng-disabled=$ctrl.dynamic.disabled ng-minlength=$ctrl.dynamic.minlength ng-maxlength=$ctrl.dynamic.maxlength ng-pattern=$ctrl.dynamic.pattern ng-min=$ctrl.dynamic.min ng-max=$ctrl.dynamic.max ng-change="$ctrl.log(\'form control change\')" ng-focus="$ctrl.log(\'form control focus\')" ng-blur="$ctrl.log(\'form control blur\')" upload-options=$ctrl.dynamic.uploadOptions tw-validation></tw-form-control> <div class=error-messages> <div class=error-required> Required </div> <div class=error-minlength> Must be at least {{$ctrl.dynamic.minlength}} characters </div> <div class=error-maxlength> Must not be longer than {{$ctrl.dynamic.maxlength}} characters </div> <div class=error-min> Must be at least {{$ctrl.dynamic.min}} </div> <div class=error-max> Must not be higher than {{$ctrl.dynamic.max}} </div> <div class=error-pattern> Invalid characters </div> <div class=error-number> Must be a number </div> </div> <docs-status-messages></docs-status-messages> </div> <h5>Configuration</h5> <pre>&lt;tw-form-control\n  type="{{$ctrl.dynamic.type}}"<span ng-if="$ctrl.dynamic.type !== \'radio\' && $ctrl.dynamic.type !== \'date\'">\n  placeholder="{{$ctrl.dynamic.placeholder}}"</span><span ng-if="$ctrl.dynamic.type === \'radio\' || $ctrl.dynamic.type === \'select\'">\n  options="{{$ctrl.dynamic.options}}"</span><span ng-if="$ctrl.dynamic.type === \'date\'">\n  locale="{{$ctrl.dynamic.locale}}"</span>\n  ng-model="{{$ctrl.model}}"<span ng-if=$ctrl.dynamic.required>\n  ng-required="{{$ctrl.dynamic.required}}"</span><span ng-if=$ctrl.dynamic.disabled>\n  ng-disabled="{{$ctrl.dynamic.disabled}}"</span><span ng-if="$ctrl.dynamic.type === \'text\'"><span ng-if=$ctrl.dynamic.minlength>\n  ng-minlength="{{$ctrl.dynamic.minlength}}"</span><span ng-if=$ctrl.dynamic.maxlength>\n  ng-maxlength="{{$ctrl.dynamic.maxlength}}"</span><span ng-if=$ctrl.dynamic.pattern>\n  ng-pattern="{{$ctrl.dynamic.pattern}}"</span></span><span ng-if="$ctrl.dynamic.type === \'number\' || $ctrl.dynamic.type === \'date\'"><span ng-if=$ctrl.dynamic.min>\n  ng-min="{{$ctrl.dynamic.min}}"</span><span ng-if=$ctrl.dynamic.max>\n  ng-max="{{$ctrl.dynamic.max}}"</span></span>\n  ng-change=\'...\'\n  ng-focus=\'...\'\n  ng-blur=\'...\'<span ng-if="$ctrl.dynamic.type === \'upload\'">\n  upload-options="{{$ctrl.dynamic.uploadOptions}}"</span>\n  tw-validation&gt;\n&lt;/tw-form-control&gt;</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group ng-init="$ctrl.dynamic.type = \'text\';"> <label class=control-label> Type </label> <tw-select options=$ctrl.dynamic.types ng-model=$ctrl.dynamic.type ng-change="$ctrl.model = null"> </tw-select> </div> <div class=form-group> <label class=control-label> Required? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.dynamic.required></tw-checkbox> Is the control required? </label> </div> </div> <div class=form-group> <label class=control-label> Disabled? </label> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.dynamic.disabled></tw-checkbox> Is the control disabled? </label> </div> </div> <div class=form-group ng-if="$ctrl.dynamic.type === \'text\'"> <label class=control-label> Min/Max length </label> <div class=row> <div class=col-xs-6> <input type=number class=form-control placeholder=Minlength ng-model=$ctrl.dynamic.minlength /> </div> <div class=col-xs-6> <input type=number class=form-control placeholder=Maxlength ng-model=$ctrl.dynamic.maxlength /> </div> </div> </div> <div class=form-group ng-if="$ctrl.dynamic.type === \'text\'"> <label class=control-label> Pattern </label> <input type=text class=form-control placeholder="e.g. [a-z]+" ng-model=$ctrl.dynamic.pattern validate-regexp tw-validation/> <div class=error-messages> <div class=error-async>Invalid regex</div> </div> </div> <div class=form-group ng-if="$ctrl.dynamic.type === \'number\'"> <label class=control-label> Min/Max </label> <div class=row> <div class=col-xs-6> <input type=number class=form-control placeholder=Min ng-model=$ctrl.dynamic.min /> </div> <div class=col-xs-6> <input type=number class=form-control placeholder=Max ng-model=$ctrl.dynamic.max /> </div> </div> </div> <div class=form-group ng-if="$ctrl.dynamic.type === \'date\'"> <label class=control-label> Min/Max (\'YYYY-mm-dd\') </label> <div class=row> <div class=col-xs-6> <input type=text class=form-control placeholder=Min ng-model=$ctrl.dynamic.min /> </div> <div class=col-xs-6> <input type=text class=form-control placeholder=Max ng-model=$ctrl.dynamic.max /> </div> </div> </div> <div class=form-group ng-if="$ctrl.dynamic.type === \'date\'"> <label class=control-label> Locale </label> <tw-select options=$ctrl.locales ng-model=$ctrl.dynamic.locale ng-init="$ctrl.dynamic.locale=\'en-GB\'"> </tw-select> </div> <div class=form-group ng-if="$ctrl.dynamic.type !== \'radio\' && $ctrl.dynamic.type !== \'date\'"> <label class=control-label> Placeholder </label> <input type=text class=form-control ng-model=$ctrl.dynamic.placeholder ng-init="$ctrl.dynamic.placeholder = \'Example\'"/> </div> <div class=form-group ng-if="$ctrl.dynamic.type === \'upload\'"> <label class=control-label> Upload Button Text </label> <input type=text class=form-control ng-model=$ctrl.dynamic.uploadOptions.buttonText ng-init="$ctrl.dynamic.uploadOptions.buttonText = \'Upload a file\'"/> </div> <input type=submit class="btn btn-primary btn-block" value="Submit form"/> </div> </div> </div> </form> '},function(e,l){e.exports='<h2 class=page-header>Fields</h2> <div class=row> <div class=col-md-6> <p>The field is the basic building block of our forms, it accepts a set of options to configure it\'s presentation, and a model to which it will bind a value.</p> <p>The field controls labelling, validation and help text, alongside the rendering of the form control itself.</p> </div> <div class=col-md-6> <h5>Component API</h5> <pre>\n&lt;tw-field\nname="inputName"\nfield="{...}"&gt;\nmodel="$ctrl.model"\nlocale="\'en-GB\'"\non-focus="focusHandler()"\non-blur="blurHandler()"\non-change="changeHandler(value)"&gt;\n&lt;/tw-field&gt;\n</pre> </div> </div> <h4 id=types class=page-header> Basic types <a href=#types class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <field-example name=stringProperty field=$ctrl.stringBasic model=$ctrl.basicTypesModel.stringProperty> </field-example> <field-example name=numberProperty field=$ctrl.numberBasic model=$ctrl.basicTypesModel.numberProperty> </field-example> <field-example name=booleanProperty field=$ctrl.booleanBasic model=$ctrl.basicTypesModel.booleanProperty> </field-example> <h4 id=formats class=page-header> Formats <a href=#formats class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> Beyond the basic types, formats can be used to indicate other types of controls are required. Or to give hints about what type of input is expected. </p> <p> String formats may be used to choose which keyboard type to render on mobile devices e.g. <code>format: number</code> or <code>format: katakana</code>. </p> </div> </div> <field-example name=dateProperty field=$ctrl.dateBasic model=$ctrl.basicFormatsModel.dateProperty> </field-example> <field-example name=phoneProperty field=$ctrl.phoneBasic model=$ctrl.basicFormatsModel.phoneProperty> </field-example> <field-example name=base64urlProperty field=$ctrl.uploadBasic model=$ctrl.basicFormatsModel.base64urlProperty> </field-example> <h4 id=selections class=page-header> Selections <a href=#selections class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> Often we want the user to choose from a set of values. By passing an array of <code>values</code> the field will render as a radio selection (3 or less options), or a select box (4 or more options). To force the display of one or the other, pass <code>control: "radio"</code> or <code>control: "select"</code>. </p> </div> </div> <field-example name=selectProperty field=$ctrl.selectBasic model=$ctrl.selectionsModel.selectProperty> </field-example> <field-example name=radioProperty field=$ctrl.radioBasic model=$ctrl.selectionsModel.radioProperty> </field-example> <h4 id=control-type class=page-header> Forcing control type <a href=#control-type class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> To force display of an alternative control, we can supply a \'control\' type. For example, a enumerated value with only two options would normally display as radio buttons, but we can force it to show as a select, using <code>control: "select"</code>. </p> </div> <div class=col-md-6> <p>A password is of string type, with no specific format, we can render a password control using <code>control: "password"</code>. </p> </div> </div> <field-example name=selectProperty field=$ctrl.selectOverride model=$ctrl.override.select> </field-example> <field-example name=passwordProperty field=$ctrl.passwordOverride model=$ctrl.override.password> </field-example> <field-example name=textareaProperty field=$ctrl.textareaOverride model=$ctrl.override.textarea> </field-example> <field-example name=telephoneProperty field=$ctrl.telephoneOverride model=$ctrl.override.telephone> </field-example> <h4 id=defaults class=page-header> Default values <a href=#defaults class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> Some fields may have default values. supply a <code>default: \'value\'</code> to have this value automatically pre-bound to the model. </p> </div> <div class=col-md-6> <p>If the model already has it value, it will not be overriden</p> </div> </div> <field-example name=defaultValue field=$ctrl.defaultValue model=$ctrl.defualtValueModel> </field-example> <h4 id=async class=page-header> Async tasks <a href=#async class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <h5>Async values</h5> <p> Sometimes the list of values is excessively long, or dependent on some other data in the model. In these cases you can load these values asynchronously. </p> </div> </div> <field-example name=valuesAsyncModel field=$ctrl.valuesAsync model=$ctrl.valuesAsyncModel> </field-example> <div class=row> <div class=col-md-6> <h4>Async persistence</h4> <p> Save asynchronously. </p> </div> </div> <field-example name=persistAsyncModel field=$ctrl.persistAsync model=$ctrl.persistAsyncModel> </field-example> <h4 id=validation class=page-header> Validation <a href=#validation class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <field-example name=stringProperty field=$ctrl.stringValidation model=$ctrl.validationModel.stringProperty required=true on-change=$ctrl.log(value)> </field-example> <field-example name=numberProperty field=$ctrl.numberValidation model=$ctrl.validationModel.numberProperty required=true on-change=$ctrl.log(value)> </field-example> <field-example name=dateProperty field=$ctrl.dateValidation model=$ctrl.validationModel.dateProperty required=true on-change=$ctrl.log(value)> </field-example> <h4 id=custom-errors class=page-header> Custom errors <a href=#custom-errors class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> When we want to render a custom error, or render an error on page load, we can pass in an additional error message that will be immediately displayed. When the value of the field changes the error messages (and state) will be removed as we fall back to regular validation. </p> </div> <div class=col-md-6> <p> We can also supply warning messages, it is up to the consumer to show/hide these messages as the value evolves. Warning messages will be superceded by errors if they both exist at the same time. </p> </div> </div> <field-example name=customErrorsMessage field=$ctrl.customErrors model=$ctrl.customErrorsModel error-message=$ctrl.customErrorsMessage> </field-example> <field-example name=customWarningMessage field=$ctrl.customWarning model=$ctrl.customErrorsModel warning-message=$ctrl.customWarningMessage> </field-example> <h4 id=help-information class=page-header> Help information <a href=#help-information class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> We have a number of ways to show helpful information, this information appears when the control is focused to draw attention. </p> </div> </div> <field-example name=text field=$ctrl.helpText model=$ctrl.helpModel.text> </field-example> <field-example name=list field=$ctrl.helpList model=$ctrl.helpModel.list> </field-example> <field-example name=image field=$ctrl.helpImage model=$ctrl.helpModel.image> </field-example> <h4 id=presentation-options class=page-header> Presentation options <a href=#presentation-options class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> Some fields have additional presentation options. </p> </div> </div> <field-example name=displayFormat field=$ctrl.displayFormat model=$ctrl.presentationModel.displayFormat> </field-example> <field-example name=uploadOptions field=$ctrl.uploadComponent model=$ctrl.presentationModel.uploadOptions> </field-example> <h4 id=field-states class=page-header> Field states <a href=#field-states class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <div class=row> <div class=col-md-6> <p> Fields can be disabled or hidden from view. </p> </div> </div> <field-example name=disabledControl field=$ctrl.disabledControl model=$ctrl.presentationModel.disabledControl> </field-example> <field-example name=hiddenControl field=$ctrl.hiddenControl model=$ctrl.presentationModel.hiddenControl> </field-example> <h4 id=field-events class=page-header> Events <a href=#field-events class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <field-example name=eventsModel field=$ctrl.stringBasic model=$ctrl.eventsModel on-focus="$ctrl.log(\'focus\')" on-blur="$ctrl.log(\'blur\')" on-change=$ctrl.log(value)> </field-example> '},function(e,l){e.exports='<h2 id=fieldsets class=page-header> Fieldsets <a href=#fieldsets class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h2> <div class=row> <div class=col-md-6> <p>Fieldsets represent a collection of fields. A fieldset can optionally include a title and/or a description.</p> <p>Fieldsets provide a 2-way bound model that is updated as the user interacts. There is also a 2-way bound \'is-valid\' property, that can be useful for enabling/disabling submit buttons.</p> </div> <div class=col-md-6> <h5>Component API</h5> <pre>\n&lt;tw-fieldset\n  title="<span ng-non-bindable>{{ fieldset.title }}</span>"\n  description="<span ng-non-bindable>{{ fieldset.description }}</span>"\n  fields="fieldset.properties"&gt;\n  required-fields="fieldset.required"\n  locale="en-GB"\n  model="{...}"\n  is-valid="..."\n  on-model-change="modelHandler(model)"\n  on-field-focus="focusHandler(key, field)"\n  on-field-blur="blurHandler(key, field)"\n  on-field-change="changeHandler(value, key, field)"&gt;\n&lt;/tw-fieldset&gt;\n</pre> </div> </div> <h4 id=fieldset-basic class=page-header> Basic example <a href=#fieldset-basic class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <fieldset-example requirements=$ctrl.fieldsetBasic model=$ctrl.fieldsetBasicModel> </fieldset-example> <h4 id=fieldset-title class=page-header> Title &amp; description <a href=#fieldset-title class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <fieldset-example requirements=$ctrl.fieldsetOptions model=$ctrl.fieldsetOptionsModel> </fieldset-example> <h4 id=fieldset-events class=page-header> Events <a href=#fieldset-events class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <fieldset-example requirements=$ctrl.fieldsetBasic model=$ctrl.fieldsetBasicModel on-model-change=$ctrl.log(model) on-field-focus="$ctrl.log(\'focus: \' + key)" on-field-blur="$ctrl.log(\'blur: \' + key)" on-field-change="$ctrl.onFieldChange(value, key, field)"> </fieldset-example> <h4 id=fieldset-nested class=page-header> Nested objects <a href=#fieldset-nested class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <p>We can create models with nested objects by supplying type:object and a nested JSON schema, with it\'s own set of properties.</p> <fieldset-example requirements=$ctrl.fieldsetNested model=$ctrl.fieldsetNestedModel on-model-change=$ctrl.log(model) on-field-focus="$ctrl.log(\'focus: \' + key)" on-field-blur="$ctrl.log(\'blur: \' + key)" on-field-change="$ctrl.onFieldChange(value, key, field)" on-refresh-requirements=$ctrl.refresh()> </fieldset-example> <h4 id=fieldset-layout class=page-header> Layout <a href=#fieldset-layout class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <fieldset-example requirements=$ctrl.fieldsetLayout model=$ctrl.fieldsetLayoutModel> </fieldset-example> <h4 id=fieldset-errors class=page-header> Errors and warnings <a href=#fieldset-errors class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <p>We can trigger error messages or warnings by passing in messages for specific fields.</p> <p>For flat models this is a simple object map from the key to the message. If using <a href=fieldset-nested>nested objects</a> the messages should be supplied in a nested format matching the model.</p> <fieldset-example requirements=$ctrl.fieldsetNested model=$ctrl.fieldsetNestedModel error-messages=$ctrl.fieldsetErrors warning-messages=$ctrl.fieldsetWarnings> </fieldset-example> <h4 id=fieldset-full class=page-header> All field types <a href=#fieldset-full class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h4> <fieldset-example requirements=$ctrl.fieldsetFull model=$ctrl.fieldsetFullModel on-model-change=$ctrl.log(model) on-field-focus="$ctrl.log(\'focus: \' + key)" on-field-blur="$ctrl.log(\'blur: \' + key)" on-field-change="$ctrl.onFieldChange(value, key, field)" on-refresh-requirements=$ctrl.refresh()> </fieldset-example> <tw-definition-list-docs model=$ctrl.fieldsetFullModel fields=$ctrl.fieldsetFull.properties> </tw-definition-list-docs> '},function(e,l){e.exports="<h4 id=requirements-form>Requirements form</h4> <p>The requirements form uses the dynamic form control to build a fully featured form. It accepts a model object which it permutes based on a set of requirements. The requirements object should match that returned by the TransferWise API</p> <form novalidate> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group> <label class=control-label> Example form </label> <tw-select options=$ctrl.types ng-model=$ctrl.type> </tw-select> </div> </div> <div class=m-b-3> <tw-requirements-form requirements=$ctrl.requirements model=$ctrl.model on-model-change=$ctrl.logModel(model) on-refresh-requirements=$ctrl.onRefreshRequirements() upload-options=\"{\n        buttonText: 'Choose file...',\n        cancelText: 'Choose a different file?'\n      }\" validation-messages=\"{\n        required: 'Required',\n        pattern: 'Incorrect format',\n        minlength: 'The value is too short',\n        maxlength: 'The value is too long',\n        min: 'The value is too low',\n        max: 'The value is too high'\n      }\" error-messages=$ctrl.errorMessages is-valid=$ctrl.isValid></tw-requirements-form> <hr/> <div class=\"btn-toolbar m-b-panel\"> <button type=submit class=\"btn btn-primary\"> Submit form </button> </div> <h5>Configuration</h5> <pre>&lt;tw-requirements-form\n  requirements=\"$ctrl.requirements\"\n  model=\"{{$ctrl.model | json}}\"\n  on-model-change=\"$ctrl.logModel\"\n  on-refresh-requirements=\"$ctrl.onRefreshRequirements()\"\n  upload-options=\"{\n    buttonText: 'Choose file...',\n    cancelText: 'Choose a different file'\n  }\"\n  validation-messagess=\"{\n    required: 'Required',\n    pattern: 'Incorrect format',\n    minlength: 'The value is too short',\n    maxlength: 'The value is too long',\n    min: 'The value is too low',\n    max: 'The value is too high'\n  }\"\n  is-valid='{{$ctrl.isValid}}'&gt;&lt;/tw-requirements-form&gt;</pre> </div> </form> "},function(e,l){e.exports='<h2 id=definition-list class=page-header> Definition List <a href=#definition-list class=pull-xs-right> <tw-link-icon></tw-link-icon> </a> </h2> <p> <code>tw-definition-list</code> is a companion to <code><a href=#fieldset>tw-fieldset</a></code>, it shares the same interface, and same dynamic requirements format, allowing us to display the data model we generated using a fieldset. </p> <p>You can also specify the layout, which defaults to <code>vertical</code></p> <h4 class=page-header> Vertical layout </h4> <tw-definition-list legend="Definition List" fields=$ctrl.fields model=$ctrl.model locale=en-GB on-refresh-requirements=$ctrl.refresh()> </tw-definition-list> <pre>\n&lt;tw-definition-list\n  legend="Definition List"\n  fields="$ctrl.fields"\n  model="$ctrl.model"\n  locale="en-GB"&gt;\n&lt;/tw-definition-list&gt;\n</pre> <h4 class=page-header> Justified layout </h4> <tw-definition-list legend="Definition List" fields=$ctrl.fields model=$ctrl.model locale=en-GB layout=justified on-refresh-requirements=$ctrl.refresh()> </tw-definition-list> <pre>\n&lt;tw-definition-list\n  legend="Definition List"\n  fields="$ctrl.fields"\n  model="$ctrl.model"\n  layout="justified"\n  locale="en-GB"&gt;\n&lt;/tw-definition-list&gt;\n</pre> <h4 class=page-header> Horizontal layout </h4> <tw-definition-list legend="Definition List" fields=$ctrl.fields model=$ctrl.model locale=en-GB layout=horizontal on-refresh-requirements=$ctrl.refresh()> </tw-definition-list> <pre>\n&lt;tw-definition-list\n  legend="Definition List"\n  fields="$ctrl.fields"\n  model="$ctrl.model"\n  layout="horizontal"\n  locale="en-GB"&gt;\n&lt;/tw-definition-list&gt;\n</pre> '},function(e,l){e.exports='<h4 id=focusable>Focusable</h4> <p><code>tw-focusable</code> is a simple attribute based directive that aids styling during focus events. Whenever an HTML element with tw-focusable is focussed it will look for a parent <code>.form-group</code> then find any <code>.control-label</code> inside of it, and apply a <code>.focus</code> class.</p> <p>This attribute is automatically applied to controls using the standard Bootstrap <code>.form-control</code> class, but can be particularly useful for custom controls. For example, our custom select box uses a button to facillitate <code>:focus</code>, we can apply tw-focusable to make sure the associated label receives the right focus state.</p> <p>Note: <code>[tw-focusable]</code> is built into custom components so there\'s no need to add it.</p> <div class=m-b-3> <div class=form-group> <label class=control-label>Label</label> <input type=text class=form-control tw-focusable/> </div> <pre>\n&lt;div class="form-group"&gt;\n  &lt;label class="control-label"&gt;Label&lt;/label&gt;\n  &lt;input type="text" class="form-control" tw-focusable /&gt;\n&lt;/div&gt;\n</pre> <div class=form-group> <label class=control-label>Label</label> <div class=form-control contenteditable tw-focusable></div> </div> <pre>\n&lt;div class="form-group"&gt;\n  &lt;label class="control-label"&gt;Label&lt;/label&gt;\n  &lt;div contenteditable tw-focusable class="form-control" /&gt;\n&lt;/div&gt;\n</pre> </div> '},function(e,l){e.exports='<div class=panel> <div class=panel-heading> <h2 class=panel-title>Formatting</h2> </div> <div class=panel-body ng-init="$ctrl.requirementsForm = {}"> <tw-text-format-docs model=$ctrl.model.presentation></tw-text-format-docs> <hr class=m-b-5 /> <tw-number-format-docs locales=$ctrl.locales></tw-number-format-docs> <hr class=m-b-5 /> <tw-currency-format-docs locales=$ctrl.locales></tw-currency-format-docs> <hr class=m-b-5 /> <tw-date-format-docs locales=$ctrl.locales></tw-date-format-docs> <hr class=m-b-5 /> <tw-markdown-docs></tw-markdown-docs> </div> </div> '},function(e,l){e.exports='<h4 id=text-format>Text Format</h4> <p><code>tw-text-format</code> is a simple attribute based directive that formats text entered into controls. The model value is preserved without formatting, and validation continues to function on the unformated value.</p> <div class="row m-b-3"> <div class=col-md-6> <div class=form-group> <label class=control-label>Text format</label> <input type=text class=form-control ng-model=$ctrl.model ng-minlength=$ctrl.pattern.minlength ng-maxlength=$ctrl.pattern.maxlength ng-pattern=$ctrl.pattern.pattern ng-required=true placeholder={{$ctrl.pattern.placeholder}} tw-focusable tw-validation tw-text-format={{$ctrl.pattern.format}} /> <div class="alert alert-focus" ng-if=$ctrl.pattern.helpText> {{$ctrl.pattern.helpText}} </div> <docs-error-messages></docs-error-messages> </div> <pre>\n&lt;input type="text"\n  class="form-control"\n  ng-model="{{$ctrl.model}}"<span ng-if=$ctrl.pattern.minlength>\n  ng-minlength="{{$ctrl.pattern.minlength}}"</span><span ng-if=$ctrl.pattern.maxlength>\n  ng-maxlength="{{$ctrl.pattern.maxlength}}"</span><span ng-if=$ctrl.pattern.pattern>\n  ng-pattern="{{$ctrl.pattern.pattern}}"</span>\n  ng-required="true"\n  placeholder="{{$ctrl.pattern.placeholder}}"\n  tw-text-format="{{$ctrl.pattern.format}}"\n  tw-validation\n  tw-focusable /&gt;\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header>Edit configuration</h5> <div class=form-group> <label class=control-label>Pattern</label> <tw-select placeholder="Choose pattern..." options=$ctrl.patterns ng-model=$ctrl.pattern ng-change=$ctrl.changePattern()></tw-select> </div> <button class="btn btn-default btn-block m-b-3" ng-click="$ctrl.model = \'ABCDEFGHI\'"> Set to \'ABCDEFGHI\' </button> <button class="btn btn-default btn-block" ng-click="$ctrl.model = \'1234567890\'"> Set to \'1234567890\' </button> </div> </div> </div> <div> <h5>Text format filter</h5> <p>When we display values that were entered using the text format directive we typically want to show the user the formatted value. We supply an Angular filter to format the value in the same way.</p> <dl> <dt>Text filter</dt> <dd>{{$ctrl.model | twTextFormat:$ctrl.pattern.format }}</dd> </dl> <pre>\n&lt;dl&gt;\n  &lt;dt&gt;Text filter&lt;/dt&gt;\n  &lt;dd&gt;<code ng-non-bindable>{{</code> "{{$ctrl.model}}" | twTextFormat : "{{$ctrl.pattern.format}}" <code ng-non-bindable>}}</code>&lt;/dd&gt;\n&lt;/dl&gt;\n</pre> </div> '},function(e,l){e.exports='<h4 id=date-format>Date Format</h4> <p> <code>twDateFormat</code> is a component for presenting dates. It makes smart decisions about how to present the date based on how far the date is from the current date and time. It uses the supplied locale to change the presentation to the common local format. The component uses a tooltip to show the full date on hover. </p> <ul> <li>Dates within 48 hours of now display the weekday name and time.</li> <li>Dates within 8 days show the weekday name and day of the month.</li> <li>Dates within the current year show the day of the month and the month name.</li> <li>Dates from other years show the day of the month, the month name and the year.</li> </ul> <p> Dates can be supplied either as a date object or as any string that can be interpreted by the Javascript Date object constructor. We use locale specific date functions. Therefore, if you supply a date in UTC, it may shift to another day if the browser is in another time zone. If you\'re presenting something like a date of birth, the safest approach is to pass a string \'2000-01-01\' which will be interpreted in the local timezone. </p> <div class="row m-b-3"> <div class=col-md-6> <h5>Date format component</h5> <h3 class=m-b-3> <tw-date-format date=$ctrl.model locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </h3> <pre>\n&lt;tw-date-format\n  date=\'{{ $ctrl.model }}\'\n  locale="\'{{ $ctrl.locale }}\'"<span ng-if=$ctrl.format>\n  format="\'{{ $ctrl.format }}\'"</span>&gt;\n&lt;/tw-date-format&gt;\n</pre> <h5>Date format filter</h5> <p> We also provide a <code>twDateFormat</code> filter to format dates. In most situations it is preferable to use the component to take advantage of the tooltips. </p> <h3 class=m-b-3> {{ $ctrl.model | twDateFormat : $ctrl.locale : $ctrl.format }} </h3> <pre>\n<code ng-non-bindable>{{</code>\n  {{ $ctrl.model }} |\n  twDateFormat : "{{ $ctrl.locale }}" <span ng-if=$ctrl.format>: {{ $ctrl.format }} </span>\n<code ng-non-bindable>}}</code>\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header>Edit configuration</h5> <div class=form-group> <label class=control-label> Date </label> <tw-date-lookup placeholder="Choose date..." ng-model=$ctrl.model ng-change=$ctrl.dateChange()> </tw-date-lookup> </div> <div class=form-group ng-init="$ctrl.time = \'1200\'"> <label class=control-label> Time </label> <input class=form-control ng-model=$ctrl.time tw-text-format=**:** ng-minlength=4 ng-maxlength=4 ng-change=$ctrl.timeChange() tw-validation/> </div> <div class=form-group ng-init="$ctrl.locale = \'en-GB\';"> <label class=control-label> Locale </label> <tw-select options=$ctrl.locales ng-model=$ctrl.locale> </tw-select> </div> <div class=form-group> <label class=control-label> Format </label> <tw-select options=$ctrl.formats ng-model=$ctrl.format> </tw-select> </div> </div> </div> </div> <div> <h5>Examples</h5> <dl> <dt>Now</dt> <dd> <tw-date-format date=$ctrl.dates.now locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> </dl> <div class=row> <div class=col-md-6> <dl> <dt>An hour ago</dt> <dd> <tw-date-format date=$ctrl.dates.lastHour locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>A day ago</dt> <dd> <tw-date-format date=$ctrl.dates.lastDay locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>A week ago</dt> <dd> <tw-date-format date=$ctrl.dates.lastWeek locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>A month ago</dt> <dd> <tw-date-format date=$ctrl.dates.lastMonth locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>A year ago</dt> <dd> <tw-date-format date=$ctrl.dates.lastYear locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> </dl> </div> <div class=col-md-6> <dl> <dt>In an hour</dt> <dd> <tw-date-format date=$ctrl.dates.nextHour locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>In a day</dt> <dd> <tw-date-format date=$ctrl.dates.nextDay locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>In a week</dt> <dd> <tw-date-format date=$ctrl.dates.nextWeek locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>In a month</dt> <dd> <tw-date-format date=$ctrl.dates.nextMonth locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> <dt>In a year</dt> <dd> <tw-date-format date=$ctrl.dates.nextYear locale=$ctrl.locale format=$ctrl.format> </tw-date-format> </dd> </dl> </div> </div> </div> '},function(e,l){e.exports='<h4 id=number-format>Number Format</h4> <p> <code>twNumberFormat</code> provides a component and a filter for formatting numbers based on a given locale. You can also supply a precision if you want a specific number of decimals. If precision is not supplied it will simply display any decimals the number value already has. </p> <p class=text-danger> Internally this uses Number.prototype.getLocaleString, which is not yet supported in Safari. </p> <div class="row m-b-3"> <div class=col-md-6> <dl> <dt>Component</dt> <dd> <tw-number-format amount=$ctrl.number precision=$ctrl.precision locale=$ctrl.locale> </tw-number-format> </dd> </dl> <pre>\n&lt;tw-number-format\n  amount="{{ $ctrl.number }}"\n  precision="{{ $ctrl.precision }}"\n  locale="{{ $ctrl.locale }}"&gt;\n&lt;/tw-number-format&gt;\n</pre> <h5>Number format filter</h5> <p> We also provide a <code>twNumberFormat</code> filter.</p> <dl> <dt>Filter</dt> <dd>{{ $ctrl.number | twNumberFormat : $ctrl.precision : $ctrl.locale}}</dd> </dl> <pre>\n<code ng-non-bindable>{{</code>{{ $ctrl.number }} | twNumberFormat : {{ $ctrl.precision }} : "{{ $ctrl.locale }}"<code ng-non-bindable>}}</code>\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header>Edit configuration</h5> <div class=form-group> <label class=control-label> Number </label> <input type=number class=form-control ng-model=$ctrl.number /> </div> <div class=form-group> <label class=control-label> Locale </label> <tw-select options=$ctrl.locales ng-model=$ctrl.locale> </tw-select> </div> <div class=form-group> <label class=control-label> Precision </label> <input type=number class=form-control ng-model=$ctrl.precision /> </div> </div> </div> </div> '},function(e,l){e.exports='<h4 id=currency-format>Currency Format</h4> <p> <code>twCurrencyFormat</code> provides both a component and a filter for formatting numbers as currency amounts, based on an ISO currency code and a given locale. </p> <ul> <li>Numbers without decimals are rendered without decimals, regardless of currency.</li> <li>Numbers with decimals are rendered with the correct number of decimals for the currency.</li> </ul> <p class=text-danger> Internally this uses Number.prototype.getLocaleString, which is not yet supported in Safari. </p> <div class="row m-b-3"> <div class=col-md-6> <dl> <dt>Component</dt> <dd> <tw-currency-format amount=$ctrl.number currency=$ctrl.currency locale=$ctrl.locale> </tw-currency-format> </dd> </dl> <pre>\n&lt;tw-currency-format\n  amount="{{ $ctrl.number }}"\n  currency="{{ $ctrl.currency }}"\n  locale="{{ $ctrl.locale }}"&gt;\n&lt;/tw-currency-format&gt;\n</pre> <h5>Currency format filter</h5> <p> We also provide a <code>twCurrencyFormat</code> filter.</p> <dl> <dt>Filter</dt> <dd>{{ $ctrl.number | twCurrencyFormat : $ctrl.currency : $ctrl.locale }}</dd> </dl> <pre>\n<code ng-non-bindable>{{</code>{{ $ctrl.number }} | twCurrencyFormat : "{{ $ctrl.currency }}" : "{{ $ctrl.locale }}" <code ng-non-bindable>}}</code>\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header>Edit configuration</h5> <div class=form-group> <label class=control-label> Number </label> <input type=number class=form-control ng-model=$ctrl.number /> </div> <div class=form-group> <label class=control-label> Locale </label> <tw-select options=$ctrl.locales ng-model=$ctrl.locale> </tw-select> </div> <div class=form-group> <label class=control-label> Currency </label> <tw-select options=$ctrl.currencies ng-model=$ctrl.currency> </tw-select> </div> </div> </div> </div> '},function(e,l){e.exports="<h4 id=markdown>Markdown</h4> <p> <code>twMarkdown</code> is a component for rendering markdown. It takes the supplied markdown and renders it as HTML using the Commonmark library. Any raw HTML provided within the markdown and unsafe URL strings are automatically removed by the Commonmark library. </p> <div class=\"row m-b-3\"> <div class=col-md-6> <tw-markdown markdown=$ctrl.markdown></tw-markdown> <pre>\n    &lt;tw-markdown\n      markdown='{{ $ctrl.markdown }}'&gt;\n    &lt;/tw-markdown&gt;\n    </pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header>Edit configuration</h5> <div class=form-group> <label class=control-label>Markdown</label> <textarea class=form-control ng-model=$ctrl.markdown ng-model-options=\"{ debounce: 300 }\" ng-style=\"{ 'height': '400px' }\">\n          </textarea> </div> </div> </div> </div>"},function(e,l){e.exports='<div class=panel id=validation> <div class=panel-heading> <h2 class=panel-title>Validation</h2> </div> <div class=panel-body> <p><code>tw-validation</code> is an attribute based directive that provides validation behaviour for any HTML element also using <code>ng-model</code>.</p> <p>The validation rules are more complex than the standard angular validation to provide a better customer experience. Validation will only occur if:</p> <ul> <li>The user has focused and changed the value of the element, and has left it in an invalid state.</li> <li>The user submits the form containing the element, but has not set the element to a valid value.</li> </ul> <p>Similar to <code>tw-focusable</code>, the attribute will seek out any parent <code>.form-group</code> and apply the <code>.has-error</code> class to style an associated label.</p> <p>There is an associated directive that is applied to all forms if you have included the module. It simply checks whether any elements with <code>[tw-validation]</code> are in an invalid state and triggers the validation styles.</p> <form name=exampleForm novalidate> <div class=form-group> <label class=control-label> Text input - required </label> <input type=text required tw-validation class=form-control placeholder=Placeholder ng-model=$ctrl.model.text /> <docs-error-messages></docs-error-messages> <docs-status-messages></docs-status-messages> </div> <pre class=m-b-3>\n    &lt;input type="text" class="form-control" tw-validation tw-focusable\n      ng-model="..." ng-required="true" /&gt;\n    &lt;div class="error-messages"&gt;\n      &lt;div class="error-required"&gt;Required&lt;/div&gt;\n    &lt;/div&gt;\n    </pre> <div class=form-group> <label class=control-label> Select - required </label> <select class=form-control required tw-validation ng-model=$ctrl.model.select ng-change=$ctrl.log()> <option value="">Please choose..</option> <option value=1>Option 1</option> <option value=2>Option 2</option> <option value=3>Option 3</option> </select> <docs-error-messages></docs-error-messages> <docs-status-messages></docs-status-messages> </div> <pre class=m-b-3>\n    &lt;select class="form-control" tw-validation tw-focusable\n      ng-model="..." ng-required="true"&gt;...&lt;/select&gt;\n    &lt;div class="error-messages"&gt;\n      &lt;div class="error-required"&gt;Required&lt;/div&gt;\n    &lt;/div&gt;\n    </pre> <div class=form-group> <label class=control-label> Checkboxes </label> <div class=checkbox> <label> <input type=checkbox tw-validation tw-focusable ng-model=$ctrl.model.checkbox1 ng-required=true /> Checkbox 1 - required </label> </div> <div class=checkbox> <label> <input type=checkbox tw-validation tw-focusable ng-model=$ctrl.model.checkbox2 /> Checkbox 2 </label> </div> <div class="checkbox disabled"> <label> <input type=checkbox tw-validation tw-focusable ng-model=$ctrl.model.checkbox3 disabled=disabled /> Checkbox 3 - disabled </label> </div> </div> <pre class=m-b-3>\n    &lt;input type="checkbox" name="myCheckbox" tw-validation tw-focusable\n      ng-model="..." ng-required="true" /&gt;\n    </pre> <div class=form-group> <label class=control-label> Radio buttons - required </label> <div class=radio> <label> <input type=radio name=simple-radio value=1 required=true ng-model=$ctrl.model.radio tw-validation tw-focusable/> Radio 1 </label> </div> <div class="radio radio-lg"> <label> <input type=radio name=simple-radio value=2 required=true ng-model=$ctrl.model.radio tw-validation tw-focusable/> Radio 2 <small>Subsequent information, subsequent information, subsequent information.</small> </label> </div> <div class="radio disabled"> <label> <input type=radio name=simple-radio disabled=disabled value=3 ng-model=$ctrl.model.radio tw-validation tw-focusable/> Radio 3 - disabled </label> </div> </div> <pre class=m-b-3>\n    &lt;input type="radio" name="myRadio" tw-validation tw-focusable\n      ng-model="..." ng-required="true" /&gt;\n    </pre> <div class=form-group> <label class=control-label> Textarea - required </label> <textarea required tw-validation name=textareaSimple class=form-control placeholder=Required ng-model=$ctrl.model.textareaSimple></textarea> <docs-error-messages></docs-error-messages> <docs-status-messages></docs-status-messages> </div> <pre class=m-b-3>\n    &lt;textarea class="form-control" tw-validation tw-focusable\n      ng-model="..." ng-required="true"&gt;...&lt;/textarea&gt;\n    &lt;div class="error-messages"&gt;\n      &lt;div class="error-required"&gt;Required&lt;/div&gt;\n    &lt;/div&gt;\n    </pre> <div class=form-group> <label class=control-label> Text - complex validation </label> <input type=text required tw-validation name=textComplex class=form-control placeholder="a-z only, 2 to 6 chars" ng-model=$ctrl.model.textComplex ng-pattern=/^[a-z]+$/ ng-minlength=2 ng-maxlength=6 /> <docs-error-messages></docs-error-messages> <docs-status-messages></docs-status-messages> </div> <pre class=m-b-3>\n    &lt;input type="text" class="form-control" tw-validation tw-focusable\n      ng-model="..."\n      ng-required="true" ng-pattern="/^[a-z]+$/"\n      ng-minlength="2" ng-maxlength="6" /&gt;\n    &lt;div class="error-messages"&gt;\n      &lt;div class="error-required"&gt;Required&lt;/div&gt;\n      &lt;div class="error-pattern"&gt;Invalid characters&lt;/div&gt;\n      &lt;div class="error-minlength"&gt;Too short&lt;/div&gt;\n      &lt;div class="error-maxlength"&gt;Too long&lt;/div&gt;\n    &lt;/div&gt;\n    </pre> <div class=form-group> <label class=control-label> Number - complex validation </label> <input type=number required tw-validation name=numberComplex class=form-control placeholder="min 5, max 10" ng-model=$ctrl.model.numberComplex ng-min=5 ng-max=10 /> <div class=error-messages> <div class=error-required>Required</div> <div class=error-min>Number must be at least 5</div> <div class=error-max>Number must be at most 10</div> <div class=error-number>Must be a number</div> </div> </div> <pre class=m-b-3>\n    &lt;input type="number" class="form-control" tw-validation tw-focusable\n      ng-model="..." ng-required="true" ng-min="5" ng-max="10" /&gt;\n    &lt;div class="error-messages"&gt;\n      &lt;div class="error-required"&gt;Required&lt;/div&gt;\n      &lt;div class="error-min"&gt;Number must be at least 5&lt;/div&gt;\n      &lt;div class="error-max"&gt;Number must be at most 10&lt;/div&gt;\n      &lt;div class="error-number"&gt;Must be a number&lt;/div&gt;\n    &lt;/div&gt;\n    </pre> <button type=submit class="btn btn-primary btn-block m-b-3"> Submit form </button> <hr class=m-b-5 /> <h4>Tw Validation with Tw components</h4> <p>Validation works exactly the same for our custom components, simply add the <code>[tw-validation]</code> attribute to the element.</p> <div class=form-group> <label class=control-label> twSelect - required </label> <tw-select tw-validation ng-model=$ctrl.model.twSelect ng-required=true options=$ctrl.basicSelect placeholder="Select an option..."></tw-select> <docs-error-messages></docs-error-messages> <docs-status-messages></docs-status-messages> </div> <pre class=m-b-3>\n    &lt;tw-select options="..." tw-validation\n      ng-model="..." ng-required="true" /&gt;\n    &lt;div class="error-messages"&gt;\n      &lt;div class="error-required"&gt;Required&lt;/div&gt;\n    &lt;/div&gt;\n    </pre> <div class=form-group> <label class=control-label> Checkboxes </label> <div class=checkbox> <label> <tw-checkbox tw-validation ng-model=$ctrl.model.twCheckbox1 ng-required=true></tw-checkbox> Checkbox 1 - required </label> </div> <div class=checkbox> <label> <tw-checkbox ng-model=$ctrl.model.twCheckbox1></tw-checkbox> Checkbox 2 </label> </div> </div> <pre class=m-b-3>\n    &lt;tw-checkbox tw-validation\n      ng-model="..." ng-required="true" /&gt;\n    </pre> <div class=form-group> <label class=control-label> Radio buttons - required </label> <div class=radio> <label> <tw-radio name=simple-radio value=1 tw-validation ng-model=$ctrl.model.twRadio ng-required=true></tw-radio> Radio 1 </label> </div> <div class=radio> <label> <tw-radio name=simple-radio value=2 tw-validation ng-model=$ctrl.model.twRadio ng-required=true></tw-radio> Radio 2 </label> </div> </div> <pre class=m-b-3>\n    &lt;tw-radio tw-validation\n      ng-model="..." ng-required="true" /&gt;\n    </pre> <button type=submit class="btn btn-primary btn-block"> Submit form </button> </form> </div> </div> '},function(e,l){e.exports="<div class=panel> <div class=panel-heading> <h2 class=panel-title>Layout components</h2> <tw-icon name=ach size=16></tw-icon> </div> <div class=panel-body> <tw-process-docs></tw-process-docs> <hr class=m-b-5 /> <tw-loader-docs></tw-loader-docs> </div> </div> "},function(e,l){e.exports=" <h4 id=process>Process</h4> <p>A component for conveying that a process is occuring, and for communicating a successful or unsuccessful result.</p> <div class=\"row m-b-3\"> <div class=col-md-6> <div class=m-y-3> <tw-process state=$ctrl.state size={{$ctrl.size}} on-stop=\"$ctrl.log('stopped')\"> </tw-process> </div> <pre>\n&lt;tw-process\n  state='{{$ctrl.state}}'\n  size='{{$ctrl.size}}'\n  on-stop='$ctrl.log('stopped')'&gt;\n&lt;/tw-process&gt;\n</pre> </div> <div class=col-md-6> <div class=well> <h5 class=page-header> Edit configuration </h5> <div class=form-group ng-init=\"$ctrl.state = null\"> <label class=control-label> State </label> <tw-select ng-model=$ctrl.state options=$ctrl.processingStates> </tw-select> </div> <div class=form-group ng-init=\"$ctrl.size = 'xl'\"> <label class=control-label> Size? </label> <tw-select ng-required=true ng-model=$ctrl.size options=$ctrl.sizes> </tw-select> </div> </div> </div> </div> "},function(e,l){e.exports='<h4 id=loader>Loader</h4> <p>A directive to add the HTML necessary for our loading indicator. Simply use:</p> <pre>\n&lt;tw-loader&gt;&lt;/tw-loader&gt;\n</pre> <div class="m-y-3 text-xs-center"> <tw-loader></tw-loader> </div> '},function(e,l){e.exports="<div class=panel> <div class=panel-heading> <h2 class=panel-title>Layout components <tw-icon name=ach size=16></tw-icon><tw-bank-icon size=16></tw-bank-icon></h2> </div> <div class=panel-body> <tw-affix-docs></tw-affix-docs> <tw-cards-docs></tw-cards-docs> </div> </div> "},function(e,l){e.exports='<h4 id=affix>Affix</h4> <p><code>tw-affix</code> is an attribute based directive that applies a class <code>.affix</code> when the scroll position reaches the the declared <code>data-offset-top</code> from the top of the screen, until it reaches the <code>data-offset-bottom</code> (if supplied).</p> <p>Typically you will apply some <code>position: fixed;</code> CSS styles once the class is applied.</p> <p class=text-danger>tw-affix requires bootstrap.js</p> <div> <div class="alert alert-info" tw-affix data-offset-top=100> Affix class will turn this green when scrolled over 100px from top </div> <pre>\n&lt;div tw-affix\n  data-offset-top="100"&gt;\n  Affix class will turn this green when scrolled over 100px from top\n&lt;/a&gt;\n</pre> </div> <hr/> '},function(e,l){e.exports='<h4 id=cards>Cards</h4> <div class=row> <div class=col-md-8> <p>These are cards that have information about an activity and provide more detail when they\'re expanded. Things to know about expandable cards: </p> <p>The tw-cards container has one (optional) attribute <code>inactive</code> (boolean), that provides for the cards with the less prominent apparearance featured below.</p> <p>Each <code>tw-card</code> belongs in a <code>tw-cards</code> container. They take up to four attributes.</p> <ul> <li><code>state</code> - bootstrap state for the colour of the card</li> <li><code>open</code> - (optional) boolean to mark a card for pre-expansion. Only the first card in any <code>tw-cards</code> container with this attribute will be expanded</li> <li><code>disabled</code> - (optional) boolean for greyed out text on a card for something like a cancelled transfer</li> <li><code>empty</code> - (optional) boolean for indicating that the card should not expand on being clicked, false by default</li> </ul> <p>Each tw-card provides transclusion slots the following elements</p> <ul> <li><code>card-icon</code> - circle for the card\'s icon</li> <li><code>collapsed</code> - the content for the collapsed card</li> <li><code>expanded</code> - the content for the expanded card</li> <li><code>card-form</code> - (optional) the content for a form (like repeat transfer)</li> </ul> <p>tw-card exposes two life-cycle events:</p> <ul class=m-b-3> <li><code>on-expand</code> - fired each time the card expands.</li> <li><code>on-collapse</code> - fired each time the card collapses.</li> </ul> </div> <div class=col-md-4> <h5>Configuration</h5> <pre>\n&lt;tw-cards&gt;\n    &lt;tw-card\n        state="danger"\n        open="false"\n        on-expand="..."\n        on-collapse="..."&gt;\n        &lt;card-icon&gt;\n        &lt;/card-icon&gt;\n        &lt;collapsed&gt;\n        &lt;/collapsed&gt;\n        &lt;expanded&gt;\n        &lt;/expanded&gt;\n        &lt;card-form&gt;\n        &lt;/card-form&gt;\n    &lt;/tw-card&gt;\n&lt;/tw-cards&gt;\n</pre> </div> </div> <div class=well> <tw-cards> <tw-card state=danger on-expand="$ctrl.log(\'expand 1\')" on-collapse="$ctrl.log(\'collapse 1\')"> <card-icon> <tw-receive-icon size=24></tw-receive-icon> </card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width hidden-xs"> <span>Transfer<span class="visible-xl-inline h5"> £10.00 </span>from</span> <strong>Mike Marter</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text"> We received your money. There was a problem with your documents. </p> </middle> <right> <p class="m-y-0 h5"> <span class=sr-only>Sent</span>£10.00<span class=hidden-xs> GBP</span> </p> <p class="m-y-0 small"> <span class=sr-only>Received</span> exactly $12.34 <span class=hidden-xs>USD</span> </p> </right> </collapse-example> </collapsed> <expanded> <expand-example> <heading>We received your money. There was a problem with your documents.</heading> <middle> <ul class="sequence sequence-hollow sequence-pulse m-l-1 sequence-danger"> <li><p class="small p-b-1">You set up a transfer to TransferWise</p></li> <li class=active> <p class="m-b-1 text-danger">The money is on it\'s way to TransferWise</p> <p class="small p-b-1">Although you have instructed your bank to us the money, it will take several hours for them to process the transfer and pay out. We cannot process the transfer until it arrives in our account.</p> </li> <li><p class="small p-b-1">We receive the money and transfer it to Steve Pole</p></li> <li><p class="small p-b-1">Steve Pole\'s bank process the transfer</p></li> <li><p class="small p-b-1">The money appears in Steve Pole\'s account.</p></li> </ul> <div class=row> <div class="col-sm-12 col-lg-3 m-b-0"> <a href=/examples/details.html>View details</a> </div> </div> </middle> <buttons> <button class="btn btn-primary">Fix this transfer</button> <button class="btn btn-danger pull-md-right m-b-0">Cancel transfer</button> </buttons> </expand-example> </expanded> </tw-card> <tw-card state=info on-expand="$ctrl.log(\'expand 2\')" on-collapse="$ctrl.log(\'collapse 2\')"> <card-icon> <tw-transfer-icon size=24></tw-transfer-icon> </card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width hidden-xs"> Transfer to <strong>Steve Pole</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text"> We received your money. We\'re processing your transfer. </p> </middle> <right> <p class="m-y-0 small"> <span class=sr-only>Sent</span> £10.00 <span class=hidden-xs>GBP</span> </p> <p class="m-y-0 h5"> <span class=sr-only>Received</span> $12.34 <span class=hidden-xs>USD</span> </p> </right> </collapse-example> </collapsed> <expanded> <expanded-example> <heading>We received your money. We\'re processing your transfer.</heading> <middle> <ul class="sequence sequence-hollow sequence-pulse m-l-1 sequence-info"> <li><p class="small p-b-1">You set up a transfer to TransferWise</p></li> <li class=active> <p class="m-b-1 text-info">The money is on it\'s way to TransferWise</p> <p class="small p-b-1">Although you have instructed your bank to us the money, it will take several hours for them to process the transfer and pay out. We cannot process the transfer until it arrives in our account.</p> </li> <li><p class="small p-b-1">We receive the money and transfer it to Steve Pole</p></li> <li><p class="small p-b-1">Steve Pole\'s bank process the transfer</p></li> <li><p class="small p-b-1">The money appears in Steve Pole\'s account.</p></li> </ul> <div class=row> <div class="col-sm-12 col-lg-3 m-b-0"> <a href=/examples/details.html>View details</a> </div> </div> </middle> <buttons> <button class="btn btn-danger pull-md-right m-b-0">Cancel transfer</button> </buttons> </expanded-example> </expanded> </tw-card> <tw-card empty=true> <card-icon> <tw-transfer-icon size=24></tw-transfer-icon> </card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width"> <span class=hidden-xs>Transfer to</span> <strong> John Doe</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text"> For the sake of example, this card has been marked as empty. Thus, you can\'t expand it. </p> </middle> <right> <p class="m-y-0 h5"> <span class=sr-only>Sent</span> 950 <span class=hidden-xs>HUF</span> </p> <p class="m-y-0 small"> <span class=sr-only>Received</span> $3.28 <span class=hidden-xs>USD</span> </p> </right> </collapse-example> </collapsed> <expanded></expanded> </tw-card> <tw-card state=warning on-expand="$ctrl.log(\'expand 3\')" on-collapse="$ctrl.log(\'collapse 3\')"> <card-icon> <img class=hidden-xs height=50 alt="tw sample photo" ng-src="{{ $ctrl.imageUrl }}"/> <span class=visible-xs> <tw-profile-icon size=24></tw-profile-icon> </span> </card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width"> <span class=hidden-xs>Transfer to</span> <strong> Mike Marter</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text"> Waiting for you to pay in. </p> </middle> <right> <p class="m-y-0 h5"> <span class=sr-only>Sent</span> £10.00 <span class=hidden-xs>GBP</span> </p> <p class="m-y-0 small"> <span class=sr-only>Received</span> about $12.34 <span class=hidden-xs>USD</span> </p> </right> </collapse-example> </collapsed> <expanded> <expanded-example> <heading>Waiting for you to pay in.</heading> <middle> <ul class="sequence sequence-hollow sequence-pulse m-l-1 sequence-warning"> <li><p class="small p-b-1">You set up a transfer to TransferWise</p></li> <li class=active> <p class=m-b-1>The money is on it\'s way to TransferWise</p> <p class="small p-b-1">Although you have instructed your bank to us the money, it will take several hours for them to process the transfer and pay out. We cannot process the transfer until it arrives in our account.</p> </li> <li><p class="small p-b-1">We receive the money and transfer it to Mike Marter</p></li> <li><p class="small p-b-1">Mike Marter\'s bank process the transfer</p></li> <li><p class="small p-b-1">The money appears in Mike Marter\'s account.</p></li> </ul> <div class=row> <div class="col-sm-12 col-lg-3 m-b-0"> <a href=/examples/details.html>View details</a> </div> </div> </middle> <buttons> <button class="btn btn-primary">Pay for this transfer</button> <button class="btn btn-primary">I\'ve already paid</button> <button class="btn btn-danger pull-md-right m-b-0">Cancel transfer</button> </buttons> </expanded-example> </expanded> </tw-card> </tw-cards> <br/> <h5>Inactive Cards</h5> <br/> <tw-cards inactive=true> <tw-card state=none show-form=true on-expand="$ctrl.log(\'expand 4\')" on-collapse="$ctrl.log(\'collapse 4\')"> <card-icon>V</card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width"> <span class=hidden-xs>Transfer to </span> <strong>Peet\'s coffee</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text" title="01 July 2016 1:34 PM"> Completed 01 July 2016 </p> </middle> <right> <p class="m-y-0 h5"> <span class=sr-only>Sent</span> £2.50 <span class=hidden-xs>GBP</span> </p> <p class="m-y-0 small"> <span class=sr-only>Received</span> £2.50 <span class=hidden-xs>GBP</span> </p> </right> </collapse-example> </collapsed> <expanded> <expanded-example> <middle> <div class="m-t-1 m-b-3 visible-xs-block visible-sm-block"> <p class="h2 m-b-0 list-group-item-text" title="01 July 2016 1:34 PM"> Completed 01 July 2016 </p> </div> <div> <div class=row> <dl class=col-sm-6> <dt>Sent to</dt> <dd>Merchant account</dd> </dl> <dl class=col-sm-6> <dt>Reference</dt> <dd>Ref123</dd> </dl> </div> <div class=row> <dl class=col-sm-6> <dt>Exchange rate</dt> <dd>1.0000</dd> </dl> <dl class=col-sm-6> <dt>Fee</dt> <dd>0.00 GBP</dd> </dl> </div> <div class=row> <dl class=col-sm-6> <dt>Transfer number</dt> <dd>123456789</dd> </dl> </div> </div> <div class=row> <div class="col-sm-12 col-lg-3 m-b-0"> <a href=/examples/details.html>View details</a> </div> </div> </middle> </expanded-example> </expanded> <card-form> <form-example></form-example> </card-form> </tw-card> <tw-card state=none show-form=true on-expand="$ctrl.log(\'expand 5\')" on-collapse="$ctrl.log(\'collapse 5\')"> <card-icon>W</card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width"> <span class=hidden-xs>Reward payment to your </span> <strong>GBP balance</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text" title="01 April 2016 1:34 PM"> Completed 01 April 2016 </p> </middle> <right> <p class="m-y-0 h5"> <span class=sr-only>Sent</span> £10.00 <span class=hidden-xs>GBP</span> </p> <p class="m-y-0 small"> <span class=sr-only>Received</span> £10.00 <span class=hidden-xs>GBP</span> </p> </right> </collapse-example> </collapsed> <expanded> <expanded-example> <middle> <div class="m-t-1 m-b-3 visible-xs-block visible-sm-block"> <p class="h2 m-b-0 list-group-item-text" title="01 April 2016 1:34 PM"> Completed 01 April 2016 </p> </div> <div> <div class=row> <dl class=col-sm-6> <dt>Sent to</dt> <dd>GBP balance</dd> </dl> <dl class=col-sm-6> <dt>Reference</dt> <dd>Referral Bonus</dd> </dl> </div> <div class=row> <dl class=col-sm-6> <dt>Exchange rate</dt> <dd>1.0000</dd> </dl> <dl class=col-sm-6> <dt>Fee</dt> <dd>0.00 GBP</dd> </dl> </div> <div class=row> <dl class=col-sm-6> <dt>Transfer number</dt> <dd>123456789</dd> </dl> </div> </div> <div class=row> <div class="col-sm-12 col-lg-3 m-b-0"> <a href=/examples/details.html>View details</a> </div> </div> </middle> </expanded-example> </expanded> <card-form> <form-example></form-example> </card-form> </tw-card> <tw-card state=none disabled=true on-expand="$ctrl.log(\'expand 6\')" on-collapse="$ctrl.log(\'collapse 6\')"> <card-icon>X</card-icon> <collapsed> <collapse-example> <middle> <p class="list-group-item-heading text-max-width"> <span class=hidden-xs>Transfer to</span> <strong>Steve Pole</strong> </p> <p class="small m-b-0 text-max-width list-group-item-text" title="10 June 2016 1:34 PM"> Cancelled 10 June 2016 </p> </middle> <right> <p class="m-y-0 h5"> <span class=sr-only>Sent</span>£10,000,000.00<span class=hidden-xs>GBP</span> </p> <p class="m-y-0 small"> <span class=sr-only>Received</span>€11,987,000.00<span class=hidden-xs>GBP</span> </p> </right> </collapse-example> </collapsed> <expanded> <expanded-example> <middle> <div class="m-t-1 m-b-3 visible-xs-block visible-sm-block"> <p class="h2 m-b-0 list-group-item-text" title="10 June 2016 1:34 PM"> Cancelled 10 June 2016 </p> </div> <div> <div class=row> <dl class=col-sm-6> <dt>Sent to</dt> <dd>Account ending 1234</dd> </dl> <dl class=col-sm-6> <dt>Reference</dt> <dd>NewHouse</dd> </dl> </div> <div class=row> <dl class=col-sm-6> <dt>Exchange rate</dt> <dd>1.1987</dd> </dl> <dl class=col-sm-6> <dt>Fee</dt> <dd>500.00 GBP</dd> </dl> </div> <div class=row> <dl class=col-sm-6> <dt>Transfer number</dt> <dd>123456789</dd> </dl> </div> </div> <div class=row> <div class="col-sm-12 col-lg-3 m-b-0"> <a href=/examples/details.html>View details</a> </div> </div> </middle> </expanded-example> </expanded> <card-form> <form-example></form-example> </card-form> </tw-card> </tw-cards> </div> '},function(e,l){e.exports="<div class=panel> <div class=panel-heading> <h2 class=panel-title>Help components</h2> </div> <div class=panel-body> <tw-pop-over-docs></tw-pop-over-docs> <tw-tool-tip-docs></tw-tool-tip-docs> </div> </div> "},function(e,l){e.exports='<h4 id=pop-over>Pop Over</h4> <p><code>tw-pop-over</code> is an attribute based directive that enables a floating description to be revealed when an element is <strong>clicked</strong> or <strong>focused</strong>. It is configured through data attributes.</p> <p class=text-danger>tw-popover requires bootstrap.js</p> <div class=row> <div class=col-md-12> <a tw-pop-over data-original-title="Popover title" data-content="Full description copy, explaining in more detail"> Simple click based </a> - <a tw-pop-over data-original-title="Popover on hover" data-trigger=hover data-placement=bottom data-content="Positioned beneath the target element"> On hover, with custom position </a> - <a tw-pop-over data-original-title="Injected into .popover-title" data-content-html=true data-content="HTML enabled <a href=\'/path\'>content</a>, do not use with user entered data"> With HTML content </a> <pre>\n&lt;a tw-pop-over\n  data-original-title="Popover title"\n  data-content="Full description copy, explaining in more detail"&gt;\n  Simple click based\n&lt;/a&gt;\n\n&lt;a tw-pop-over\n  data-original-title="Popover on hover"\n  data-placement="bottom"\n  data-trigger="hover"\n  data-content="Positioned beneath the target element"&gt;\n  On hover, with custom position\n&lt;/a&gt;\n\n&lt;a tw-pop-over\n  data-original-title="Injected into .popover-title"\n  data-content-html="true"\n  data-content="HTML enabled &lt;a href=\'/path\'&gt;content&lt;/a&gt;, do not use with user entered data">\n  With HTML content\n&lt;/a&gt;\n    </pre> </div> </div> <hr/> '},function(e,l){e.exports='<h4 id=tool-tip>Tool Tip</h4> <p><code>tw-tool-tip</code> is an attribute based directive that enables a floating description to be revealed when an element on <strong>hover</strong>, <strong>focus</strong> or <code>click</code>. It is configured through data attributes.</p> <p class=text-danger>tw-tool-tip requires bootstrap.js</p> <div> <a tw-tool-tip title="By default tool tip appears above"> Default tool tip </a> - <tw-help-circle-icon size=24 tw-tool-tip title="Use data-placement to alter position" data-placement=bottom> </tw-help-circle-icon> <pre>\n&lt;a tw-tool-tip\n  title="By default tool tip appears above"&gt;\n  Default tool tip\n&lt;/a&gt;\n\n&lt;tw-help-circle-icon size="24">\n&lt;span\n  tw-tool-tip\n  title="Use data-placement to alter position"\n  data-placement="bottom"&gt;&lt;/span&gt;\n&lt;/tw-help-circle-icon>\n</pre> </div> <hr/> '},function(e,l){e.exports="<div class=panel> <div class=panel-heading> <div class=panel-title> <h2>JSON schema dynamic forms</h2> </div> </div> <div class=panel-body> <div class=row> <div class=col-md-6> <ul> <li> <code>model</code> - a data model to prefill the form. This is not two-way bound, you should use the on-change handler to update model state. </li> <li> <code>schema</code> - the JSON schema for the form. This root schema can be of any supported type. </li> <li> <code>errors</code> - a collection of errors. The format of which should match the model strcuture. For example, if a profile model contained an invalid postcode in nested structure 'profile.address.postcode' the error message should be supplied as the value in an identical structure. </li> <li> <code>locale</code> - the locale. Used to customise formatting. </li> <li> <code>translations</code> - an object containing translations. Check further down the page to see the translations we can use. </li> <li> <code>on-change(model, isValid, schema)</code> - a callback handler that returns the new value of the model, whether the model 'isValid' and the schema of the property that caused the change. This final parameter can be used to implement features like 'refresh requirements on change'. </li> </ul> </div> <div class=col-md-6> <pre>&lt;json-schema-form\n  model=\"{ ... }\"\n  schema=\"{ ... }\"\n  errors=\"{ ... }\"\n  locale=\"{{ $ctrl.locale }}\"\n  translations=\"{ ... }\"\n  on-change=\"$ctrl.onChange(model, isValid, schema)\"\n&gt;&lt;/json-schema-form&gt;</pre> <div class=form-group> <label class=control-label> Choose schema </label> <tw-select ng-model=$ctrl.schemaType options=$ctrl.schemaOptions ng-change=$ctrl.onSchemaChange($ctrl.schemaType) ng-required=true></tw-select> </div> </div> </div> <h3 class=page-header> Example </h3> <json-schema-form model=$ctrl.model schema=$ctrl.schema errors=$ctrl.errors locale=\"'en-GB'\" translations=$ctrl.translations on-change=\"$ctrl.onModelChange(model, isValid, schema)\"> </json-schema-form> <button class=\"btn btn-primary m-b-5\" ng-disabled=!$ctrl.isValid> Save </button> <pre>\nModel:\n{{ $ctrl.model | json }}\n\nIs valid: {{ $ctrl.isValid }}\n\nErrors:\n{{ $ctrl.errors | json }}\n    </pre> <h4>Translations</h4> <p>We need a number of translations to take advantage of all of the JSON schema form functionality. The following are example translations.</p> <pre>\n{\n  array: {\n    add: 'Add',\n    remove: 'Remove'\n  },\n  validation: {\n    required: 'Field is required',\n    minLength: 'Too short',\n    maxLength: 'Too long',\n    minimum: 'Too low',\n    maximum: 'Too high',\n    pattern: 'Invalid characters'\n  },\n  upload: {\n    choose: 'Choose file',\n    processing: 'Working...',\n    success: 'Success!',\n    failed: 'Upload failed',\n    cancel: 'Choose another file'\n  }\n}\n</pre> </div> </div> "},function(e,l){e.exports="<h1 class=h2>JSON schema playground</h1> <div class=\"row m-t-2\"> <div class=col-md-6> <div class=form-group> <label class=control-label>Schema</label> <textarea class=form-control ng-model=$ctrl.schemaString ng-change=$ctrl.onSchemaChange($ctrl.schemaString) ng-model-options=\"{ debounce: 300 }\" ng-style=\"{ 'height': '400px' }\">\n      </textarea> </div> <div class=form-group> <label class=control-label>Input model:</label> <textarea class=form-control ng-model=$ctrl.modelString ng-change=$ctrl.onInputModelChange($ctrl.modelString) ng-model-options=\"{ debounce: 300 }\" ng-style=\"{ 'height': '200px' }\">\n      </textarea> </div> </div> <div class=col-md-6> <label class=control-label>The form</label> <div class=\"well bg-focus\"> <json-schema-form schema=$ctrl.schema model=$ctrl.inputModel on-change=\"$ctrl.onModelChange(model, isValid)\"></json-schema-form> </div> <h4>Output model:</h4> <pre>{{ $ctrl.outputModel | json }}</pre> <div class=label ng-class=\"{\n      'label-success': $ctrl.isValid,\n      'label-warning': !$ctrl.isValid\n    }\"> {{ $ctrl.isValid ? 'Valid' : 'Invalid!' }} </div> </div> </div> "},function(e,l,t){"use strict";t.r(l);var o=t(0),a=t.n(o),r=t(96),n=t.n(r),s=t(97),c=t.n(s);function i(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var d=function(){function e(){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.checkbox={required:!0}}var l,t,o;return l=e,(t=[{key:"log",value:function(e){console.log(e)}}])&&i(l.prototype,t),o&&i(l,o),e}(),p=a.a.module("tw.styleguide.demo.forms.checkbox",[]).component("twCheckboxDocs",{bindings:{model:"="},controller:d,template:c.a}).name,m=t(98),u=t.n(m);function h(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var g=function(){function e(){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=[{value:"1",label:"One"},{value:"2",label:"Two"}]}var l,t,o;return l=e,(t=[{key:"log",value:function(e){console.log(e)}}])&&h(l.prototype,t),o&&h(l,o),e}(),b=a.a.module("tw.styleguide.demo.forms.checkbox-group",[]).component("twCheckboxGroupDocs",{bindings:{model:"="},controller:g,template:u.a}).name,f=t(99),v=t.n(f),w=a.a.module("tw.styleguide.demo.forms.radio",[]).component("twRadioDocs",{bindings:{model:"="},controller:function(){this.radio={required:!0},this.log=function(e){console.log(e)}},template:v.a}).name,$=t(100),y=t.n($),x=a.a.module("tw.styleguide.demo.forms.select",[]).component("twSelectDocs",{bindings:{model:"="},controller:function(){this.select={required:!0,empty:"Select an option...",type:"standard",types:[{value:"standard",label:"Standard"},{value:"icons",label:"Icons"},{value:"currencies",label:"Currencies"},{value:"notes",label:"Notes"},{value:"headers",label:"Headers"},{value:"secondary",label:"Secondary text"},{value:"searchable",label:"Searchable text"},{value:"circles",label:"Circles"},{value:"long",label:"Long list"},{value:"disabled",label:"Disabled option"},{value:"currencySelect",label:"Example: Currency select"},{value:"accountSelect",label:"Example: Account select"}],options:{standard:[{value:0,label:"Zero"},{value:1,label:"One"},{value:2,label:"Two"},{value:3,label:"Three"}],icons:[{value:{id:"1"},label:"Profile",icon:"icon-profile"},{value:{id:"2"},label:"Globe",icon:"icon-globe"},{value:{id:"3"},label:"Bank",icon:"icon-bank"}],currencies:[{value:"eur",label:"Euro",currency:"EUR"},{value:"gbp",label:"British Pound",currency:"GBP"},{value:"usd",label:"US Dollar",currency:"USD"}],notes:[{value:"eur",label:"EUR",note:"Euro"},{value:"gbp",label:"GBP",note:"Great British Pound"},{value:"usd",label:"USD",note:"United States Dollar"}],headers:[{header:"Header"},{value:"opt1",label:"Option 1"},{header:"Another header"},{value:"opt2",label:"Option 2"}],secondary:[{value:"1",label:"Bob Smith",secondary:"Account ending 1234"},{value:"2",label:"James Davies",secondary:"Account ending 9876"},{value:"3",label:"Helen Williams",secondary:"Accont ending 4321"}],searchable:[{value:"eur",label:"Euro",searchable:"Austria, France, Germany, Spain"},{value:"usd",label:"Dollar",searchable:"United States, Hong Kong, Saudi Arabia"},{value:"gbp",label:"Pound",searchable:"Great britain, England, Scotland"}],circles:[{value:"1",label:"Bob Smith",circleImage:"images/mike.jpg"},{value:"2",label:"James Davies",circleIcon:"icon-bank"},{value:"3",label:"Helen Williams",circleText:"AZ"}],disabled:[{value:"1",label:"Enabled option"},{value:"2",label:"Disabled option",disabled:!0},{value:"3",label:"Second option"}],currencySelect:[{header:"Popular currencies"},{value:"eur",label:"EUR",note:"Euro",currency:"EUR",searchable:"Spain, Germany, France, Austria, Estonia"},{value:"gbp",label:"GBP",note:"Great British Pound",currency:"GBP",searchable:"England, Scotland, Wales"},{value:"usd",label:"USD",note:"United States Dollar",currency:"USD",searchable:"Hong Kong, Saudi Arabia"},{header:"All currencies"},{value:"aud",label:"AUD",note:"Australian Dollar",currency:"AUD"}],accountSelect:[{value:"1",label:"Bob Smith",note:"GBP",secondary:"Account ending 1234",circleImage:"images/mike.jpg"},{value:"2",label:"James Davies",note:"GBP",secondary:"Account ending 9876",circleText:"JD"},{value:"3",label:"Helen Williams",note:"EUR",secondary:"Accont ending 4321",circleText:"HW"}],long:[{header:"example header"}]}};for(var e=1;e<=3e3;e++)this.select.options.long.push({value:"option-".concat(e),label:"Optiony Option ".concat(e)});this.hideOptions=[{value:"true",label:"All widths"},{value:"xs",label:"xs grid"},{value:"sm",label:"sm grid"},{value:"md",label:"md grid"},{value:"lg",label:"lg grid"},{value:"xl",label:"xl grid"},{value:"xs,sm",label:"xs and sm grid"},{value:"md,lg,xl",label:"md, lg and xl grid"}],this.gridSizes=[{value:"xs",label:"XSmall grids and wider"},{value:"sm",label:"Small grids and wider"},{value:"md",label:"Medium grids and wider"},{value:"lg",label:"Large grids and wider"},{value:"xl",label:"XLarge grids and wider"}],this.dropdownSizes=[{value:"sm",label:"Small dropdown"},{value:"md",label:"Medium dropdown"},{value:"lg",label:"Large dropdown"}],this.buttonSizes=[{value:"sm",label:"Small button"},{value:"md",label:"Medium button"},{value:"lg",label:"Large button"}],this.log=function(e){console.log(e)}},template:y.a}).name,k=t(101),T=t.n(k);function C(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var S=function(){function e(l){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.$q=l}var l,t,o;return l=e,(t=[{key:"save",value:function(e,l,t){return"404"===t.url?this.$q.reject({data:{message:"Error message from server"}}):this.$q.resolve({data:{id:1234,message:"This photo passed our automatic checks",details:["So its ready for our team to review"]}})}}])&&C(l.prototype,t),o&&C(l,o),e}();function q(e){var l=this,t=this;this.$scope=e,this.$scope.$watch("$ctrl.showNgModel",function(e){l.model=e?l.modelToBind:null}),this.onStart=function(){l.log("File upload starting")},this.onFinish=function(){l.log("File upload finished")},this.onSuccess=function(){l.log("File upload complete")},this.onFailure=function(e){l.log("File upload failure"),404===e.status?t.errorMessage="Bad URL":t.errorMessage="Unknown error"},this.onCancel=function(){l.log("File upload cancelled")},this.label="Front of your ID document",t.processingText="Processing...",t.droppingText="Drop file to begin...",t.successText="Upload complete!",t.failureText="Upload failed!",t.noCameraText="Couldn't detect your camera",t.noCameraMessage="Please enable camera permissions, try a different browser, or use a different device.",this.makeFancy=function(){},this.acceptOptions=[{value:".png",label:"PNG (.png)"},{value:".jpg,.jpeg",label:"JPG (.jpg,.jpeg)"},{value:"image/*",label:"Images (image/*)"},{value:"video/*",label:"Video (video/*)"},{value:"audio/*",label:"Audio (audio/*)"}],this.sizes=[{value:"sm",label:"Small"},{value:"md",label:"Medium"},{value:"lg",label:"Large"}],this.sources=[{value:"CAMERA_ONLY",label:"CAMERA_ONLY"},{value:"UPLOAD_ONLY",label:"UPLOAD_ONLY"},{value:"ANY",label:"ANY"}],this.cameraDirections=[{value:"ENVIRONMENT",label:"ENVIRONMENT"},{value:"USER",label:"USER"}],this.icons=[{value:"upload",label:"Upload"},{value:"id",label:"ID"},{value:"pdf",label:"PDF"}],this.log=function(e){console.log(e)}}S.$inject=["$q"],a.a.module("tw.styleguide.forms.upload").service("AsyncFileSaver",S),q.$inject=["$scope"];var M=a.a.module("tw.styleguide.demo.forms.upload",[]).component("twUploadDocs",{bindings:{model:"=",sizes:"<"},controller:q,template:T.a}).name,P=t(102),D=t.n(P);function F(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var L=function(){function e(l){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.$q=l}var l,t,o;return l=e,(t=[{key:"save",value:function(e,l,t){return"404"===t.url?this.$q.reject({data:{}}):this.$q.resolve({data:{id:1234,message:"This photo passed our automatic checks",details:["So its ready for our team to review"]}})}}])&&F(l.prototype,t),o&&F(l,o),e}();function I(e){var l=this,t=this;this.$scope=e,this.onStart=function(){l.log("File upload starting")},this.onFinish=function(){l.log("File upload finished")},this.label="Your files",t.processingText="Uploading...",t.droppingText="Drag files to upload",t.successText="Upload complete!",t.failureText="Upload failed!",t.addMoreButtonText="Add more files",t.responseErrorExtractor=function(e){return e.data.message||t.failureText},this.makeFancy=function(){},this.acceptOptions=[{value:".png",label:"PNG (.png)"},{value:".jpg,.jpeg",label:"JPG (.jpg,.jpeg)"},{value:"image/*",label:"Images (image/*)"},{value:"video/*",label:"Video (video/*)"},{value:"audio/*",label:"Audio (audio/*)"}],this.log=function(e){console.log(e)}}L.$inject=["$q"],a.a.module("tw.styleguide.forms.upload.multi").service("AsyncFileSaver",L),I.$inject=["$scope"];var z=a.a.module("tw.styleguide.demo.forms.multi.upload",[]).component("twMultiUploadDocs",{bindings:{model:"=",ngModel:"=",sizes:"<"},controller:I,template:D.a}).name,O=t(103),R=t.n(O),A=a.a.module("tw.styleguide.demo.forms.date",[]).component("twDateDocs",{bindings:{model:"=",locales:"<",sizes:"<"},controller:function(){this.date={required:!0},this.log=function(e){console.log(e)}},template:R.a}).name,E=t(104),B=t.n(E),j=a.a.module("tw.styleguide.demo.forms.date-lookup",[]).component("twDateLookupDocs",{bindings:{model:"=",locales:"<",sizes:"<"},controller:function(){this.log=function(e){console.log(e)},this.sizes=[{value:"sm",label:"Small"},{value:"",label:"Medium"},{value:"lg",label:"Large"}]},template:B.a}).name,N=t(105),U=t.n(N),H=a.a.module("tw.styleguide.demo.forms.telephone",[]).component("twTelephoneDocs",{bindings:{model:"=",locales:"<"},controller:function(){this.telephone={countries:[{callingCode:"1",iso2Code:"US",iso3Code:"usa",name:"United States of America"},{callingCode:"44",iso2Code:"GG",iso3Code:"ggy",name:"Guernsey"},{callingCode:"44",iso2Code:"GB",iso3Code:"gbr",name:"United Kingdom"},{callingCode:"33",iso2Code:"FR",iso3Code:"fra",name:"France"}],required:!0},this.log=function(e){console.log("Telephone changed to ".concat(e))}},template:U.a}).name,G=t(106),W=t.n(G);function V(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var J=function(){function e(l,t){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.$q=l,this.$timeout=t}var l,t,o;return l=e,(t=[{key:"log",value:function(e){console.log("Submit: ".concat(e))}},{key:"onSubmit",value:function(){var e=this;this.promise=this.$q(function(l,t){e.$timeout(function(){e.shouldSucceed?l():t()},2e3)})}}])&&V(l.prototype,t),o&&V(l,o),e}();J.$inject=["$q","$timeout"];var Y=a.a.module("tw.styleguide.demo.forms.submit",[]).component("twSubmitDocs",{bindings:{sizes:"<"},controller:J,template:W.a}).name,_=t(107),K=t.n(_);var Z=a.a.module("tw.styleguide.demo.forms.drag-and-drop",[]).component("twDragAndDropDocs",{controller:function(){var e=this;this.onEnter=function(){console.log("Drag enter"),e.dragging=!0,e.dropped=!1},this.onLeave=function(){console.log("Drag leave"),e.dragging=!1},this.onDrop=function(l){console.log("Files dropped",l),e.dragging=!1,e.dropped=!0}},template:K.a}).name,X=t(108),Q=t.n(X),ee=a.a.module("tw.styleguide.demo.forms.currency-input",[]).component("twCurrencyInputDocs",{bindings:{model:"=",sizes:"<"},controller:function(){this.log=function(e){console.log(e)}},template:Q.a}).name,le=t(109),te=t.n(le),oe=a.a.module("tw.styleguide.demo.forms.amount-currency-select",[]).component("twAmountCurrencySelectDocs",{bindings:{model:"=",currency:"<",sizes:"<"},controller:function(){this.currencySelect=[{header:"Popular currencies"},{value:"eur",label:"EUR",note:"Euro",currency:"EUR",searchable:"Spain, Germany, France, Austria, Estonia"},{value:"gbp",label:"GBP",note:"Great British Pound",currency:"GBP",searchable:"England, Scotland, Wales"},{value:"usd",label:"USD",note:"United States Dollar",currency:"USD",searchable:"Hong Kong, Saudi Arabia"},{header:"All currencies"},{value:"aud",label:"AUD",note:"Australian Dollar",currency:"AUD"}],this.currency="eur",this.amountCurrencySelect={size:"md",required:!1,disabled:!1,customActionLabel:"Can't find your currency?",currencyFilterPlaceholder:"Search...",lockTooltipTitle:"some title",lockTooltipContent:"some content"},this.log=function(e){console.log(e)}},template:te.a}).name,ae=t(110),re=t.n(ae),ne=a.a.module("tw.styleguide.demo.forms.form-control",[]).component("twFormControlDocs",{bindings:{model:"=",locales:"<",sizes:"<"},controller:function(){this.dynamic={required:!0,options:[{value:"1",label:"One"},{value:"2",label:"Two"},{value:"3",label:"Three"}],types:[{value:"text",label:"Text"},{value:"password",label:"Password"},{value:"number",label:"Number"},{value:"select",label:"Select"},{value:"radio",label:"Radio"},{value:"checkbox",label:"Checkbox"},{value:"checkbox-group",label:"Checkbox Group"},{value:"upload",label:"Upload"},{value:"date",label:"Date"},{value:"tel",label:"Telephone"}]},this.log=function(e){console.log(e)}},template:re.a}).directive("validateRegexp",["$q",function(e){return{require:"ngModel",link:function(l,t,o,a){a.$asyncValidators.async=function(){try{return e.when(!0)}catch(l){return e.reject(!1)}}}}}]).name,se=t(111),ce=t.n(se),ie=a.a.module("tw.styleguide.demo.forms.field",[]).component("twFieldDocs",{controller:function(){this.log=function(e){console.log(e)},this.stringBasic={type:"string",title:"String label",placeholder:"Please enter string"},this.numberBasic={type:"number",title:"Number control",placeholder:"Please enter number"},this.booleanBasic={type:"boolean",title:"Boolean control",placeholder:"Please choose"},this.basicTypesModel={stringProperty:"Example",numberProperty:123,booleanProperty:!1},this.dateBasic={type:"string",format:"date",title:"Date control"},this.phoneBasic={type:"string",format:"phone",title:"Phone control"},this.uploadBasic={type:"string",format:"base64url",title:"Upload control",placeholder:"Choose file..."},this.basicFormatsModel={dateProperty:"2017-12-01",passwordProperty:"qwerty"},this.selectBasic={type:"number",title:"Select control",placeholder:"Please choose",values:[{value:1,label:"One"},{value:2,label:"Two"},{value:3,label:"Three"},{value:4,label:"Four"}]},this.radioBasic={type:"string",title:"Radio control",values:[{value:"1",label:"One"},{value:"2",label:"Two"}]},this.selectionsModel={selectProperty:1,radioProperty:"2"},this.passwordOverride={type:"string",control:"password",title:"Password override",placeholder:"Choose password..."},this.telephoneOverride={type:"string",control:"tel",title:"Telephone override"},this.textareaOverride={type:"string",control:"textarea",title:"Textarea override"},this.selectOverride={type:"string",title:"Select override",control:"select",values:[{value:"1",label:"One"},{value:"2",label:"Two"}]},this.override={textarea:"Lorem Ipsum",telephone:"+441234567890",password:"qwerty",select:"1"},this.defaultValue={type:"string",default:"Default value"},this.defualtValueModel=null,this.valuesAsync={type:"number",title:"Values async",control:"select",placeholder:"Please choose",valuesAsync:{method:"GET",url:"json/values-async.json"}},this.valuesAsyncModel=null,this.persistAsync={type:"string",format:"base64url",title:"Persist async",placeholder:"Please choose a file",uploadOptions:{buttonText:"Choose file...",cancelText:"Choose a different file?",processingText:"Processing...",successText:"Upload complete!",failureText:"Upload failed"},persistAsync:{method:"GET",url:"json/image-upload.json",idProperty:"id"}},this.persistAsyncModel=null,this.stringValidation={type:"string",title:"String validation",placeholder:"Please enter text",pattern:"^[A-Z]*$",minLength:4,maxLength:6,validationMessages:{required:"String is required",minlength:"Must contain at least 4 characters",maxlength:"Must contain 6 characters or less",pattern:"Must only contain capital letters A to Z"}},this.numberValidation={type:"number",title:"Number control",placeholder:"Please enter number",minimum:10,maximum:99,validationMessages:{required:"Number is required",minimum:"Must be 10 or greater",maximum:"Must be 99 or less"}},this.dateValidation={type:"string",format:"date",title:"Date control",minimum:"2000-01-01",maximum:"2020-01-01",validationMessages:{required:"Date is required",minimum:"Must be after Jan 1st, 2000",maximum:"Must be before Jan 1st, 2020"}},this.validationModel={stringProperty:"Tex",numberProperty:123,dateProperty:null},this.customErrors={type:"string",title:"Custom error",placeholder:"Please enter text"},this.customErrorsMessage="Custom error message",this.customWarning={type:"string",title:"Warning message",key:"stringProperty",placeholder:"Please enter text"},this.customWarningMessage="This is a warning!",this.helpText={type:"string",title:"Help text",placeholder:"Please enter text",help:{message:"Some helpful information"}},this.helpList={type:"string",title:"Help list",placeholder:"Please enter number",help:{list:["Make sure of this","And this","And avoid this"]}},this.helpImage={type:"string",title:"Help image",placeholder:"Please enter number",help:{image:"images/captcha.png"}},this.displayFormat={type:"string",title:"String display format",placeholder:"Please enter...",displayFormat:"** - ** - **"},this.presentationModel={displayFormat:"123456",disabledControl:"I'm disabled",hiddenControl:"I'm hidden"},this.uploadComponent={type:"string",format:"base64url",title:"Upload options",placeholder:"Please choose a file",uploadOptions:{buttonText:"Choose file...",cancelText:"Choose a different file?",processingText:"Processing...",successText:"Upload complete!",failureText:"Upload failed"}},this.disabledControl={type:"string",title:"Disabled control",placeholder:"Please enter...",disabled:!0},this.hiddenControl={type:"string",default:"hidden-value",hidden:!0}},template:ce.a}).component("fieldExample",{bindings:{name:"@",model:"=",field:"<",required:"<",errorMessage:"<",warningMessage:"<",onFocusHandler:"&?onFocus",onBlurHandler:"&?onBlur",onChangeHandler:"&?onChange"},controller:function(){var e=this;this.onFocus=function(){e.onFocusHandler&&e.onFocusHandler()},this.onBlur=function(){e.onBlurHandler&&e.onBlurHandler()},this.onChange=function(l){e.onChangeHandler&&e.onChangeHandler({value:l})}},template:'\n    <div class="row">\n      <div class="col-md-6">\n        <tw-field\n          name="$ctrl.name"\n          model="$ctrl.model"\n          field="$ctrl.field"\n          required="$ctrl.required"\n          error-message="$ctrl.errorMessage"\n          warning-message="$ctrl.warningMessage"\n          on-focus="$ctrl.onFocus()"\n          on-blur="$ctrl.onBlur()"\n          on-change="$ctrl.onChange(value)">\n        </tw-field>\n      </div>\n      <div class="col-md-6" ng-class="{\'p-t-3\': $ctrl.field.format !== \'base64url\'}">\n<pre>&lt;tw-field\n  name="{{ $ctrl.name }}"\n  model="{{ $ctrl.model }}"<span ng-if="$ctrl.required">\n  required="{{ $ctrl.required }}"</span><span ng-if="$ctrl.errorMessage">\n  error-message="\'{{ $ctrl.errorMessage }}\'"</span><span ng-if="$ctrl.warningMessage">\n  warning-message="\'{{ $ctrl.warningMessage }}\'"</span><span ng-if="$ctrl.onFocusHandler">\n  on-focus="console.log(\'focus\')"</span><span ng-if="$ctrl.onBlurHandler">\n  on-blur="console.log(\'blur\')"</span><span ng-if="$ctrl.onChangeHandler">\n  on-change="console.log(value)"</span>\n  field="\n<div class="m-l-2">{{ $ctrl.field | json }}"&gt;</div>&lt;/tw-field&gt;</pre>\n      </div>\n    </div>'}).name;var de=t(112),pe=t.n(de),me=a.a.module("tw.styleguide.demo.forms.fieldset",[]).component("twFieldsetDocs",{controller:function(){var e=this;this.onFieldChange=function(l,t){e.log("change: ".concat(t," to ").concat(l))},this.refresh=function(){e.log("onRefreshRequirements")},this.log=function(e){console.log(e)},this.fieldsetBasic={properties:{stringProperty:{type:"string",title:"String label",placeholder:"Please enter text"},numberProperty:{type:"number",title:"Number label",placeholder:"Please enter number",min:5,default:123}}},this.fieldsetBasicModel={stringProperty:"Example",numberProperty:321},this.fieldsetNested={properties:{stringProperty:{type:"string",title:"String label",placeholder:"Please enter text"},nestedObject:{type:"object",title:"Nested object",properties:{numberProperty:{type:"number",title:"Number label",placeholder:"Please enter number",refreshRequirementsOnChange:!0}}}}},this.fieldsetNestedModel={stringProperty:"Example",nestedObject:{numberProperty:123}},this.fieldsetErrors={stringProperty:"Something is wrong with this"},this.fieldsetWarnings={nestedObject:{numberProperty:"Make sure this is your favourite number"}},this.fieldsetOptions={title:"Fieldset legend",description:"Optional fieldset description, with more information about the content.",properties:{keyName:{type:"text",title:"Control label",placeholder:"Please enter text"}},required:["keyName"]},this.fieldsetOptionsModel={keyName:"Example"},this.fieldsetLayout={properties:{stringProperty:{type:"string",title:"String label",placeholder:"Please enter text",width:"md"},booleanProperty:{type:"boolean",title:"Boolean label",placeholder:"Check it",width:"md"},numberProperty:{type:"number",title:"Number label",placeholder:"Please enter number",width:"sm"}}},this.fieldsetLayoutModel={},this.fieldsetFull={properties:{text:{title:"Text",type:"text",displayFormat:"***** - *****||*-*-*",width:"md",refreshRequirementsOnChange:!0},number:{title:"Number",type:"number",width:"md",refreshRequirementsOnChange:!0},select:{title:"Select",type:"string",control:"select",width:"md",refreshRequirementsOnChange:!0,values:[{key:"1",name:"One"},{key:"2",name:"Two"}]},checkboxGroup:{title:"Checkbox Group",type:"string",control:"checkbox-group",width:"md",items:{enum:[1,2],values:[{value:1,label:"One"},{value:2,label:"Two"}]}},password:{title:"Password",type:"string",control:"password",width:"md",refreshRequirementsOnChange:!0},date:{title:"Date",type:"string",format:"date",refreshRequirementsOnChange:!0},telephone:{title:"Telephone",type:"string",control:"tel",placeholder:"Enter..."},radio:{title:"Radio",type:"string",control:"radio",width:"md",refreshRequirementsOnChange:!0,values:[{key:"1",name:"One"},{key:"2",name:"Two"}]},checkbox:{title:"Checkbox",type:"boolean",placeholder:"Label",width:"md",refreshRequirementsOnChange:!0},textarea:{title:"Textarea",type:"string",control:"textarea",refreshRequirementsOnChange:!0},file:{title:"File",type:"string",format:"base64url",refreshRequirementsOnChange:!0},hidden:{type:"string",hidden:!0,default:"hidden-value"}}},this.fieldsetFullModel={text:"helloworld",number:123456,select:"1",date:"2000-01-01T00:00:00.000Z",checkbox:!0,radio:"2",password:"qwerty",telephone:"+441234567890",checkboxGroup:'["1", "2"]'}},template:pe.a}).component("fieldsetExample",{bindings:{model:"=",requirements:"<",errorMessages:"<",warningMessages:"<",onRefreshHandler:"&?onRefreshRequirements",onModelChangeHandler:"&?onModelChange",onFieldFocusHandler:"&?onFieldFocus",onFieldBlurHandler:"&?onFieldBlur",onFieldChangeHandler:"&?onFieldChange"},controller:function(){var e=this;this.isValid=!1,this.onFieldFocus=function(l,t){e.onFieldFocusHandler&&e.onFieldFocusHandler({key:l,field:t})},this.onFieldBlur=function(l,t){e.onFieldBlurHandler&&e.onFieldBlurHandler({key:l,field:t})},this.onFieldChange=function(l,t,o){e.onFieldChangeHandler&&e.onFieldChangeHandler({value:l,key:t,field:o})},this.onModelChange=function(l){e.onModelChangeHandler&&e.onModelChangeHandler({model:l})},this.onRefreshRequirements=function(){e.onRefreshHandler&&e.onRefreshHandler()}},template:'\n    <div class="row">\n      <div class="col-md-6">\n        <tw-fieldset\n          title="{{ $ctrl.requirements.title }}"\n          description="{{ $ctrl.requirements.description }}"\n          model="$ctrl.model"\n          fields="$ctrl.requirements.properties"\n          required-fields="$ctrl.requiredFields"\n          is-valid="$ctrl.isValid"\n          on-model-change="$ctrl.onModelChange(model)"\n          on-field-focus="$ctrl.onFieldFocus(key, field)"\n          on-field-blur="$ctrl.onFieldBlur(key, field)"\n          on-field-change="$ctrl.onFieldChange(value, key, field)"\n          on-refresh-requirements="$ctrl.onRefreshRequirements()"\n          upload-options="{buttonText: \'Choose file\'}"\n          error-messages="$ctrl.errorMessages"\n          warning-messages="$ctrl.warningMessages">\n        </tw-fieldset>\n      </div>\n      <div class="col-md-6 p-t-3">\n<pre>&lt;tw-fieldset<span ng-if="$ctrl.requirements.title">\n  title="{{ $ctrl.requirements.title }}"</span><span ng-if="$ctrl.requirements.description">\n  description="{{ $ctrl.requirements.description }}"</span>\n  is-valid="{{ $ctrl.isValid }}"<span ng-if="$ctrl.onModelChangeHandler">\n  on-model-change="(model) => { console.log(model); }"</span><span ng-if="$ctrl.onFieldFocusHandler">\n  on-field-focus="(key, field) => { console.log(\'focus: \' + key); }"</span><span ng-if="$ctrl.onFieldBlurHandler">\n  on-field-blur="(key, field) => { console.log(\'blur: \' + key); }"</span><span ng-if="$ctrl.onFieldChangeHandler">\n  on-field-change="(value, key, field) => { console.log(\'changed: \'+ key + \' to \' + value); }"</span><span ng-if="$ctrl.errorMessages">\n  error-messages="{{ $ctrl.errorMessages | json }}"</span><span ng-if="$ctrl.warningMessages">\n  warning-messages="{{ $ctrl.warningMessages | json }}"</span>\n  model="{{ $ctrl.model | json }}"<span ng-if="$ctrl.requirements.required">\n  required-fields="{{ $ctrl.requirements.required | json }}"</span>\n  fields="<div class="m-l-2">{{ $ctrl.requirements.properties | json }}"&gt;</div>&lt;/tw-fieldset&gt;</pre>\n      </div>\n    </div>'}).name;var ue=t(113),he=t.n(ue);function ge(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var be=function(){function e(l,t){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e);var o=this;o.types=[{value:"account",label:"Account"},{value:"profile",label:"Profile"},{value:"verification",label:"Verification"},{value:"pay-in",label:"Pay in"},{value:"transfer",label:"Transfer"},{value:"ach-login",label:"ACH Bank login"},{value:"old-recipient",label:"Old format recipients"},{value:"gbp-recipient",label:"GBP recipient"},{value:"list-type",label:"All webapp recipients"},{value:"restgw-sortcode",label:"RESTGW sortcode recipient"},{value:"restgw-aba",label:"RESTGW US recipient"},{value:"restgw-jpy",label:"RESTGW Japan recipient"},{value:"restgw-vnd",label:"RESTGW Vietnam recipient"},{value:"global-usd",label:"Global USD"}],o.type="profile",o.onRefreshRequirements=function(){console.log("on refresh requirements")},l.$watch("$ctrl.type",function(e){t.get("json/".concat(e,"-requirements.json")).then(function(e){o.requirements=e.data})})}var l,t,o;return l=e,(t=[{key:"$onInit",value:function(){this.model||(this.model={}),this.model.firstName="01010101010"}},{key:"logModel",value:function(e){console.log(e)}}])&&ge(l.prototype,t),o&&ge(l,o),e}();be.$inject=["$scope","$http"];var fe=a.a.module("tw.styleguide.demo.forms.requirements-form",[]).component("twRequirementsFormDocs",{controller:be,bindings:{model:"="},template:he.a}).name,ve=t(114),we=t.n(ve),$e=a.a.module("tw.styleguide.demo.forms.definition-list",[]).component("twDefinitionListDocs",{bindings:{model:"=",fields:"="},template:we.a}).name,ye=t(115),xe=t.n(ye),ke=a.a.module("tw.styleguide.demo.forms.focusable",[]).component("twFocusableDocs",{template:xe.a}).name,Te=a.a.module("tw.styleguide.demo.forms",[p,b,w,x,A,j,M,z,H,ee,oe,ne,ie,me,fe,$e,ke,Y,Z]).component("formDocs",{bindings:{model:"=",locales:"<"},controller:function(){this.sizes=[{value:"sm",label:"Small"},{value:"md",label:"Medium"},{value:"lg",label:"Large"}]},template:n.a}).name,Ce=t(116),Se=t.n(Ce),qe=t(117),Me=t.n(qe),Pe=a.a.module("tw.styleguide.demo.formatting.text-format",[]).component("twTextFormatDocs",{controller:function(){this.patterns=[{value:{format:"**** **** **** ****",minlength:16,maxlength:20,pattern:"^[0-9]*$",placeholder:"Number on the front of your card",helpText:"Credit/debit cards have either 16 or 20 digits"},label:"Credit card number",note:"**** **** **** ****"},{value:{format:"** / **",minlength:4,maxlength:4,pattern:"^[0-9]*$",placeholder:"MM / YY",helpText:"Month, then year"},label:"Card expiry",note:"** / **"},{value:{format:"** - ** - **",minlength:6,maxlength:7,pattern:"^[0-9]*$",placeholder:"** - ** - **",helpText:"UK sort codes have 6 or 7 digits"},label:"UK sort code",note:"** - ** - **"},{value:{format:"(+**) **** *** ***",minlength:10,maxlength:12,placeholder:"(+**) **** *** ***"},label:"UK phone number",note:"(+**) **** *** ***"},{value:{format:"***.***.***-**",minlength:11,maxlength:11,placeholder:"***.***.***-**"},label:"Brazilian CPF ID",note:"***.***.***-**"},{value:{format:"**.***.*** - *",minlength:9,maxlength:9,placeholder:"**.***.*** - *"},label:"Chilean RUT ID",note:"**.***.*** - *"}]},bindings:{model:"="},template:Me.a}).name,De=t(118),Fe=t.n(De),Le=a.a.module("tw.styleguide.demo.formatting.date-format",[]).component("twDateFormatDocs",{bindings:{locales:"<"},controller:function(){var e=this;this.formats=[{value:"short",label:"short"},{value:"medium",label:"medium"},{value:"long",label:"long"}];var l=new Date;this.dates={now:l,lastHour:new Date(l.getTime()-36e5),lastDay:new Date(l.getTime()-864e5),lastWeek:new Date(l.getTime()-6048e5),lastMonth:new Date(l.getTime()-2592e6),lastYear:new Date(l.getTime()-31536e6),nextHour:new Date(l.getTime()+36e5),nextDay:new Date(l.getTime()+864e5),nextWeek:new Date(l.getTime()+6048e5),nextMonth:new Date(l.getTime()+2592e6),nextYear:new Date(l.getTime()+31536e6)},this.timeChange=function(){e.time&&(e.hours=parseInt(e.time.substring(0,2),10),e.minutes=parseInt(e.time.substring(2,4),10),e.model&&(e.model.setHours(e.hours),e.model.setMinutes(e.minutes)))},this.dateChange=function(){e.model.setHours(e.hours),e.model.setMinutes(e.minutes)},this.hours=12,this.minutes=0},template:Fe.a}).name,Ie=t(119),ze=t.n(Ie),Oe=a.a.module("tw.styleguide.demo.formatting.number-format",[]).component("twNumberFormatDocs",{bindings:{locales:"<"},controller:function(){this.number=123456.78,this.locale="en-GB",this.precision=null},template:ze.a}).name,Re=t(120),Ae=t.n(Re),Ee=a.a.module("tw.styleguide.demo.formatting.currency-format",[]).component("twCurrencyFormatDocs",{bindings:{locales:"<"},controller:function(){this.number=123456.78,this.locale="en-GB",this.currency="GBP",this.currencies=[{value:"GBP",label:"Great British Pound",note:"2 decimals"},{value:"JPY",label:"Japanese Yen",note:"0 decimals"},{value:"JOD",label:"Jordanian Dinar",note:"3 decimals"}]},template:Ae.a}).name,Be=t(121),je=t.n(Be),Ne=a.a.module("tw.styleguide.demo.formatting.markdown",[]).component("twMarkdownDocs",{bindings:{markdown:"<"},controller:function(){this.markdown="# This is a heading\n## This is a sub heading \n* item 1 \n* item 2\n1. item 1\n2. item 2\n\n**hello**  *world*\n<div>this is a div and it should NOT be rendered</div>"},template:je.a}).name,Ue=a.a.module("tw.styleguide.demo.formatting",[Pe,Le,Oe,Ee,Ne]).component("formattingDocs",{bindings:{model:"=",locales:"<"},template:Se.a}).name,He=t(122),Ge=t.n(He),We=a.a.module("tw.styleguide.demo.validation",[]).component("validationDocs",{bindings:{model:"="},controller:function(){this.basicSelect=[{value:0,label:"Zero"},{value:1,label:"One"},{value:2,label:"Two"},{value:3,label:"Three"}],this.log=function(e){console.log(e)}},template:Ge.a}).name,Ve=t(123),Je=t.n(Ve),Ye=t(124),_e=t.n(Ye),Ke=a.a.module("tw.styleguide.demo.loading.process",[]).component("twProcessDocs",{controller:function(){this.log=function(e){console.log(e)},this.processingStates=[{value:null,label:"Processing"},{value:-1,label:"Failed"},{value:0,label:"Hidden"},{value:1,label:"Success"}],this.sizes=[{value:"xs",label:"Extra small"},{value:"sm",label:"Small"},{value:"xl",label:"Extra large"}]},template:_e.a}).name,Ze=t(125),Xe=t.n(Ze),Qe=a.a.module("tw.styleguide.demo.loading.loader",[]).component("twLoaderDocs",{template:Xe.a}).name,el=a.a.module("tw.styleguide.demo.loading",[Ke,Qe]).component("loadingDocs",{template:Je.a}).name,ll=t(126),tl=t.n(ll),ol=t(127),al=t.n(ol),rl=a.a.module("tw.styleguide.demo.layout.affix",[]).component("twAffixDocs",{template:al.a}).name,nl=t(128),sl=t.n(nl),cl=a.a.module("tw.styleguide.demo.layout.cards",[]).component("twCardsDocs",{controller:function(){this.imageUrl="https://static1.squarespace.com/static/58775efdd482e90f8535f34f/t/58d97b69ebbd1a5c0c1d9473/1498213976117/?format=750w",this.log=console.log},template:sl.a}).component("formExample",{template:'\n    <div class="row ">\n      <div class="col-sm-6 col-lg-4">\n        <div class="form-group m-b-0">\n          <label class="control-label">Send</label>\n          <div class="input-group">\n            <span class="input-group-addon ">£</span>\n            <input class="form-control text-xs-right p-r-0" type="text">\n            <span class="input-group-addon p-l-1 ">USD</span>\n          </div>\n        </div>\n      </div>\n      <div class="col-sm-6 col-lg-4 m-b-0">\n        <div class="form-group m-b-0">\n          <label class="control-label">Receive about </label>\n          <div class="input-group">\n            <span class="input-group-addon ">£</span>\n            <input class="form-control text-xs-right p-r-0" type="text">\n            <span class="input-group-addon p-l-1 ">USD</span>\n          </div>\n        </div>\n      </div>\n      <div class="col-sm-12 col-lg-4 p-t-3 m-b-0">\n        <button class="btn btn-success btn-block">Repeat transfer</button>\n      </div>\n    </div>'}).component("expandExample",{transclude:{expandedHead:"heading",expandedBody:"?middle",expandedButtons:"buttons"},template:'\n    <div>\n      <div class="m-t-1 m-b-3 visible-xs-block visible-sm-block" ng-transclude="expandedHead"></div>\n      <div ng-transclude="expandedBody"></div>\n      <hr class="hidden-xs hidden-sm hidden-md">\n      <div class="m-t-2 btn-toolbar" ng-transclude="expandedButtons"></div>\n    </div>'}).component("collapseExample",{transclude:{collapseBody:"?middle",collapseRight:"right"},template:'\n    <div class="media">\n      <div class="media-body" ng-transclude="collapseBody"></div>\n      <div class="media-right text-xs-right" ng-transclude="collapseRight"></div>\n    </div>'}).name,il=a.a.module("tw.styleguide.demo.layout",[rl,cl]).component("layoutDocs",{template:tl.a}).name,dl=t(129),pl=t.n(dl),ml=t(130),ul=t.n(ml),hl=a.a.module("tw.styleguide.demo.help.pop-over",[]).component("twPopOverDocs",{template:ul.a}).name,gl=t(131),bl=t.n(gl),fl=a.a.module("tw.styleguide.demo.help.tool-tip",[]).component("twToolTipDocs",{template:bl.a}).name,vl=a.a.module("tw.styleguide.demo.help",[hl,fl]).component("helpDocs",{template:pl.a}).name,wl=t(132),$l=t.n(wl);function yl(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var xl=function(){function e(l){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.$http=l}var l,t,o;return l=e,(t=[{key:"$onInit",value:function(){this.locale="en-GB",this.errors={industry:"We were hoping you would pick the other one",shareholders:[{firstName:"Choose a better one"},{lastName:"And here as well"}],streetAddress:"And this one could be better"},this.schema={},this.model={},this.translations={array:{add:"Add",remove:"Remove"},validation:{required:"Field is required",minLength:"Too short",maxLength:"Too long",minimum:"Too low",maximum:"Too high",pattern:"Invalid characters"},upload:{choose:"Choose file",processing:"Working...",success:"Success!",failed:"Upload failed",cancel:"Choose another file"}},this.schemaType="",this.schemaOptions=[{value:"json-schema/gbp-recipient.json",label:"GBP recipient"},{value:"json-schema/usd-recipient.json",label:"USD recipient"},{value:"json-schema/demo.json",label:"Complex example"},{value:"json-schema/simple.json",label:"Simple example"}],this.onSchemaChange(this.schemaOptions[0].value)}},{key:"onSchemaChange",value:function(e){var l=this;this.$http.get(e).then(function(e){l.schema=e.data})}},{key:"onModelChange",value:function(e,l,t){this.isValid=l,console.log("Model changed",e),console.log("Is valid?",l),console.log("Triggered by schema",t),this.model=e}}])&&yl(l.prototype,t),o&&yl(l,o),e}();xl.$inject=["$http"];var kl=xl;function Tl(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function Cl(e){var l=new RegExp("([\\s{,])([a-zA-Z0-9_]+):","g");return e.replace(l,'$1"$2":')}var Sl=function(){function e(){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e)}var l,t,o;return l=e,(t=[{key:"$onInit",value:function(){this.schema={type:"object",properties:{name:{type:"string",title:"Name"},details:{title:"Account type",oneOf:[{title:"Account number & sort code",type:"object",properties:{sortCode:{type:"string",title:"Sort code"},accountNumber:{type:"string",title:"Account number"}},required:["sortCode","accountNumber"]},{title:"IBAN",type:"object",properties:{iban:{type:"string",title:"IBAN",minLength:10}},required:["iban"]}]}}},this.inputModel={name:"Joe",details:{iban:"ABCDEF1234567"}},this.schemaString=JSON.stringify(this.schema,null,2),this.modelString=JSON.stringify(this.inputModel,null,2),this.myModel=this.model}},{key:"onSchemaChange",value:function(e){var l=Cl(e);try{this.schema=JSON.parse(l)}catch(e){console.log("invalid schema")}}},{key:"onInputModelChange",value:function(e){var l=Cl(e);try{this.inputModel=JSON.parse(l)}catch(e){console.log("invalid model")}}},{key:"onModelChange",value:function(e,l){this.outputModel=e,this.isValid=l}}])&&Tl(l.prototype,t),o&&Tl(l,o),e}(),ql=t(133),Ml=t.n(ql),Pl=a.a.module("tw.styleguide.demo.json-schema",[]).component("jsonSchemaDocs",{controller:kl,template:$l.a}).component("jsonSchemaPlayground",{controller:Sl,template:Ml.a}).name;function Dl(e,l){for(var t=0;t<l.length;t++){var o=l[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var Fl=angular.module("tw.styleguide.demo",[Te,Ue,We,el,il,vl,Pl]),Ll=function(){function e(){!function(e,l){if(!(e instanceof l))throw new TypeError("Cannot call a class as a function")}(this,e),this.model={components:{}},this.locales=[{value:"en-GB",label:"English UK"},{value:"en-US",label:"English US"},{value:"fr-FR",label:"French"},{value:"es-ES",label:"Spanish"},{value:"es-US",label:"Spanish US"},{value:"pt-BR",label:"Brazillian Portuguese"},{value:"ja-JP",label:"Japanese"},{value:"ar-EG",label:"Eastern Arabic"},{value:"en-IN",label:"English Indian"},{value:"xx-XX",label:"Unknown locale"}]}var l,t,o;return l=e,(t=[{key:"log",value:function(e){console.log(e)}}])&&Dl(l.prototype,t),o&&Dl(l,o),e}();Fl.config(["$compileProvider",function(e){e.debugInfoEnabled(!1)}]).controller("PageController",Ll).component("docsNavigation",{template:'\n    <h5>Help</h5>\n    <ul class="list-unstyled">\n      <li><a href="index.html#pop-over">Pop over</a></li>\n      <li><a href="index.html#tool-tip">Tool tip</a></li>\n    </ul>\n\n    <h5>Forms</h5>\n    <ul class="list-unstyled">\n      <li><a href="index.html#amount-currency-select">Amount currency select</a></li>\n      <li><a href="index.html#checkbox">Checkbox</a></li>\n      <li><a href="index.html#currency-input">Currency input</a></li>\n      <li><a href="index.html#date">Date</a></li>\n      <li><a href="index.html#date-lookup">Date lookup</a></li>\n      <li><a href="index.html#drag-and-drop">Drag and drop</a></li>\n      <li><a href="index.html#focusable">Focusable</a></li>\n      <li><a href="index.html#form-control">Form control</a></li>\n      <li><a href="index.html#radio">Radio</a></li>\n      <li><a href="index.html#select">Select</a></li>\n      <li><a href="index.html#submit">Submit</a></li>\n      <li><a href="index.html#telephone">Telephone</a></li>\n      <li><a href="index.html#upload">Upload</a></li>\n      <li><a href="index.html#multi-upload-demo">Multi-upload</a></li>\n      <li><a href="index.html#validation">Validation</a></li>\n    </ul>\n\n    <h5>Requirements</h5>\n    <ul class="list-unstyled">\n      <li><a href="requirements.html#field">Field</a></li>\n      <li><a href="requirements.html#fieldset">Fieldset</a></li>\n      <li><a href="index.html#requirements-form">Form</a></li>\n      <li><a href="requirements.html#definition-list">Definition list</a></li>\n    </ul>\n\n    <h5>Formatting</h5>\n    <ul class="list-unstyled">\n      <li><a href="index.html#currency-format">Currency format</a></li>\n      <li><a href="index.html#date-format">Date format</a></li>\n      <li><a href="index.html#number-format">Number format</a></li>\n      <li><a href="index.html#text-format">Text format</a></li>\n      <li><a href="index.html#markdown">Markdown</a></li>\n    </ul>\n\n    <h5>Layout</h5>\n    <ul class="list-unstyled">\n      <li><a href="index.html#cards">Cards</a></li>\n    </ul>\n\n    <h5>Loading</h5>\n    <ul class="list-unstyled">\n      <li><a href="index.html#process">Process</a></li>\n      <li><a href="index.html#loader">Loader</a></li>\n    </ul>'}).directive("docsErrorMessages",function(){return{replace:!0,template:"\n    <div class='alert alert-danger'>\n      <div class='error-required'>Required</div>\n      <div class='error-minlength'>Too short</div>\n      <div class='error-maxlength'>Too long</div>\n      <div class='error-pattern'>Invalid characters</div>\n      <div class='error-async'>Invalid async</div>\n    </div>"}}).directive("docsStatusMessages",function(){return{replace:!0,template:"\n    <div class='status-messages'>\n      <div class='touched'>Touched</div>\n      <div class='untouched'>Untouched</div>\n      <div class='pristine'>Pristine</div>\n      <div class='dirty'>Dirty</div>\n    </div>"}});l.default=Fl.name}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,