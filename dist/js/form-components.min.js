angular.module("tw.form-components", []);
!function(a){"use strict";function b(a,b,c,d){function e(a){return!isNaN(parseFloat(a))}var f=this,g=a.controller("ngModel");f.showDecimals=!0,b.$watch("$ctrl.ngModel",function(a,b){a!==b&&g.$setDirty()}),b.$watch("$ctrl.currency",function(a,b){a&&a!==b&&(f.showDecimals=d.getDecimals(a)>0)}),b.$watch("$ctrl.locked",function(a,b){f.showLock="undefined"!=typeof f.locked}),a.find("input").on("blur",function(){g.$setTouched(),a.triggerHandler("blur")}),g.$validators.min=function(a,b){return"undefined"==typeof f.ngMin||null===f.ngMin||!e(b)||b>=f.ngMin},g.$validators.max=function(a,b){return"undefined"==typeof f.ngMax||null===f.ngMax||!e(b)||b<=f.ngMax},f.changedAmount=function(){f.ngChange&&c(f.ngChange),f.onAmountChange&&(console&console.log&&console.log("onAmountChange is deprecated in twAmountCurrencySelect, please use ngChange."),c(f.onAmountChange))},f.changedCurrency=function(){f.onCurrencyChange&&c(f.onCurrencyChange)},f.customAction=function(){f.onCustomAction&&f.onCustomAction()},f.lockClick=function(){f.locked=!f.locked,f.onLockedChange&&c(f.onLockedChange)}}a.module("tw.form-components").controller("TwAmountCurrencySelectController",b),b.$inject=["$element","$scope","$timeout","TwCurrencyData"]}(window.angular),function(a){"use strict";function b(a,b,c,d){function e(a){return!isNaN(parseFloat(a))}var f=this,g=a.controller("ngModel");f.showDecimals=!0,b.$watch("$ctrl.ngModel",function(a,b){a!==b&&g.$setDirty()}),b.$watch("$ctrl.currency",function(a,b){a!==b&&(f.showDecimals=d.getDecimals(a)>0)}),b.$watch("$ctrl.locked",function(a,b){f.showLock="undefined"!=typeof f.locked}),a.find("input").on("blur",function(){g.$setTouched(),a.triggerHandler("blur")}),f.currencyCode&&console&&console.log&&console.log("currency code is deprecated in twCurrencyInput, please use currency."),g.$validators.min=function(a,b){return"undefined"==typeof f.ngMin||null===f.ngMin||!e(b)||b>=f.ngMin},g.$validators.max=function(a,b){return"undefined"==typeof f.ngMax||null===f.ngMax||!e(b)||b<=f.ngMax},f.changedInputValue=function(){f.ngChange&&c(f.ngChange)},f.lockClick=function(){f.locked=!f.locked,f.onLockedChange&&c(f.onLockedChange)}}a.module("tw.form-components").controller("TwCurrencyInputController",b),b.$inject=["$element","$scope","$timeout","TwCurrencyData"]}(window.angular),function(a){"use strict";function b(a,b,c){function d(){if(B.ngModel)g(),C=!0;else{if(B.modelType){if(B.modelType!==F&&B.modelType!==G)throw new Error("Invalid modelType, should be "+F+" or "+G);B.dateModelType=B.modelType}else B.dateModelType=G;B.day=null,B.month=0,B.year=null}A=a.controller("ngModel"),A.$validators.min=function(a){var b=e(B.ngMin,B.min),c=f(a);return!b||!c||c>=b},A.$validators.max=function(a){var b=e(B.ngMax,B.max),c=f(a);return!b||!c||c<=b},i(),j(),k(),h(),p()}function e(a,b){var c=a?a:!!b&&b;return!!c&&(c="string"==typeof c?new Date(c):c,!!n(c)&&c)}function f(a){return"string"==typeof a?new Date(a):a}function g(){if(!m(B.ngModel))throw new Error("date model passed should either be instance of Date or valid ISO8601 string");B.dateModelType="string"==typeof B.ngModel?F:G,B.explodeDateModel(B.ngModel)}function h(){B.dateMonths=q()}function i(){B.dateRequired=void 0!==B.ngRequired?B.ngRequired:void 0!==B.required}function j(){B.dateDisabled=void 0!==B.ngDisabled?B.ngDisabled:void 0!==B.disabled}function k(){B.locale||(B.locale=D),B.locale.indexOf("US",B.locale.length-2)!==-1?B.monthBeforeDay=!0:B.monthBeforeDay=!1}function l(a){var b="string"==typeof a?new Date(a):a;B.day=b.getDate(),B.month=b.getMonth(),B.year=b.getFullYear()}function m(a){return n(a)||o(a)}function n(a){return"[object Date]"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())}function o(a){return"string"==typeof a&&n(new Date(a))}function p(){c.$watch("vm.day",function(a,b){a!==b&&C&&A.$setDirty()}),c.$watch("vm.month",function(a,b){a!==b&&(B.adjustLastDay(),A.$setTouched(),C&&A.$setDirty())}),c.$watch("vm.year",function(a,b){a!==b&&C&&A.$setDirty()}),c.$watch("vm.ngModel",function(a,b){a!==b&&m(B.ngModel)&&(A.$setDirty(),B.explodeDateModel(B.ngModel))}),c.$watch("vm.ngRequired",function(a,b){a!==b&&i()}),c.$watch("vm.ngDisabled",function(a,b){a!==b&&j()}),c.$watch("vm.locale",function(a,b){a!==b&&(k(),h())})}function q(){var a;return r(B.locale)?a=s():(b.warn('i18n not supported for locale "'+B.locale+'"'),a=E),t(a)}function r(a){return window.Intl&&"object"==typeof window.Intl&&window.Intl.DateTimeFormat.supportedLocalesOf([a]).length>0}function s(){for(var a,b=[],c=0;c<12;c++){a=new Date(Date.UTC(2e3,c,15));var d=a.toLocaleDateString(B.locale,{month:"long"});d=d[0].toUpperCase()+d.substring(1),b.push(d)}return b}function t(a){return a.map(function(a,b){return{value:b,label:a}})}function u(){return v(B.year)&&v(B.day)&&(v(B.month)||w(B.month))}function v(a){return"number"==typeof a}function w(a){return"string"==typeof a&&!isNaN(Number(B.month))}function x(){var a=new Date(Date.UTC(Number(B.year),Number(B.month),Number(B.day)));return a.setFullYear(B.year),a}function y(){if(B.adjustLastDay(),!u())return void A.$setViewValue(null);var a=x();if(B.dateModelType===F){var b=a.toISOString(),c=b.substring(0,b.indexOf("T"));A.$setViewValue(c)}else A.$setViewValue(a)}function z(){var a=Number(B.day),b=Number(B.month),c=Number(B.year),d=new Date(Date.UTC(c,b+1,0)),e=d.getUTCDate();a>e&&(B.day=parseInt(e))}var A,B=this,C=!1;B.updateDateModelAndValidationClasses=y,B.explodeDateModel=l,B.combineDate=x,B.adjustLastDay=z,B.validDate=m;var D="en",E=["January","February","March","April","May","June","July","August","September","October","November","December"],F="string",G="object";d()}a.module("tw.form-components").controller("TwDateController",b),b.$inject=["$element","$log","$scope"]}(window.angular),function(a){"use strict";function b(){return{require:"ngModel",bindToController:!0,controller:"TwAmountCurrencySelectController",controllerAs:"$ctrl",replace:!1,restrict:"E",template:c,scope:{ngModel:"=",ngMin:"=",ngMax:"=",ngRequired:"=",ngDisabled:"=",ngChange:"&",amountReadOnly:"=",onAmountChange:"&",currency:"=",currencies:"=",onCurrencyChange:"&",currencyFilterPlaceholder:"@",customActionLabel:"=",onCustomAction:"&",placeholder:"@",locked:"=",onLockedChange:"&",size:"@",locale:"@"}}}a.module("tw.form-components").directive("twAmountCurrencySelect",b);var c='\t\t<div class="input-group" ng-class="{ \t\t\t\'input-group-sm\': $ctrl.size === \'sm\', \t\t\t\'input-group-lg\': $ctrl.size === \'lg\', \t\t\tdisabled: $ctrl.ngDisabled \t\t}">  \t\t\t<input \t\t\t\ttype="tel"  \t\t\t\tautocomplete="off"  \t\t\t\tname="amount"  \t\t\t\tstep="any"  \t\t\t\tclass="form-control"  \t\t\t\tplaceholder="{{ $ctrl.placeholder }}" \t\t\t\ttw-focusable  \t\t\t\tshow-decimals="$ctrl.showDecimals" \t\t\t\ttw-number-input-formatter  \t\t\t\tng-change="$ctrl.changedAmount()"  \t\t\t\tng-model="$ctrl.ngModel" \t\t\t\tng-disabled="$ctrl.ngDisabled" /> \t\t\t<span class="input-group-addon" ng-if="$ctrl.showLock" \t\t\t\tng-class="{\'input-lg\': $ctrl.size === \'lg\'}"> \t\t\t\t<a href="" ng-click="$ctrl.lockClick()" class="tw-rate-lock-link"> \t\t\t\t\t<i class="icon icon-lock" ng-if="$ctrl.locked"></i> \t\t\t\t\t<i class="icon icon-unlock" ng-if="!$ctrl.locked"></i> \t\t\t\t</a> \t\t\t</span> \t\t\t<span class="input-group-btn">  \t\t\t\t<tw-select \t\t\t\t\tng-model="$ctrl.currency" \t\t\t\t\tng-required="true" \t\t\t\t\tsize="{{ $ctrl.size }}" \t\t\t\t\tinverse="true" \t\t\t\t\tdropdown-right="xs" \t\t\t\t\tdropdown-width="md" \t\t\t\t\thide-note="true" \t\t\t\t\thide-secondary="true" \t\t\t\t\toptions="$ctrl.currencies" \t\t\t\t\tfilter="{{ $ctrl.currencyFilterPlaceholder }}" \t\t\t\t\tng-change="$ctrl.changedCurrency()"> \t\t\t\t\t\t<a href="" ng-if="!!$ctrl.customActionLabel" ng-click="$ctrl.onCustomAction()"> \t\t\t\t\t\t\t{{ $ctrl.customActionLabel }} \t\t\t\t\t\t</a> \t\t\t\t</tw-select> \t\t\t</span> \t\t</div>'}(window.angular),function(a){function b(){function a(a,c){var d=this,e=c.controller("ngModel");c.find(".tw-checkbox-button");labelSelector=".checkbox",d.isChecked=function(){return d.ngTrueValue&&d.ngTrueValue===d.ngModel||!d.ngTrueValue&&d.ngModel||!1},d.checked=d.isChecked(),d.buttonClick=function(a){d.checked?(d.checked=!1,e.$setViewValue(d.ngFalseValue||!1)):(d.checked=!0,e.$setViewValue(d.ngTrueValue||!0)),e.$setTouched(),a&&a.stopPropagation(),b(d.checked,c,e,d)},d.buttonFocus=function(){c.closest(".checkbox").find("label").addClass("focus"),c.triggerHandler("focus")},d.buttonBlur=function(){c.closest(".checkbox").find("label").removeClass("focus"),c.triggerHandler("blur"),e.$setTouched(),b(d.checked,c,e,d)},d.hiddenClick=function(a){a.stopPropagation()},c.closest("label").on("click",function(a){c.find("button").trigger("click"),a.preventDefault(),a.stopPropagation()}),a.$watch("$ctrl.ngModel",function(a,f){a!==f&&(e.$setDirty(),b(d.checked,c,e,d),d.checked=d.isChecked())}),a.$watch("$ctrl.ngDisabled",function(a,b){a&&!b?c.closest(".checkbox").addClass("disabled").addClass("disabled",!0):!a&&b&&c.closest(".checkbox").removeClass("disabled").removeClass("disabled")}),a.$watch("$ctrl.ngRequired",function(a,f){a!==f&&a&&b(d.checked,c,e,d)})}function b(a,b,c,d){c.$touched&&(!a&&d.ngRequired?(c.$setValidity("required",!1),b.find(".tw-checkbox-button").addClass("has-error"),b.closest(".checkbox").addClass("has-error"),b.closest(".form-group").addClass("has-error")):(c.$setValidity("required",!0),b.find(".tw-checkbox-button").removeClass("has-error"),b.closest(".checkbox").removeClass("has-error"),b.closest(".form-group").removeClass("has-error")))}return{restrict:"EA",require:"ngModel",controller:["$scope","$element",a],controllerAs:"$ctrl",bindToController:!0,scope:{name:"@",ngModel:"=",ngTrueValue:"=",ngFalseValue:"=",ngRequired:"=",ngDisabled:"="},template:" \t\t\t\t<input type='hidden' class='sr-only' \t\t\t\t\tname='{{$ctrl.name}}' \t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\tng-click='$ctrl.hiddenClick($event)' \t\t\t\t\tng-disabled='$ctrl.ngDisabled'/> \t\t\t\t<button class='tw-checkbox-button' tw-focusable \t\t\t\t\tng-click='$ctrl.buttonClick($event)' \t\t\t\t\tng-focus='$ctrl.buttonFocus()' \t\t\t\t\tng-blur='$ctrl.buttonBlur()' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\tng-class='{\"checked\": $ctrl.checked}' \t\t\t\t\taria-pressed='{{$ctrl.checked}}'> \t\t\t\t\t<span class='tw-checkbox-check glyphicon glyphicon-ok'></span> \t\t\t\t</button>"}}a.module("tw.form-components").directive("twCheckbox",b)}(window.angular),function(a){"use strict";function b(){return{require:"ngModel",bindToController:!0,controller:"TwCurrencyInputController",controllerAs:"$ctrl",replace:!1,restrict:"E",template:c,scope:{ngModel:"=",ngChange:"&",ngMin:"=",ngMax:"=",ngRequired:"=",ngDisabled:"=",currency:"=",currencyCode:"@",placeholder:"@",size:"@",locale:"@",locked:"=",onLockedChange:"&"}}}a.module("tw.form-components").directive("twCurrencyInput",b);var c=' \t\t<div class="input-group" ng-class="{ \t\t\t\'input-group-sm\': $ctrl.size === \'sm\', \t\t\t\'input-group-lg\': $ctrl.size === \'lg\', \t\t\tdisabled: $ctrl.ngDisabled \t\t}"> \t\t\t<input \t\t\t\ttype="tel" \t\t\t\tautocomplete="off" \t\t\t\tname="amount" \t\t\t\tstep="any" \t\t\t\tclass="form-control p-r-0" \t\t\t\tplaceholder="{{$ctrl.placeholder}}" \t\t\t\tshow-decimals="$ctrl.showDecimals" \t\t\t\ttw-focusable \t\t\t\ttw-number-input-formatter \t\t\t\tng-change="$ctrl.changedInputValue()" \t\t\t\tng-model="$ctrl.ngModel" \t\t\t\tng-disabled="$ctrl.ngDisabled" /> \t\t\t<span class="input-group-addon tw-currency-input-code p-l-1"> \t\t\t\t<a href=""  class="tw-rate-lock-link m-r-1" \t\t\t\t\tng-if="$ctrl.showLock" \t\t\t\t\tng-click="$ctrl.lockClick()"> \t\t\t\t\t<i class="icon icon-lock" ng-if="$ctrl.locked"></i> \t\t\t\t\t<i class="icon icon-unlock" ng-if="!$ctrl.locked"></i> \t\t\t\t</a> \t\t\t\t{{ $ctrl.currency || $ctrl.currencyCode }} \t\t\t</span> \t\t</div> \t'}(window.angular),function(a){"use strict";function b(){var a={require:"ngModel",bindToController:!0,controller:"TwDateController",controllerAs:"vm",replace:!1,restrict:"E",scope:{ngModel:"=",required:"@",ngRequired:"=",disabled:"@",ngDisabled:"=",locale:"@",twLocale:"=",min:"@",ngMin:"=",max:"@",ngMax:"=",modelType:"@"},template:g,link:c};return a}function c(a,b,c,d){var e,f;b.find("input[name=day]").on("blur",function(){e=!0,e&&f&&(d.$setTouched(),b.triggerHandler("blur"))}),b.find("input[name=year]").on("blur",function(){f=!0,d.$setTouched(),b.triggerHandler("blur")})}a.module("tw.form-components").directive("twDate",b);var d=" \t\t<label class='sr-only' for='day-{{::uniqueId}}'>Day</label> \t\t<input type='number' \t\t\tname='day' \t\t\tid='day-{{::uniqueId}}' \t\t\tclass='form-control tw-date-day' \t\t\tng-model='vm.day' \t\t\tng-change='vm.updateDateModelAndValidationClasses()' \t\t\tplaceholder='DD' \t\t\tmin='1' \t\t\tng-min='1' \t\t\tng-disabled='vm.dateDisabled' \t\t\tng-required='vm.dateRequired' \t\t\ttw-focusable />",e="  \t\t<label class='sr-only' for='month-{{::uniqueId}}'>Month</label>\t\t<tw-select \t\t\tname='month' \t\t\tclass='tw-date-month' \t\t\tid='month-{{::uniqueId}}' \t\t\tng-model='vm.month' \t\t\tng-change='vm.updateDateModelAndValidationClasses()' \t\t\tng-required='vm.dateRequired' \t\t\tng-disabled='vm.dateDisabled' \t\t\toptions='vm.dateMonths'> \t\t</tw-select>",f=" \t\t<label class='sr-only' for='year-{{::uniqueId}}'>Year</label> \t\t<input type='number' \t\t\tid='year-{{::uniqueId}}' \t\t\tname='year' \t\t\tclass='form-control tw-date-year' \t\t\tplaceholder='YYYY' \t\t\tng-model='vm.year' \t\t\tng-change='vm.updateDateModelAndValidationClasses()' \t\t\tng-min='vm.dateRange.min.getFullYear()' \t\t\tng-max='vm.dateRange.max.getFullYear()' \t\t\tmaxlength='4' \t\t\tng-maxlength='4' \t\t\tng-disabled='vm.dateDisabled' \t\t\tng-required='vm.dateRequired' \t\t\ttw-focusable />",g=" \t\t<div class='row'> \t\t\t<div class='col-sm-5 tw-date-month-column' ng-if='vm.monthBeforeDay'>"+e+" \t\t\t</div> \t\t\t<div class='col-sm-3 tw-date-day-column'>"+d+" \t\t\t</div> \t\t\t<div class='col-sm-5 tw-date-month-column' ng-if='!vm.monthBeforeDay'>"+e+" \t\t\t</div> \t\t\t<div class='col-sm-4 tw-date-year-column'>"+f+" \t\t\t</div> \t\t</div>"}(window.angular),function(a){function b(){return{restrict:"E",require:"ngModel",transclude:!0,controllerAs:"$ctrl",bindToController:!0,controller:"TwDynamicFormControlController",link:d,scope:{type:"@",name:"@",id:"@",placeholder:"@",step:"@",options:"=",ngModel:"=",ngRequired:"=",ngDisabled:"=",ngMinlength:"=",ngMaxlength:"=",ngMin:"=",ngMax:"=",ngPattern:"="},template:"<div ng-switch='$ctrl.type'> \t\t\t\t<input ng-switch-when='text'  \t\t\t\t\tname='{{$ctrl.name}}'  \t\t\t\t\ttype='text' \t\t\t\t\tclass='form-control' \t\t\t\t\tplaceholder='{{$ctrl.placeholder}}' \t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\tng-model-options='{ allowInvalid: true }' \t\t\t\t\tng-required='$ctrl.ngRequired' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\tng-pattern='$ctrl.ngPattern' \t\t\t\t\tng-change='$ctrl.change()' \t\t\t\t\tng-focus='$ctrl.focus()' \t\t\t\t\tng-blur='$ctrl.blur()' \t\t\t\t\tng-minlength='$ctrl.ngMinlength' \t\t\t\t\tng-maxlength='$ctrl.ngMaxlength' />  \t\t\t\t<input ng-switch-when='password'  \t\t\t\t\tname='{{$ctrl.name}}'  \t\t\t\t\ttype='password' \t\t\t\t\tclass='form-control' \t\t\t\t\tplaceholder='{{$ctrl.placeholder}}' \t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\tng-model-options='{ allowInvalid: true }' \t\t\t\t\tng-required='$ctrl.ngRequired' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\tng-change='$ctrl.change()' \t\t\t\t\tng-focus='$ctrl.focus()' \t\t\t\t\tng-blur='$ctrl.blur()' \t\t\t\t\tng-minlength='$ctrl.ngMinlength' \t\t\t\t\tng-maxlength='$ctrl.ngMaxlength' />  \t\t\t\t<input ng-switch-when='number'  \t\t\t\t\tname='{{$ctrl.name}}'  \t\t\t\t\ttype='number' \t\t\t\t\tstep='{{$ctrl.step}}' \t\t\t\t\tclass='form-control' \t\t\t\t\tplaceholder='{{$ctrl.placeholder}}' \t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\tng-model-options='{ allowInvalid: true }' \t\t\t\t\tng-required='$ctrl.ngRequired' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\tng-change='$ctrl.change()' \t\t\t\t\tng-focus='$ctrl.focus()' \t\t\t\t\tng-blur='$ctrl.blur()' \t\t\t\t\tng-min='$ctrl.ngMin' \t\t\t\t\tng-max='$ctrl.ngMax' />  \t\t\t\t<div ng-switch-when='radio' \t\t\t\t\tclass='radio' \t\t\t\t\tng-class='{disabled: $ctrl.ngDisabled}' \t\t\t\t\tng-repeat='option in $ctrl.options'> \t\t\t\t\t<label> \t\t\t\t\t\t<tw-radio \t\t\t\t\t\t\tname='{{$ctrl.name}}' \t\t\t\t\t\t\tng-value='option.value' \t\t\t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\t\t\tng-required='$ctrl.ngRequired' \t\t\t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\t\t\tng-change='$ctrl.change()' \t\t\t\t\t\t\tng-click='$ctrl.change()' \t\t\t\t\t\t\tng-focus='$ctrl.focus()' \t\t\t\t\t\t\tng-blur='$ctrl.blur()' /> \t\t\t\t\t\t{{option.label}} \t\t\t\t\t</label> \t\t\t\t</div> \t\t\t\t<div ng-switch-when='checkbox' \t\t\t\t\tclass='checkbox' \t\t\t\t\tng-class='{disabled: $ctrl.ngDisabled}'> \t\t\t\t\t<label> \t\t\t\t\t\t<tw-checkbox \t\t\t\t\t\t\tname='{{$ctrl.name}}' \t\t\t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\t\t\tng-required='$ctrl.ngRequired' \t\t\t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\t\t\tng-change='$ctrl.change()' \t\t\t\t\t\t\tng-click='$ctrl.change()' \t\t\t\t\t\t\tng-focus='$ctrl.focus()' \t\t\t\t\t\t\tng-blur='$ctrl.blur()' /> \t\t\t\t\t\t{{$ctrl.placeholder}} \t\t\t\t\t</label> \t\t\t\t</div> \t\t\t\t<div ng-switch-when='select'> \t\t\t\t\t<tw-select \t\t\t\t\t\tname='{{$ctrl.name}}' \t\t\t\t\t\toptions='$ctrl.options' \t\t\t\t\t\tplaceholder='{{$ctrl.placeholder}}' \t\t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\t\tng-required='$ctrl.ngRequired' \t\t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\t\tng-change='$ctrl.change()' \t\t\t\t\t\tng-focus='$ctrl.focus()' \t\t\t\t\t\tng-blur='$ctrl.blur()' /> \t\t\t\t</div> \t\t\t\t<ng-transclude class='error-messages'></ng-transclude> \t\t\t</div>"}}function c(a,b){var c=this,d=a.controller("ngModel");c.change=function(){d.$setDirty(),c.ngChange&&c.ngChange()},c.focus=function(){a.triggerHandler("focus")},c.blur=function(){d.$setTouched(),a.triggerHandler("blur")}}function d(a,b,c,d){d.$validators.min=function(b,c){return"undefined"==typeof a.$ctrl.ngMin||!("number"==typeof c&&"number"==typeof a.$ctrl.ngMin&&c<a.$ctrl.ngMin)},d.$validators.max=function(b,c){return"undefined"==typeof a.$ctrl.ngMax||!("number"==typeof c&&"number"==typeof a.$ctrl.ngMax&&c>a.$ctrl.ngMax)}}a.module("tw.form-components").directive("twDynamicFormControl",b),a.module("tw.form-components").controller("TwDynamicFormControlController",c),c.$inject=["$element","$scope"]}(window.angular),function(a){function b(){return{restrict:"E",template:"<div class='loader'> \t\t\t  <div class='loader-spinner'></div> \t\t\t  <div class='loader-flag'> \t\t\t    <svg xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='-2 -2 56 56'> \t\t\t      <polygon class='loader-flag-stroke'  stroke='#00B9FF' stroke-width='2' stroke-linejoin='miter' stroke-linecap='round' stroke-miterlimit='10' stroke-dasharray='300' stroke-dashoffset='300' fill='none' points='24.6,27.3 0,27.3 14.3,13.7 6.1,0 48.2,0 26.3,52 19.5,52 39.2,5.5 16.8,5.5 21.6,13.6 13.4,21.8 27,21.8' /> \t\t\t    </svg> \t\t\t    <svg class='loader-flag-fill' xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='0 2 52 48'> \t\t\t      <polygon fill='#00B9FF' points='6.1,0 14.3,13.7 0,27.3 24.6,27.3 27,21.8 13.4,21.8 21.6,13.6 16.8,5.5 39.2,5.5 19.5,52 26.3,52 48.2,0 '/> \t\t\t    </svg> \t\t\t  </div> \t\t\t</div>"}}a.module("tw.form-components").directive("twLoader",b)}(window.angular),function(a){"use strict";function b(){return{restrict:"E",controllerAs:"$ctrl",bindToController:!0,scope:{state:"=",size:"@",onStop:"&"},controller:["$scope","$interval","$timeout",c],template:"<span class='process' \t\t\t\tng-class='{ \t\t\t\t\t\"process-success\": $ctrl.processing === 1, \t\t\t\t\t\"process-danger\": $ctrl.processing === -1, \t\t\t\t\t\"process-stopped\": $ctrl.processing === 0, \t\t\t\t\t\"process-xs\": $ctrl.size === \"xs\", \t\t\t\t\t\"process-sm\": $ctrl.size === \"sm\", \t\t\t\t\t\"process-md\": $ctrl.size === \"md\", \t\t\t\t\t\"process-lg\": $ctrl.size === \"lg\", \t\t\t\t\t\"process-xl\": $ctrl.size === \"xl\" \t\t\t\t}'> \t\t\t\t<span class='process-icon-container'> \t\t\t\t\t<span class='process-icon-horizontal'></span> \t\t\t\t\t<span class='process-icon-vertical'></span> \t\t\t\t</span> \t\t\t\t<svg version='1.1' \t\t\t\t\txmlns='http://www.w3.org/2000/svg' \t\t\t\t\txml:space='preserve'> \t\t\t\t\t<circle class='process-circle' cx='50%' cy='50%' ng-attr-r='{{$ctrl.radius}}' \t\t\t\t\t\tfill-opacity='0.0' /> \t\t\t\t</svg> \t\t\t</span>"}}function c(a,b,c){var d=this;d.processing=d.state;var e;a.$watch("$ctrl.state",function(a){d.processing!==-1&&0!==d.processing&&1!==d.processing||(d.processing=null,d.startProcess())}),a.$watch("$ctrl.size",function(a){switch(b.cancel(e),d.startProcess(),d.size||(d.size="sm"),d.size){case"xs":d.radius="11";break;case"sm":d.radius="22";break;case"xl":d.radius="61";break;default:d.radius="46%"}}),d.startProcess=function(){e=b(function(){d.processing=d.state,d.state!==-1&&0!==d.state&&1!==d.state||d.stopProcess()},1500)},d.stopProcess=function(){b.cancel(e),d.onStop&&(0===d.state?d.onStop():c(d.onStop,1800))},d.startProcess()}a.module("tw.form-components").directive("twProcess",b)}(window.angular),function(a){function b(){function a(a,b){var c=this,d=b.controller("ngModel"),e=".radio",f="label";c.isChecked=function(){return c.ngValue&&c.ngModel===c.ngValue||c.value===c.ngModel},c.checked=c.isChecked(),c.buttonClick=function(a){c.ngDisabled||(c.checked=!0,d.$setViewValue(c.ngValue||c.value))},c.buttonFocus=function(){b.closest(f).addClass("focus"),b.triggerHandler("focus")},c.buttonBlur=function(){b.closest(f).removeClass("focus"),b.triggerHandler("blur")},c.hiddenInputChange=function(){c.ngChange&&c.ngChange()},b.on("blur",function(a){d.$setTouched()}),a.$watch("$ctrl.ngModel",function(a,b){a!==b&&d.$setDirty(),c.checked=c.isChecked()}),a.$watch("$ctrl.ngDisabled",function(a,c){a&&!c?b.closest(e).addClass("disabled"):!a&&c&&b.closest(e).removeClass("disabled")})}return{restrict:"E",require:"ngModel",controller:["$scope","$element",a],controllerAs:"$ctrl",bindToController:!0,scope:{name:"@",value:"@",ngModel:"=",ngValue:"=",ngRequired:"=",ngDisabled:"=",ngChange:"&"},template:" \t\t\t\t<input type='radio' class='sr-only' \t\t\t\t\tname='{{$ctrl.name}}' \t\t\t\t\tng-value='$ctrl.ngValue || $ctrl.value' \t\t\t\t\tng-model='$ctrl.ngModel' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\tng-change='$ctrl.hiddenInputChange()' \t\t\t\t\ttabindex='-1' /> \t\t\t\t<button type='button' class='tw-radio-button' tw-focusable \t\t\t\t\tng-click='$ctrl.buttonClick($event)' \t\t\t\t\tng-focus='$ctrl.buttonFocus()' \t\t\t\t\tng-blur='$ctrl.buttonBlur()' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\tng-class='{checked: $ctrl.checked}' \t\t\t\t\taria-pressed='{{$ctrl.checked}}'> \t\t\t\t\t<span class='tw-radio-check'></span> \t\t\t\t</button>"}}a.module("tw.form-components").directive("twRadio",b)}(window.angular),function(a){"use strict";function b(){return{restrict:"E",scope:{requirements:"=",model:"=",onRefreshRequirements:"&"},controller:["$scope","$http",c],controllerAs:"$ctrl",bindToController:!0,template:" \t\t\t<ul ng-if='$ctrl.requirements && $ctrl.requirements.length > 1' \t\t\t\tclass='nav nav-tabs m-b-3'> \t\t\t\t<li ng-repeat='requirementType in $ctrl.requirements' \t\t\t\t\tng-class='{\"active\": $ctrl.model.type === requirementType.type}'> \t\t\t\t\t<a href='' ng-click='$ctrl.switchTab(requirementType.type)'> \t\t\t\t\t\t{{$ctrl.getTabName(requirementType.type)}} \t\t\t\t\t</a> \t\t\t\t</li> \t\t\t</ul> \t\t\t<div class='tab-content'> \t\t\t\t<div ng-repeat='requirementType in $ctrl.requirements'\t\t\t\t\tng-if='$ctrl.model.type == requirementType.type' \t\t\t\t\tclass='tab-pane' \t\t\t\t\tid='{{requirementType.type}}' \t\t\t\t\tng-class='{\"active\": $ctrl.model.type == requirementType.type}'> \t\t\t\t\t<div class='row'> \t\t\t\t\t\t<div class='form-group' \t\t\t\t\t\t\tng-repeat='fieldGroup in requirementType.fields' \t\t\t\t\t\t\tng-class='{ \t\t\t\t\t\t\t\t\"col-sm-6\": fieldGroup.maxlength && fieldGroup.maxlength <= 10, \t\t\t\t\t\t\t\t\"col-sm-12\": !fieldGroup.maxlength || fieldGroup.maxlength > 10 \t\t\t\t\t\t\t}'> \t\t\t\t\t\t\t<label class='control-label'> \t\t\t\t\t\t\t\t{{fieldGroup.name}} \t\t\t\t\t\t\t</label> \t\t\t\t\t\t\t<div class='row'> \t\t\t\t\t\t\t\t<div class='col-xs-{{field.columns}}' \t\t\t\t\t\t\t\t\tng-repeat='field in fieldGroup.group'> \t\t\t\t\t\t\t\t\t<tw-dynamic-form-control \t\t\t\t\t\t\t\t\t\tname='{{field.key}}' \t\t\t\t\t\t\t\t\t\ttype='{{field.type | lowercase}}' \t\t\t\t\t\t\t\t\t\tplaceholder='{{field.placeholder}}' \t\t\t\t\t\t\t\t\t\toptions='field.valuesAllowed' \t\t\t\t\t\t\t\t\t\tng-model='$ctrl.model[field.key]' \t\t\t\t\t\t\t\t\t\tng-blur='$ctrl.onBlur(field)' \t\t\t\t\t\t\t\t\t\tng-required='field.required' \t\t\t\t\t\t\t\t\t\tng-disabled='field.disabled' \t\t\t\t\t\t\t\t\t\tng-minlength='field.minLength' \t\t\t\t\t\t\t\t\t\tng-maxlength='field.maxLength' \t\t\t\t\t\t\t\t\t\tng-pattern='field.validationRegexp' \t\t\t\t\t\t\t\t\t\ttw-validation > \t\t\t\t\t\t\t\t\t\t<!-- tw-dynamic-async-validator='field.validationAsync' --> \t\t\t\t\t\t\t\t\t</tw-dynamic-form-control> \t\t\t\t\t\t\t\t\t<div class='error-messages'> \t\t\t\t\t\t\t\t\t\t<div class='error-minlength'>Minimum {{field.minlength}} characters</div> \t\t\t\t\t\t\t\t\t\t<div class='error-maxlength'>Maximum {{field.maxlength}} characters</div> \t\t\t\t\t\t\t\t\t\t<div class='error-required'>{{fieldGroup.name}} is required</div> \t\t\t\t\t\t\t\t\t\t<div class='error-pattern'>Incorrect format</div> \t\t\t\t\t\t\t\t\t</div> \t\t\t\t\t\t\t\t\t<div ng-if='field.tooltip' \t\t\t\t\t\t\t\t\t\tclass='help-block'> \t\t\t\t\t\t\t\t\t\t<a role='button' \t\t\t\t\t\t\t\t\t\t\ttabindex='0' \t\t\t\t\t\t\t\t\t\t\tdata-toggle='popover' \t\t\t\t\t\t\t\t\t\t\tdata-placement='top' \t\t\t\t\t\t\t\t\t\t\ttitle='{{field.tooltip}}'> \t\t\t\t\t\t\t\t\t\t\t<span class='glyphicon glyphicon-question-sign'></span> \t\t\t\t\t\t\t\t\t\t</a> \t\t\t\t\t\t\t\t\t</div> \t\t\t\t\t\t\t\t</div> \t\t\t\t\t\t\t</div> \t\t\t\t\t\t</div> \t\t\t\t\t</div> \t\t\t\t</div> \t\t\t</div>"}}function c(b,c){function d(){o.model||(o.model={}),b.$watch("$ctrl.requirements",function(b,c){a.equals(b,c)||(e(o.requirements),o.model.type=o.requirements.length?o.requirements[0].type:null)})}function e(a){a.forEach(function(a){a.fields.forEach(function(a){a.group.forEach(function(a){f(a),g(a),h(a)})})})}function f(a){if(a.validationRegexp)try{a.validationRegexp=new RegExp(ield.validationRegexp)}catch(b){console.log("API regexp is invalid"),a.validationRegexp=!1}else a.validationRegexp=!1}function g(a){if(a.valuesAsync){var b={};a.valuesAsync.params&&a.valuesAsync.params.length&&(b=n(o.model,a.valuesAsync.params)),c.post(a.valuesAsync.url,b).then(function(b){a.valuesAllowed=b.data,h(a)})["catch"](function(){})}}function h(b){a.isArray(b.valuesAllowed)&&b.valuesAllowed.forEach(function(a){a.value=a.key,a.label=a.name})}function i(a){var b=l(o.model.type),c=l(a);o.model.type=a,k(b,c)}function j(a){if(a&&a.length>0){var b=a.toLowerCase().split("_").join(" ");return b.charAt(0).toUpperCase()+b.slice(1)}return""}function k(a,b){var c=m(a),d=m(b),e=c.filter(function(a){return d.indexOf(a)<0});e.forEach(function(a){delete o.model[a]})}function l(a){for(var b=0;b<o.requirements.length;b++){var c=o.requirements[b];if(c.type===a)return c}}function m(a){var b=a.fields.map(function(a){return a.group.map(function(a){return a.key})});return Array.prototype.concat.apply([],b)}function n(a,b){var c={};return b.forEach(function(b){a[b.key]?c[b.parameterName]=a[b.key]:b.required}),c}var o=this;o.switchTab=i,o.getTabName=j,o.onBlur=function(a){!a.refreshRequirementsOnChange},d()}a.module("tw.form-components").directive("twRequirementsForm",b)}(window.angular),function(a){"use strict";function b(){return{require:"ngModel",bindToController:!0,controller:["$element","$scope","$transclude","$timeout",c],controllerAs:"$ctrl",replace:!1,transclude:!0,restrict:"EA",scope:{ngModel:"=",ngRequired:"=",ngDisabled:"=",options:"=",name:"@",placeholder:"@",filter:"@",size:"@",dropdownRight:"@",dropdownWidth:"@",inverse:"=",hideNote:"=",hideSecondary:"=",hideIcon:"=",hideCurrency:"=",hideCircle:"="},template:" \t\t\t\t<div class='btn-group btn-block dropdown tw-select' aria-hidden='false'> \t\t\t\t\t<button type='button' class='btn btn-input dropdown-toggle' \t\t\t\t\t\tng-class='{ \t\t\t\t\t\t\t\"btn-input-inverse\": $ctrl.inverse, \t\t\t\t\t\t\t\"btn-addon\": $ctrl.inverse, \t\t\t\t\t\t\t\"btn-sm\": $ctrl.size === \"sm\", \t\t\t\t\t\t\t\"btn-lg\": $ctrl.size === \"lg\" \t\t\t\t\t\t}' \t\t\t\t\t\tdata-toggle='dropdown' aria-expanded='false' \t\t\t\t\t\tng-disabled='$ctrl.ngDisabled' \t\t\t\t\t\tng-focus='$ctrl.buttonFocus()' \t\t\t\t\t\ttw-focusable> \t\t\t\t\t\t<span class='tw-select-selected' ng-if='$ctrl.selected'> \t\t\t\t\t\t\t<span class='circle circle-inverse pull-xs-left circle-sm' ng-if='$ctrl.selected && $ctrl.selected.icon && $ctrl.selected.secondary'>\t\t\t\t\t\t\t\t <i class='icon {{$ctrl.selected.icon}}'></i> \t\t\t\t\t\t\t</span> \t\t\t\t\t\t\t<span class='circle circle-inverse pull-xs-left'  \t\t\t\t\t\t\t\tng-class='{\"circle-sm\": $ctrl.selected.secondary && !$ctrl.hideSecondary, \"circle-xs\": !$ctrl.selected.secondary || $ctrl.hideSecondary}' \t\t\t\t\t\t\t\tng-if='($ctrl.selected.circleText || $ctrl.selected.circleImage || $ctrl.selected.circleIcon) && !$ctrl.hideCircle'> \t\t\t\t\t\t\t\t<span ng-if='$ctrl.selected.circleText'>{{$ctrl.selected.circleText}}</span> \t\t\t\t\t\t\t\t<img ng-if='$ctrl.selected.circleImage' ng-src='{{$ctrl.selected.circleImage}}' /> \t\t\t\t\t\t\t\t<i ng-if='$ctrl.selected.circleIcon' class='icon {{$ctrl.selected.circleIcon}}'></i> \t\t\t\t\t\t\t</span><span class='text-ellipsis'><i class='currency-flag currency-flag-{{$ctrl.selected.currency | lowercase}}' \t\t\t\t\t\t\t\tng-if='$ctrl.selected && $ctrl.selected.currency && !$ctrl.hideCurrency' \t\t\t\t\t\t\t\t></i><i class='icon {{$ctrl.selected.icon}}' \t\t\t\t\t\t\t\tng-if='$ctrl.selected && $ctrl.selected.icon && !$ctrl.selected.secondary &&  !$ctrl.hideIcon' \t\t\t\t\t\t\t\t></i><span class='tw-select-label'>{{$ctrl.selected.label}}</span><span \t\t\t\t\t\t\tng-if='$ctrl.selected.note && !$ctrl.hideNote' class='tw-select-note small m-l-1'>{{$ctrl.selected.note}}</span><span \t\t\t\t\t\t\tng-if='$ctrl.selected.secondary && !$ctrl.hideSecondary' class='tw-select-secondary small secondary text-ellipsis'>{{$ctrl.selected.secondary}}</span></span> \t\t\t\t\t\t</span> \t\t\t\t\t\t<span class='form-control-placeholder' ng-if='!$ctrl.selected'>{{$ctrl.placeholder}}</span> \t\t\t\t\t\t<span class='caret'></span> \t\t\t\t\t</button> \t\t\t\t\t<ul class='dropdown-menu' role='menu' ng-class='{ \t\t\t\t\t\t\t\"dropdown-menu-xs-right\": $ctrl.dropdownRight === \"xs\", \t\t\t\t\t\t\t\"dropdown-menu-sm-right\": $ctrl.dropdownRight === \"sm\", \t\t\t\t\t\t\t\"dropdown-menu-md-right\": $ctrl.dropdownRight === \"md\", \t\t\t\t\t\t\t\"dropdown-menu-lg-right\": $ctrl.dropdownRight === \"lg\", \t\t\t\t\t\t\t\"dropdown-menu-xl-right\": $ctrl.dropdownRight === \"xl\", \t\t\t\t\t\t\t\"dropdown-menu-sm\": $ctrl.dropdownWidth === \"sm\", \t\t\t\t\t\t\t\"dropdown-menu-md\": $ctrl.dropdownWidth === \"md\", \t\t\t\t\t\t\t\"dropdown-menu-lg\": $ctrl.dropdownWidth === \"lg\" \t\t\t\t\t\t}'> \t\t\t\t\t\t<li ng-if='$ctrl.filter'> \t\t\t\t\t\t\t<a href='' class='tw-select-filter-link p-a-0' tabindex='-1' \t\t\t\t\t\t\t\tng-focus='$ctrl.filterFocus()'> \t\t\t\t\t\t\t\t<div class='input-group'> \t\t\t\t\t\t\t\t\t<span class='input-group-addon'><i class='icon icon-search'></i></span> \t\t\t\t\t\t\t\t\t<input type='text' class='form-control tw-select-filter' placeholder='{{$ctrl.filter}}' \t\t\t\t\t\t\t\t\t\tng-model='$ctrl.filterString' \t\t\t\t\t\t\t\t\t\tng-change='$ctrl.filterChange()' \t\t\t\t\t\t\t\t\t\tng-keydown='$ctrl.filterKeydown($event)' /> \t\t\t\t\t\t\t\t</div> \t\t\t\t\t\t\t</a> \t\t\t\t\t\t</li> \t\t\t\t\t\t<li ng-class='{active: !$ctrl.selected}' \t\t\t\t\t\t\tng-if='$ctrl.placeholder && !$ctrl.ngRequired && !$ctrl.filter'> \t\t\t\t\t\t\t<a href='' tabindex='-1' \t\t\t\t\t\t\t\tng-click='$ctrl.placeholderClick()' \t\t\t\t\t\t\t\tng-focus='$ctrl.placeholderFocus()' \t\t\t\t\t\t\t\tclass='tw-select-placeholder' tw-focusable> \t\t\t\t\t\t\t\t{{$ctrl.placeholder}} \t\t\t\t\t\t\t</a> \t\t\t\t\t\t</li> \t\t\t\t\t\t<li ng-if='($ctrl.placeholder && !$ctrl.ngRequired) || $ctrl.filter' class='divider'></li> \t\t\t\t\t\t<li \t\t\t\t\t\t\tng-repeat='option in $ctrl.filteredOptions' \t\t\t\t\t\t\tng-class='{ \t\t\t\t\t\t\t\tactive: $ctrl.ngModel === option.value, \t\t\t\t\t\t\t\tdisabled: option.disabled, \t\t\t\t\t\t\t\t\"dropdown-header\": option.header, \t\t\t\t\t\t\t\t\"tw-select-option\": !option.header && !option.disabled \t\t\t\t\t\t\t}'> \t\t\t\t\t\t\t<span ng-if='option.header'>{{option.header}}</span> \t\t\t\t\t\t\t<a href='' \t\t\t\t\t\t\t\tng-if='!option.header' \t\t\t\t\t\t\t\tng-click='$ctrl.optionClick(option, $event)' \t\t\t\t\t\t\t\tng-focus='$ctrl.optionFocus(option)' \t\t\t\t\t\t\t\tng-class='{\"tw-select-option-link\": !option.disabled}' \t\t\t\t\t\t\t\tindex='{{$index}}' \t\t\t\t\t\t\t\ttabindex='-1' \t\t\t\t\t\t\t\ttw-focusable > \t\t\t\t\t\t\t\t<div class='circle circle-inverse pull-xs-left circle-sm' ng-if='option.icon && option.secondary'>\t\t\t\t\t\t\t\t\t<i class='icon {{option.icon}}'></i>\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t<i class='icon {{option.icon}} pull-xs-left' ng-if='option.icon && !option.secondary'></i> \t\t\t\t\t\t\t\t<i class='currency-flag currency-flag-{{option.currency | lowercase}} pull-xs-left' ng-if='option.currency'> \t\t\t\t\t\t\t\t</i><span class='circle circle-inverse pull-xs-left' ng-class='{\"circle-sm\": option.secondary, \"circle-xs\": !option.secondary}' \t\t\t\t\t\t\t\t\tng-if='option.circleText || option.circleImage || option.circleIcon'> \t\t\t\t\t\t\t\t\t<span class='tw-select-circle-text' ng-if='option.circleText'>{{option.circleText}}</span> \t\t\t\t\t\t\t\t\t<img ng-if='option.circleImage' ng-src='{{option.circleImage}}' /> \t\t\t\t\t\t\t\t\t<i ng-if='option.circleIcon' class='icon {{option.circleIcon}}'></i> \t\t\t\t\t\t\t\t</span>{{option.label}}<span \t\t\t\t\t\t\t\tng-if='option.note' class='tw-select-note small m-l-1'>{{option.note}}</span><span \t\t\t\t\t\t\t\tng-if='option.secondary' class='tw-select-secondary small text-ellipsis'>{{option.secondary}}</span> \t\t\t\t\t\t\t</a> \t\t\t\t\t\t</li> \t\t\t\t\t\t<li ng-if='$ctrl.hasTranscluded' class='divider'></li> \t\t\t\t\t\t<li ng-transclude ng-if='$ctrl.hasTranscluded' class='tw-select-transcluded'></li> \t\t\t\t\t</ul> \t\t\t\t</div> \t\t\t\t<input type='hidden' class='tw-select-hidden' \t\t\t\t\tname='{{$ctrl.name}}' \t\t\t\t\tvalue='{{$ctrl.ngModel}}' \t\t\t\t\tng-disabled='$ctrl.ngDisabled' />"
}}function c(b,c,j,k){function p(){b.triggerHandler("focus")}function q(a,c){return a.disabled?void c.stopPropagation():(m(G,F,a),void b.find(".btn").focus())}function r(a){m(G,F,a)}function s(a){if(!$(a.target).hasClass("tw-select-filter")){var c=g(a);if(8===c)return a.preventDefault(),!1;var d=h(a);o(G,F,F.options,d),b.find(".active a").focus()}}function t(a){n(G,F),b.find(".btn").focus()}function u(){n(G,F)}function v(){return F.options.filter(w)}function w(a){var b=F.filterString&&x(F.filterString.toLowerCase());return!b||(a.label&&a.label.toLowerCase().search(b)>=0||a.note&&a.note.toLowerCase().search(b)>=0||a.secondary&&a.secondary.toLowerCase().search(b)>=0||a.searchable&&a.searchable.toLowerCase().search(b)>=0)}function x(a){return a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function y(){b.find(".tw-select-filter").focus()}function z(){F.filteredOptions=F.getFilteredOptions();var a=A(F.filteredOptions,F.selected);!a&&F.filteredOptions.length&&m(G,F,F.filteredOptions[0])}function A(b,c){var d;return b.forEach(function(b){c&&a.equals(c.value,b.value)&&(d=c)}),d}function B(a){var c=a.which||a.charCode||a.keyCode,d=b.find(".active"),e=d.find("a"),f=b.find(".tw-select-option-link");return 40===c?(E(d,e,f),a.preventDefault()):38===c?(D(d,e,f),a.preventDefault()):13===c&&(d.click(),b.find(".btn").focus(),a.preventDefault()),!0}function C(a){var b=F.filteredOptions[a.attr("index")];m(G,F,b)}function D(a,b,c){if(!a.length&&c.length)return void C($(c[c.length-1]));if(b[0]!==c[0]){var d=a.prevAll(".tw-select-option");return void C($(d[0]).find("a"))}}function E(a,b,c){if(!a.length&&c.length)return void C($(c[0]));if(b[0]!==c[c.length-1]){var d=a.nextAll(".tw-select-option");return void C($(d[0]).find("a"))}var e=$(".tw-select-transcluded");return e.length?void e.find("a").focus():void 0}var F=this,G=b.controller("ngModel");F.search="",i(G,F,F.options),l(G,F,b,F),d(F,c,G,b),e(F,b,G,F.options,k),f(j,F),F.buttonFocus=p,F.optionClick=q,F.optionFocus=r,F.optionKeypress=s,F.placeholderFocus=u,F.placeholderClick=t,F.filterFocus=y,F.filterChange=z,F.filterKeydown=B,F.isOptionFiltered=w,F.getFilteredOptions=v,F.filterString="",F.filteredOptions=F.getFilteredOptions()}function d(a,b,c,d){b.$watch("$ctrl.ngModel",function(b,d){(b||d)&&b!==d&&c.$setDirty(),j(b,d,a)}),b.$watch("$ctrl.options",function(b,e){b!==e&&(i(c,a,a.options),l(c,a,d,a),a.filteredOptions=a.getFilteredOptions())})}function e(a,b,c,d,e){b.find(".btn, .dropdown-menu").on("focusout",function(){e(function(){0!==b.find(".btn:focus").length||b.find(".btn-group").hasClass("open")||b.trigger("blur")},150)}),b.on("blur",function(a){c.$setTouched()}),b.find(".btn").on("keypress",function(b){a.optionKeypress(b)}),b.find(".btn").on("click",function(){e(function(){b.attr("filter")?b.find(".tw-select-filter").focus():b.find(".active a").focus()})}),b.find("ul").on("keypress","a",function(b){a.optionKeypress(b)})}function f(a,b){a(function(a){(a.length>1||""!==a.text().trim())&&(b.hasTranscluded=!0)})}function g(a){return a.which||a.charCode||a.keyCode}function h(a){return String.fromCharCode(g(a))}function i(a,b,c){if(q(b.ngModel)){var d=k(b.options,b.ngModel);m(a,b,d)}}function j(a,b,c){if(a!==b){var d=k(c.options,a);d?c.selected=d:c.selected=null}}function k(b,c){var d=!1;return b.forEach(function(b){a.equals(b.value,c)&&(d=b)}),d}function l(a,b,c,d){if((b.ngRequired||d.required)&&!q(b.ngModel))for(var e=0;e<b.options.length;e++)if(q(b.options[e].value)){m(a,b,b.options[e]);break}}function m(a,b,c){c.disabled||(a.$setViewValue(c.value),a.$commitViewValue(),b.selected=c)}function n(a,b){a.$setViewValue(null),a.$commitViewValue(),b.selected=!1}function o(a,b,c,d){var e=p(a,b,c,b.search+d);return e?b.search+=d:(b.search=d,e=p(a,b,c,b.search)),e}function p(a,b,c,d){var e=!1,f=d.toLowerCase();return c.forEach(function(c){!e&&c.label&&(0===c.label.toLowerCase().indexOf(f)||c.note&&0===c.note.toLowerCase().indexOf(f)||c.secondary&&0===c.secondary.toLowerCase().indexOf(f)||c.searchable&&0===c.searchable.toLowerCase().indexOf(f))&&(m(a,b,c),e=!0)}),e}function q(a){return a||0===a||a===!1}a.module("tw.form-components").directive("twSelect",b)}(window.angular),function(a){"use strict";function b(){return{bindToController:!0,controller:[c],controllerAs:"$ctrl",replace:!1,transclude:!0,restrict:"E",scope:{title:"@",cta:"@",onUpload:"=",accept:"="},link:d,template:'<div class="text-center tw-upload-droppable-box" ng-class="{\'active\': $ctrl.isActive}"> \t\t\t\t<i class="icon icon-upload tw-upload-droppable-icon"></i>\t\t\t\t<h4 class="m-t-2" ng-if="$ctrl.title">{{$ctrl.title}}</h4>\t\t\t\t<div class="row">\t\t\t\t\t<div class="col-xs-12 col-sm-6 col-sm-offset-3 m-t-1">\t\t\t\t\t<ng-transclude></ng-transclude>\t\t\t\t\t<label class="link" for="file-upload">{{$ctrl.cta}}</label>\t\t\t\t\t<input tw-file-select id="file-upload" type="file" accept={{$ctrl.accept}} class="hidden" on-user-input="$ctrl.onManualUpload"/>\t\t\t\t\t</div>\t\t\t\t</div>\t\t\t</div>'}}function c(){var b=this;b.dragCounter=0,b.isActive=!1,b.onManualUpload=function(){b.onUpload&&"function"==typeof b.onUpload&&b.onUpload(a.element(document.querySelector("#file-upload"))[0].files[0])},b.onDrop=function(a){b.onUpload&&"function"==typeof b.onUpload&&b.onUpload(a),b.isActive=!1,b.dropCounter=0},b.onDragChange=function(a){a?(b.dragCounter++,1===b.dragCounter&&(b.isActive=!0)):(b.dragCounter--,0===b.dragCounter&&(b.isActive=!1))}}function d(a,b,c){b[0].addEventListener("dragenter",function(b){b.preventDefault(),a.$ctrl.onDragChange(!0),a.$apply()},!1),b[0].addEventListener("dragover",function(a){a.preventDefault()},!1),b[0].addEventListener("dragleave",function(b){b.preventDefault(),a.$ctrl.onDragChange(!1),a.$apply()},!1),b[0].addEventListener("drop",function(b){b.preventDefault(),a.$ctrl.onDrop(b.dataTransfer.files[0]),a.$apply()},!1)}function e(){return{bindToController:!0,controller:function(){},controllerAs:"$ctrl",replace:!1,restrict:"A",scope:{onUserInput:"="},link:f}}function f(a,b){b.on("change",function(){a.$ctrl.onUserInput&&"function"==typeof a.$ctrl.onUserInput&&a.$ctrl.onUserInput()})}a.module("tw.form-components").directive("twFileSelect",e).controller("TwUploadDroppableController",c).directive("twUploadDroppable",b)}(window.angular),function(a){"use strict";function b(){var a={BIF:0,BYR:0,CLP:0,DJF:0,GNF:0,JPY:0,KMF:0,KRW:0,MGA:0,PYG:0,RWF:0,VND:0,VUV:0,XAF:0,XOF:0,XPF:0,BHD:3,JOD:3,KWD:3,OMR:3,TND:3};this.getDecimals=function(b){return b.toUpperCase&&"undefined"!=typeof a[b.toUpperCase()]?a[b.toUpperCase()]:2}}a.module("tw.form-components").service("TwCurrencyData",b)}(window.angular);