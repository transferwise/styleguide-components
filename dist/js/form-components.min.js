angular.module("tw.form-components", []);
!function(a){"use strict";function b(a,b,c){function d(){if(B.ngModel)g(),C=!0;else{if(B.modelType){if(B.modelType!==F&&B.modelType!==G)throw new Error("Invalid modelType, should be "+F+" or "+G);B.dateModelType=B.modelType}else B.dateModelType=G;B.day=null,B.month="0",B.year=null}A=a.controller("ngModel"),A.$validators.min=function(a){var b=e(B.ngMin,B.min),c=f(a);return!b||!c||c>=b},A.$validators.max=function(a){var b=e(B.ngMax,B.max),c=f(a);return!b||!c||b>=c},i(),j(),k(),h(),p()}function e(a,b){var c=a?a:b?b:!1;return c?(c="string"==typeof c?new Date(c):c,n(c)?c:!1):!1}function f(a){return"string"==typeof a?new Date(a):a}function g(){if(!m(B.ngModel))throw new Error("date model passed should either be instance of Date or valid ISO8601 string");B.dateModelType="string"==typeof B.ngModel?F:G,B.explodeDateModel(B.ngModel)}function h(){B.dateMonths=q()}function i(){B.dateRequired=void 0!==B.ngRequired?B.ngRequired:void 0!==B.required}function j(){B.dateDisabled=void 0!==B.ngDisabled?B.ngDisabled:void 0!==B.disabled}function k(){B.locale||(B.locale=D)}function l(a){var b="string"==typeof a?new Date(a):a;B.day=b.getDate(),B.month=b.getMonth(),B.year=b.getFullYear()}function m(a){return n(a)||o(a)}function n(a){return"[object Date]"===Object.prototype.toString.call(a)&&!isNaN(a.getTime())}function o(a){return"string"==typeof a&&n(new Date(a))}function p(){c.$watch("vm.day",function(a,b){a!==b&&C&&A.$setDirty()}),c.$watch("vm.month",function(a,b){a!==b&&(B.adjustLastDay(),A.$setTouched(),C&&A.$setDirty())}),c.$watch("vm.year",function(a,b){a!==b&&C&&A.$setDirty()}),c.$watch("vm.ngModel",function(a,b){a!==b&&m(B.ngModel)&&(A.$setDirty(),B.explodeDateModel(B.ngModel))}),c.$watch("vm.ngRequired",function(a,b){a!==b&&i()}),c.$watch("vm.ngDisabled",function(a,b){a!==b&&j()}),c.$watch("vm.locale",function(a,b){a!==b&&(k(),h())})}function q(){var a;return r(B.locale)?a=s():(b.warn('i18n not supported for locale "'+B.locale+'"'),a=E),t(a)}function r(a){return window.Intl&&"object"==typeof window.Intl&&window.Intl.DateTimeFormat.supportedLocalesOf([a]).length>0}function s(){for(var a,b=[],c=0;12>c;c++){a=new Date(Date.UTC(2e3,c,15));var d=a.toLocaleDateString(B.locale,{month:"long"});d=d[0].toUpperCase()+d.substring(1),b.push(d)}return b}function t(a){return a.map(function(a,b){return{value:b,label:a}})}function u(){return v(B.year)&&v(B.day)&&(v(B.month)||w(B.month))}function v(a){return"number"==typeof a}function w(a){return"string"==typeof a&&!isNaN(Number(B.month))}function x(){var a=new Date(Date.UTC(Number(B.year),Number(B.month),Number(B.day)));return a.setFullYear(B.year),a}function y(){if(B.adjustLastDay(),!u())return void A.$setViewValue(null);var a=x();if(B.dateModelType===F){var b=a.toISOString(),c=b.substring(0,b.indexOf("T"));A.$setViewValue(c)}else A.$setViewValue(a)}function z(){var a=Number(B.day),b=Number(B.month),c=Number(B.year),d=new Date(Date.UTC(c,b+1,0)),e=d.getUTCDate();a>e&&(B.day=parseInt(e))}var A,B=this,C=!1;B.updateDateModelAndValidationClasses=y,B.explodeDateModel=l,B.combineDate=x,B.adjustLastDay=z,B.validDate=m;var D="en",E=["January","February","March","April","May","June","July","August","September","October","November","December"],F="string",G="object";d()}a.module("tw.form-components").controller("TwDateController",b),b.$inject=["$element","$log","$scope"]}(window.angular),function(a){function b(){function a(a,c){var d=this,e=c.controller("ngModel");c.find(".tw-checkbox-button");labelSelector=".checkbox",d.isChecked=function(){return d.ngTrueValue&&d.ngTrueValue===d.ngModel||!d.ngTrueValue&&d.ngModel||!1},d.checked=d.isChecked(),d.buttonClick=function(a){d.checked?(d.checked=!1,e.$setViewValue(d.ngFalseValue||!1)):(d.checked=!0,e.$setViewValue(d.ngTrueValue||!0)),e.$setTouched(),a&&a.stopPropagation(),b(d.checked,c,e,d)},d.buttonFocus=function(){c.closest(".checkbox").find("label").addClass("focus"),c.triggerHandler("focus")},d.buttonBlur=function(){c.closest(".checkbox").find("label").removeClass("focus"),c.triggerHandler("blur"),e.$setTouched(),b(d.checked,c,e,d)},d.hiddenClick=function(a){a.stopPropagation()},c.closest("label").on("click",function(a){c.find("button").trigger("click"),a.preventDefault(),a.stopPropagation()}),a.$watch("$ctrl.ngModel",function(a,f){a!==f&&(e.$setDirty(),b(d.checked,c,e,d),d.checked=d.isChecked())}),a.$watch("$ctrl.ngDisabled",function(a,b){a&&!b?c.closest(".checkbox").addClass("disabled").addClass("disabled",!0):!a&&b&&c.closest(".checkbox").removeClass("disabled").removeClass("disabled")}),a.$watch("$ctrl.ngRequired",function(a,f){a!==f&&a&&b(d.checked,c,e,d)})}function b(a,b,c,d){c.$touched&&(!a&&d.ngRequired?(c.$setValidity("required",!1),b.find(".tw-checkbox-button").addClass("has-error"),b.closest(".checkbox").addClass("has-error"),b.closest(".form-group").addClass("has-error")):(c.$setValidity("required",!0),b.find(".tw-checkbox-button").removeClass("has-error"),b.closest(".checkbox").removeClass("has-error"),b.closest(".form-group").removeClass("has-error")))}return{restrict:"EA",require:"ngModel",controller:["$scope","$element",a],controllerAs:"$ctrl",bindToController:!0,scope:{name:"@",ngModel:"=",ngTrueValue:"=",ngFalseValue:"=",ngRequired:"=",ngDisabled:"="},template:" 				<input type='hidden' class='sr-only' 					name='{{$ctrl.name}}' 					ng-model='$ctrl.ngModel' 					ng-click='$ctrl.hiddenClick($event)' 					ng-disabled='$ctrl.ngDisabled'/> 				<button class='tw-checkbox-button' tw-focusable 					ng-click='$ctrl.buttonClick($event)' 					ng-focus='$ctrl.buttonFocus()' 					ng-blur='$ctrl.buttonBlur()' 					ng-disabled='$ctrl.ngDisabled' 					ng-class='{\"checked\": $ctrl.checked}' 					aria-pressed='{{$ctrl.checked}}'> 					<span class='tw-checkbox-check glyphicon glyphicon-ok'></span> 				</button>"}}a.module("tw.form-components").directive("twCheckbox",b)}(window.angular),function(a){"use strict";function b(){var a={require:"ngModel",bindToController:!0,controller:"TwDateController",controllerAs:"vm",replace:!1,restrict:"E",scope:{ngModel:"=",required:"@",ngRequired:"=",disabled:"@",ngDisabled:"=",locale:"@",twLocale:"=",min:"@",ngMin:"=",max:"@",ngMax:"=",modelType:"@"},template:d,link:c};return a}function c(a,b,c,d){var e,f;b.find("input[name=day]").on("blur",function(){e=!0,e&&f&&(d.$setTouched(),b.triggerHandler("blur"))}),b.find("input[name=year]").on("blur",function(){f=!0,d.$setTouched(),b.triggerHandler("blur")})}a.module("tw.form-components").directive("twDate",b);var d=" 			<div class='row'> 				<div class='col-sm-3'> 					<label class='sr-only' for='day-{{::uniqueId}}'>Day</label> 					<input type='number' 						name='day' 						id='day-{{::uniqueId}}' 						class='form-control tw-date-day' 						ng-model='vm.day' 						ng-change='vm.updateDateModelAndValidationClasses()' 						placeholder='DD' 						min='1' 						ng-min='1' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						tw-focusable /> 				</div> 				<div class='col-sm-5'> 					<label class='sr-only' for='month-{{::uniqueId}}'>Month</label> 					<tw-select 						name='month' 						class='tw-date-month' 						id='month-{{::uniqueId}}' 						ng-model='vm.month' 						ng-change='vm.updateDateModelAndValidationClasses()' 						ng-required='vm.dateRequired' 						ng-disabled='vm.dateDisabled' 						options='vm.dateMonths'> 					</tw-select> 				</div> 				<div class='col-sm-4'> 					<label class='sr-only' for='year-{{::uniqueId}}'>Year</label> 					<input type='number' 						id='year-{{::uniqueId}}' 						name='year' 						class='form-control tw-date-year' 						placeholder='YYYY' 						ng-model='vm.year' 						ng-change='vm.updateDateModelAndValidationClasses()' 						ng-min='vm.dateRange.min.getFullYear()' 						ng-max='vm.dateRange.max.getFullYear()' 						maxlength='4' 						ng-maxlength='4' 						ng-disabled='vm.dateDisabled' 						ng-required='vm.dateRequired' 						tw-focusable /> 				</div> 			</div>"}(window.angular),function(a){function b(){return{restrict:"E",require:"ngModel",transclude:!0,controllerAs:"$ctrl",bindToController:!0,controller:"TwDynamicFormControlController",link:d,scope:{type:"@",name:"@",id:"@",placeholder:"@",step:"@",options:"=",ngModel:"=",ngRequired:"=",ngDisabled:"=",ngMinlength:"=",ngMaxlength:"=",ngMin:"=",ngMax:"=",ngPattern:"="},template:"<div ng-switch='$ctrl.type'> 				<input ng-switch-when='text'  					name='{{$ctrl.name}}'  					type='text' 					class='form-control' 					placeholder='{{$ctrl.placeholder}}' 					ng-model='$ctrl.ngModel' 					ng-model-options='{ allowInvalid: true }' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-pattern='$ctrl.ngPattern' 					ng-change='$ctrl.change()' 					ng-focus='$ctrl.focus()' 					ng-blur='$ctrl.blur()' 					ng-minlength='$ctrl.ngMinlength' 					ng-maxlength='$ctrl.ngMaxlength' />  				<input ng-switch-when='number'  					name='{{$ctrl.name}}'  					type='number' 					step='{{$ctrl.step}}' 					class='form-control' 					placeholder='{{$ctrl.placeholder}}' 					ng-model='$ctrl.ngModel' 					ng-model-options='{ allowInvalid: true }' 					ng-required='$ctrl.ngRequired' 					ng-disabled='$ctrl.ngDisabled' 					ng-change='$ctrl.change()' 					ng-focus='$ctrl.focus()' 					ng-blur='$ctrl.blur()' 					ng-min='$ctrl.ngMin' 					ng-max='$ctrl.ngMax' />  				<div ng-switch-when='radio' 					class='radio' 					ng-class='{disabled: $ctrl.ngDisabled}' 					ng-repeat='option in $ctrl.options'> 					<label> 						<tw-radio 							name='{{$ctrl.name}}' 							ng-value='option.value' 							ng-model='$ctrl.ngModel' 							ng-required='$ctrl.ngRequired' 							ng-disabled='$ctrl.ngDisabled' 							ng-change='$ctrl.change()' 							ng-click='$ctrl.change()' 							ng-focus='$ctrl.focus()' 							ng-blur='$ctrl.blur()' /> 						{{option.label}} 					</label> 				</div> 				<div ng-switch-when='checkbox' 					class='checkbox' 					ng-class='{disabled: $ctrl.ngDisabled}'> 					<label> 						<tw-checkbox 							name='{{$ctrl.name}}' 							ng-model='$ctrl.ngModel' 							ng-required='$ctrl.ngRequired' 							ng-disabled='$ctrl.ngDisabled' 							ng-change='$ctrl.change()' 							ng-click='$ctrl.change()' 							ng-focus='$ctrl.focus()' 							ng-blur='$ctrl.blur()' /> 						{{$ctrl.placeholder}} 					</label> 				</div> 				<div ng-switch-when='select'> 					<tw-select 						name='{{$ctrl.name}}' 						options='$ctrl.options' 						placeholder='{{$ctrl.placeholder}}' 						ng-model='$ctrl.ngModel' 						ng-required='$ctrl.ngRequired' 						ng-disabled='$ctrl.ngDisabled' 						ng-change='$ctrl.change()' 						ng-focus='$ctrl.focus()' 						ng-blur='$ctrl.blur()' /> 				</div> 				<ng-transclude class='error-messages'></ng-transclude> 			</div>"}}function c(a,b){var c=this,d=a.controller("ngModel");c.change=function(){d.$setDirty(),c.ngChange&&c.ngChange()},c.focus=function(){a.triggerHandler("focus")},c.blur=function(){d.$setTouched(),a.triggerHandler("blur")}}function d(a,b,c,d){d.$validators.min=function(b,c){return"undefined"==typeof a.$ctrl.ngMin?!0:!("number"==typeof c&&"number"==typeof a.$ctrl.ngMin&&c<a.$ctrl.ngMin)},d.$validators.max=function(b,c){return"undefined"==typeof a.$ctrl.ngMax?!0:!("number"==typeof c&&"number"==typeof a.$ctrl.ngMax&&c>a.$ctrl.ngMax)}}a.module("tw.form-components").directive("twDynamicFormControl",b),a.module("tw.form-components").controller("TwDynamicFormControlController",c),c.$inject=["$element","$scope"]}(window.angular),function(a){function b(){return{restrict:"E",template:"<div class='loader'> 			  <div class='loader-spinner'></div> 			  <div class='loader-flag'> 			    <svg xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='-2 -2 56 56'> 			      <polygon class='loader-flag-stroke'  stroke='#00B9FF' stroke-width='2' stroke-linejoin='miter' stroke-linecap='round' stroke-miterlimit='10' stroke-dasharray='300' stroke-dashoffset='300' fill='none' points='24.6,27.3 0,27.3 14.3,13.7 6.1,0 48.2,0 26.3,52 19.5,52 39.2,5.5 16.8,5.5 21.6,13.6 13.4,21.8 27,21.8' /> 			    </svg> 			    <svg class='loader-flag-fill' xmlns='http://www.w3.org/2000/svg' width='52' height='52' viewBox='0 2 52 48'> 			      <polygon fill='#00B9FF' points='6.1,0 14.3,13.7 0,27.3 24.6,27.3 27,21.8 13.4,21.8 21.6,13.6 16.8,5.5 39.2,5.5 19.5,52 26.3,52 48.2,0 '/> 			    </svg> 			  </div> 			</div>"}}a.module("tw.form-components").directive("twLoader",b)}(window.angular),function(a){function b(){function a(a,b){var c=this,d=b.controller("ngModel"),e=".radio",f="label";c.isChecked=function(){return c.ngValue&&c.ngModel===c.ngValue||c.value===c.ngModel},c.checked=c.isChecked(),c.buttonClick=function(a){c.ngDisabled||(c.checked=!0,d.$setViewValue(c.ngValue||c.value))},c.buttonFocus=function(){b.closest(f).addClass("focus"),b.triggerHandler("focus")},c.buttonBlur=function(){b.closest(f).removeClass("focus"),b.triggerHandler("blur")},c.hiddenInputChange=function(){c.ngChange&&c.ngChange()},b.on("blur",function(a){d.$setTouched()}),a.$watch("$ctrl.ngModel",function(a,b){a!==b&&d.$setDirty(),c.checked=c.isChecked()}),a.$watch("$ctrl.ngDisabled",function(a,c){a&&!c?b.closest(e).addClass("disabled"):!a&&c&&b.closest(e).removeClass("disabled")})}return{restrict:"E",require:"ngModel",controller:["$scope","$element",a],controllerAs:"$ctrl",bindToController:!0,scope:{name:"@",value:"@",ngModel:"=",ngValue:"=",ngRequired:"=",ngDisabled:"=",ngChange:"&"},template:" 				<input type='radio' class='sr-only' 					name='{{$ctrl.name}}' 					ng-value='$ctrl.ngValue || $ctrl.value' 					ng-model='$ctrl.ngModel' 					ng-disabled='$ctrl.ngDisabled' 					ng-change='$ctrl.hiddenInputChange()' 					tabindex='-1' /> 				<button type='button' class='tw-radio-button' tw-focusable 					ng-click='$ctrl.buttonClick($event)' 					ng-focus='$ctrl.buttonFocus()' 					ng-blur='$ctrl.buttonBlur()' 					ng-disabled='$ctrl.ngDisabled' 					ng-class='{checked: $ctrl.checked}' 					aria-pressed='{{$ctrl.checked}}'> 					<span class='tw-radio-check'></span> 				</button>"}}a.module("tw.form-components").directive("twRadio",b)}(window.angular),function(a){"use strict";function b(){return{require:"ngModel",bindToController:!0,controller:["$element","$scope","$transclude","$timeout",c],controllerAs:"$ctrl",replace:!1,transclude:!0,restrict:"EA",scope:{ngModel:"=",ngRequired:"=",ngDisabled:"=",options:"=",name:"@",placeholder:"@",filter:"@"},template:" 				<div class='btn-group btn-block dropdown tw-select' aria-hidden='false'> 					<button type='button' class='btn btn-input dropdown-toggle' 						data-toggle='dropdown' aria-expanded='false' 						ng-disabled='$ctrl.ngDisabled' 						ng-focus='$ctrl.buttonFocus()' 						tw-focusable> 						<span class='tw-select-selected' ng-if='$ctrl.ngModel != null'> 							<i class='icon pull-left {{$ctrl.selected.icon}}' ng-if='$ctrl.selected && $ctrl.selected.icon'> 							</i><i class='currency-flag currency-flag-{{$ctrl.selected.currency | lowercase}} pull-left' 								ng-if='$ctrl.selected && $ctrl.selected.currency'> 							</i><span class='circle circle-inverse pull-left'  								ng-class='{\"circle-sm\": $ctrl.selected.secondary, \"circle-xs\": !$ctrl.selected.secondary}' 								ng-if='$ctrl.selected.circleText || $ctrl.selected.circleImage || $ctrl.selected.circleIcon'> 								<span ng-if='$ctrl.selected.circleText'>{{$ctrl.selected.circleText}}</span> 								<img ng-if='$ctrl.selected.circleImage' ng-src='{{$ctrl.selected.circleImage}}' /> 								<i ng-if='$ctrl.selected.circleIcon' class='icon {{$ctrl.selected.circleIcon}}'></i> 							</span><span class='text-ellipsis'><span class='tw-select-label'>{{$ctrl.selected.label}}</span><span 							ng-if='$ctrl.selected.note' class='tw-select-note small m-l-1'>{{$ctrl.selected.note}}</span><span 							ng-if='$ctrl.selected.secondary' class='tw-select-secondary small text-ellipsis'>{{$ctrl.selected.secondary}}</span></span> 						</span> 						<span class='form-control-placeholder' ng-if='$ctrl.ngModel == null'>{{$ctrl.placeholder}}</span> 						<span class='caret'></span> 					</button> 					<ul class='dropdown-menu' role='menu'> 						<li ng-if='$ctrl.filter'> 							<a href='' class='tw-select-filter-link p-a-0' ng-focus='$ctrl.filterFocus()'> 								<div class='input-group'> 									<span class='input-group-addon'><i class='icon icon-search'></i></span> 									<input type='text' class='form-control tw-select-filter' placeholder='{{$ctrl.filter}}' 										ng-model='$ctrl.filterString' 										ng-change='$ctrl.filterChange()' 										ng-keydown='$ctrl.filterKeydown($event)' /> 								</div> 							</a> 						</li> 						<li ng-class='{active: !$ctrl.ngModel}' 							ng-if='$ctrl.placeholder && !$ctrl.ngRequired && !$ctrl.filter'> 							<a href='' 								ng-click='$ctrl.placeholderClick()' 								ng-focus='$ctrl.placeholderFocus()' 								value='' class='tw-select-placeholder' tw-focusable> 								{{$ctrl.placeholder}} 							</a> 						</li> 						<li ng-if='($ctrl.placeholder && !$ctrl.ngRequired) || $ctrl.filter' class='divider'></li> 						<li 							ng-repeat='option in $ctrl.filteredOptions' 							ng-class='{ 								active: $ctrl.ngModel === option.value, 								\"dropdown-header\": option.header, 								\"tw-select-option\": !option.header 							}'> 							<span ng-if='option.header'>{{option.header}}</span> 							<a href='' 								ng-if='!option.header' 								ng-click='$ctrl.optionClick(option)' 								ng-focus='$ctrl.optionFocus(option)' 								index='{{$index}}' 								class='tw-select-option-link' tw-focusable> 								<i class='icon {{option.icon}} pull-left' ng-if='option.icon'> 								</i><i class='currency-flag currency-flag-{{option.currency | lowercase}} pull-left' ng-if='option.currency'> 								</i><span class='circle circle-inverse pull-left' ng-class='{\"circle-sm\": option.secondary, \"circle-xs\": !option.secondary}' 									ng-if='option.circleText || option.circleImage || option.circleIcon'> 									<span ng-if='option.circleText'>{{option.circleText}}</span> 									<img ng-if='option.circleImage' ng-src='{{option.circleImage}}' /> 									<i ng-if='option.circleIcon' class='icon {{option.circleIcon}}'></i> 								</span>{{option.label}}<span 								ng-if='option.note' class='tw-select-note small m-l-1'>{{option.note}}</span><span 								ng-if='option.secondary' class='tw-select-secondary small text-ellipsis'>{{option.secondary}}</span> 							</a> 						</li> 						<li ng-if='$ctrl.hasTranscluded' class='divider'></li> 						<li ng-transclude ng-if='$ctrl.hasTranscluded' class='tw-select-transcluded'></li> 					</ul> 				</div> 				<input type='hidden' class='tw-select-hidden' 					name='{{$ctrl.name}}' 					value='{{$ctrl.ngModel}}' 					ng-disabled='$ctrl.ngDisabled' />"}}function c(b,c,j,k){function p(){b.triggerHandler("focus")}function q(a){m(G,F,a),b.find(".btn").focus()}function r(a){m(G,F,a)}function s(a){if(!$(a.target).hasClass("tw-select-filter")){var c=g(a);if(8===c)return a.preventDefault(),!1;var d=h(a);o(G,F,F.options,d),b.find(".active a").focus()}}function t(a){n(G,F),b.find(".btn").focus()}function u(){n(G,F)}function v(){return F.options.filter(w)}function w(a){var b=F.filterString&&x(F.filterString.toLowerCase());return b?a.label&&a.label.toLowerCase().search(b)>=0||a.note&&a.note.toLowerCase().search(b)>=0||a.secondary&&a.secondary.toLowerCase().search(b)>=0:!0}function x(a){return a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function y(){b.find(".tw-select-filter").focus()}function z(){F.filteredOptions=F.getFilteredOptions();var a=A(F.filteredOptions,F.selected);!a&&F.filteredOptions.length&&m(G,F,F.filteredOptions[0])}function A(b,c){var d;return b.forEach(function(b){c&&a.equals(c.value,b.value)&&(d=c)}),d}function B(a){var c=a.which||a.charCode||a.keyCode,d=b.find(".active"),e=d.find("a"),f=b.find(".tw-select-option-link");return 40===c?(E(d,e,f),a.preventDefault()):38===c?(D(d,e,f),a.preventDefault()):13===c&&(d.click(),b.find(".btn").focus(),a.preventDefault()),!0}function C(a){var b=F.filteredOptions[a.attr("index")];m(G,F,b)}function D(a,b,c){if(!a.length&&c.length)return void C($(c[c.length-1]));if(b[0]!==c[0]){var d=a.prevAll(".tw-select-option");return void C($(d[0]).find("a"))}}function E(a,b,c){if(!a.length&&c.length)return void C($(c[0]));if(b[0]!==c[c.length-1]){var d=a.nextAll(".tw-select-option");return void C($(d[0]).find("a"))}var e=$(".tw-select-transcluded");return e.length?void e.find("a").focus():void 0}var F=this,G=b.controller("ngModel");F.search="",i(G,F,F.options),l(G,F,b,F),d(F,c,G,b),e(F,b,G,F.options,k),f(j,F),F.buttonFocus=p,F.optionClick=q,F.optionFocus=r,F.optionKeypress=s,F.placeholderFocus=u,F.placeholderClick=t,F.filterFocus=y,F.filterChange=z,F.filterKeydown=B,F.isOptionFiltered=w,F.getFilteredOptions=v,F.filterString="",F.filteredOptions=F.getFilteredOptions()}function d(a,b,c,d){b.$watch("$ctrl.ngModel",function(b,d){(b||d)&&b!==d&&c.$setDirty(),j(b,d,a)}),b.$watch("$ctrl.options",function(b,e){b!==e&&(i(c,a,a.options),l(c,a,d,a),a.filteredOptions=a.getFilteredOptions())})}function e(a,b,c,d,e){b.find(".btn, .dropdown-menu").on("focusout",function(){e(function(){0!==b.find(".btn:focus").length||b.find(".btn-group").hasClass("open")||b.trigger("blur")},150)}),b.on("blur",function(a){c.$setTouched()}),b.find(".btn").on("keypress",function(b){a.optionKeypress(b)}),b.find(".btn").on("click",function(){e(function(){b.attr("filter")?b.find(".tw-select-filter").focus():b.find(".active a").focus()})}),b.find("ul").on("keypress","a",function(b){a.optionKeypress(b)})}function f(a,b){a(function(a){(a.length>1||""!==a.text().trim())&&(b.hasTranscluded=!0)})}function g(a){return a.which||a.charCode||a.keyCode}function h(a){return String.fromCharCode(g(a))}function i(a,b,c){if(b.ngModel){var d=k(b.options,b.ngModel);m(a,b,d)}}function j(a,b,c){if(a!==b){var d=k(c.options,a);d?c.selected=d:c.selected=null}}function k(b,c){var d=!1;return b.forEach(function(b){a.equals(b.value,c)&&(d=b)}),d}function l(a,b,c,d){(b.ngRequired||d.required)&&!b.ngModel&&b.options[0]&&m(a,b,b.options[0])}function m(a,b,c){a.$setViewValue(c.value),a.$commitViewValue(),b.selected=c}function n(a,b){a.$setViewValue(null),a.$commitViewValue(),b.selected=!1}function o(a,b,c,d){var e=p(a,b,c,b.search+d);return e?b.search+=d:(b.search=d,e=p(a,b,c,b.search)),e}function p(a,b,c,d){var e=!1,f=d.toLowerCase();return c.forEach(function(c){!e&&c.label&&(0===c.label.toLowerCase().indexOf(f)||c.note&&0===c.note.toLowerCase().indexOf(f)||c.secondary&&0===c.secondary.toLowerCase().indexOf(f))&&(m(a,b,c),e=!0)}),e}a.module("tw.form-components").directive("twSelect",b)}(window.angular),function(a){"use strict";function b(){return{bindToController:!0,controller:[c],controllerAs:"$ctrl",replace:!1,transclude:!0,restrict:"E",scope:{title:"@",cta:"@",onUpload:"=",accept:"="},link:d,template:'<div class="text-center tw-upload-droppable-box" ng-class="{\'active\': $ctrl.isActive}"> 				<i class="icon icon-upload tw-upload-droppable-icon"></i>				<h4 class="m-t-2">{{$ctrl.title}}</h4>				<div class="row">					<div class="col-xs-12 col-sm-6 col-sm-offset-3 m-t-1">					<ng-transclude></ng-transclude>					<label class="link" for="file-upload">{{$ctrl.cta}}</label>					<input tw-file-select id="file-upload" type="file" accept={{$ctrl.accept}} class="hidden" on-user-input="$ctrl.onManualUpload"/>					</div>				</div>			</div>'}}function c(){var b=this;b.dragCounter=0,b.isActive=!1,b.onManualUpload=function(){b.onUpload&&"function"==typeof b.onUpload&&b.onUpload(a.element(document.querySelector("#file-upload"))[0].files[0])},b.onDrop=function(a){b.onUpload&&"function"==typeof b.onUpload&&b.onUpload(a),b.isActive=!1,b.dropCounter=0},b.onDragChange=function(a){a?(b.dragCounter++,1===b.dragCounter&&(b.isActive=!0)):(b.dragCounter--,0===b.dragCounter&&(b.isActive=!1))}}function d(a,b,c){b[0].addEventListener("dragenter",function(b){b.preventDefault(),a.$ctrl.onDragChange(!0),a.$apply()},!1),b[0].addEventListener("dragover",function(a){a.preventDefault()},!1),b[0].addEventListener("dragleave",function(b){b.preventDefault(),a.$ctrl.onDragChange(!1),a.$apply()},!1),b[0].addEventListener("drop",function(b){b.preventDefault(),a.$ctrl.onDrop(b.dataTransfer.files[0]),a.$apply()},!1)}function e(){return{bindToController:!0,controller:function(){},controllerAs:"$ctrl",replace:!1,restrict:"A",scope:{onUserInput:"="},link:f}}function f(a,b){b.on("change",function(){a.$ctrl.onUserInput&&"function"==typeof a.$ctrl.onUserInput&&a.$ctrl.onUserInput()})}a.module("tw.form-components").directive("twFileSelect",e).controller("TwUploadDroppableController",c).directive("twUploadDroppable",b)}(window.angular);